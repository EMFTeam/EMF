# -*- ck2.events -*-


namespace = emf_core

# emf_core.30
#
# Map-specific de jure adjustment adjunct to decision
# emf_create_hre (SWMH map version)
character_event = {
	id = emf_core.30
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Reactivate and restore k_lower_lorraine, k_upper_lorraine,
		# k_saxony, k_schwaben, k_carinthia, and k_franconia. See
		# emf_startup_map.txt for how we got here and where we're returning.

		# Former Lotharingia ...

		any_landed_title = {
			limit = {
				OR = {
					# Former Lotharingia
					title = k_upper_lorraine
					title = k_lower_lorraine
					title = k_frisia
					# Former Germany
					title = k_saxony
					title = k_franconia
					title = k_schwaben
					title = k_carinthia # Part of former Bavaria
					# Active titles
					title = k_bavaria
					title = k_bohemia # naughty semi-ahistorical de jure swap (but we do what we can)
					title = k_lotharingia # titular
					title = k_germany # titular
				}
			}
			if = {
				limit = { NOT = { is_title_active = THIS } }
				any_landed_title = {
					limit = { has_title_flag = emf_startup_vassal_of_@PREV }
					clr_title_flag = emf_startup_vassal_of_@PREV
					de_jure_liege = PREV
				}
				activate_title = { title = THIS status = yes }
			}
			de_jure_liege = e_hre
		}

		# Deactivate k_lotharingia and k_germany if possible.
		# [NOTE: Now, we just make the title defunct so that title history is retained.]
		# [Otherwise, screw it, let the held ones float around
		# titular. If held by AI, they'll be destroyed as soon
		# as it's possible by emf_core.100 / autodestroy.]

		any_landed_title = {
			limit = {
				OR = { title = k_lotharingia title = k_germany }
				has_holder = no
				is_title_active = THIS
			}
			set_title_flag = emf_defunct
		}

		if = {
			limit = { is_title_active = e_hre_french }
			activate_title = { title = e_hre_french status = no }
		}
	}
}


# emf_core.31
#
# Map-specific de jure adjustment adjunct to decision
# emf_create_french_hre (SWMH map version)
character_event = {
	id = emf_core.31
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Former e_france
		if = {
			limit = { is_title_active = e_france }
			activate_title = { title = e_france status = no }
		}

		any_landed_title = {
			limit = {
				OR = {
					# Former Lotharingia
					title = k_upper_lorraine
					title = k_lower_lorraine
					title = k_frisia
					# Active titles
					title = k_france
					title = k_brittany
					title = k_aquitaine
					title = k_burgundy
					title = k_lotharingia # titular
				}
			}
			if = {
				limit = { NOT = { is_title_active = THIS } }
				any_landed_title = {
					limit = { has_title_flag = emf_startup_vassal_of_@PREV }
					clr_title_flag = emf_startup_vassal_of_@PREV
					de_jure_liege = PREV
				}
				activate_title = { title = THIS status = yes }
			}
			if = {
				limit = { NOT = { title = k_frisia } }
				de_jure_liege = e_hre_french
			}
			else_if = {
				limit = { has_global_flag = emf_ahistorical_empires }
				if = {
					limit = { NOT = { is_title_active = e_germany } }
					activate_title = { title = e_germany status = yes }
				}
				de_jure_liege = e_germany
			}
			else = {
				de_jure_liege = e_null
			}
		}

		k_lotharingia = {
			if = {
				limit = {
					has_holder = no
					is_title_active = THIS
				}
				set_title_flag = emf_defunct
			}
		}

		# Turn e_hre into e_germany if ahistorical empires are enabled, else let e_null consume it.
		e_hre = {
			# And finally deactivate the other HRE
			if = {
				limit = { is_title_active = THIS }
				activate_title = { title = THIS status = no }
			}
			# Choose a new correct de jure empire
			if = {
				limit = { has_global_flag = emf_ahistorical_empires }
				any_direct_de_jure_vassal_title = { de_jure_liege = e_germany }
			}
			else = { any_direct_de_jure_vassal_title = { de_jure_liege = e_null } }
		}
	}
}
