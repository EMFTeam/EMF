# -*- ck2.events -*-

namespace = LT

# Written by Joachim

### Kievan Rus Events ###
# Turn Yngvar/Igor Russian to simulate that the AI uses the decision at the start of the game
character_event = {
	id = LT.40001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		start_date == 936.8.7
		is_save_game = no
		character = 600
	}

	immediate = {
		if = {
			limit = { ai = yes }
			culture = russian
			slavic_pagan = { save_event_target_as = target_religion }
			if = {
				limit = {
					NOT = { religion = slavic_pagan }
					emf_can_convert_religion = yes
				}
				emf_character_set_religion_to_target_religion = yes
			}
			any_close_relative = {
				limit = {
					is_alive = yes
					ai = yes
				}
				culture = russian
				if = {
					limit = {
						NOT = { religion = slavic_pagan }
						emf_can_convert_religion = yes
					}
					emf_character_set_religion_to_target_religion = yes
				}
			}
		}
		character_event = { id = LT.40002 days = 2920 }
	}
}

# Potential birth of Sviatoslav I of Kiev
character_event = {
	id = LT.40002
	hide_window = yes
	is_triggered_only = yes
	
	only_capable = yes
	prisoner = no

	trigger = {    
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		NOR = {
			trait = eunuch
			trait = celibate
			emf_is_sterile_trigger = yes
			fertility <= 0
		}
		c_601 = {
			OR = {
				is_married = ROOT
				is_consort = ROOT
				ROOT = { is_consort = PREV }
				is_lover = ROOT
			}
			is_incapable = no
			prisoner = no
			is_pregnant = no
			NOR = {
				trait = celibate
				trait = eunuch
				emf_is_sterile_trigger = yes
				fertility <= 0
			}
			is_opposite_sex = ROOT # In case someone messes with the space-time continuum
			is_female = yes # In case someone messes with the space-time continuum
			practical_age <= 44 # Else, event-impregnation will kill the woman when baby is born (a weird CK2 thing)
		}
	}

	immediate = {
		c_601 = { impregnate = ROOT }
	}
}

### Otto the Great Events ###
## Otto wants Lorraine ##
# Choice given to Otto about invading Lorraine
narrative_event = {
	id = LT.40003
	desc = EVTDESC_LT_40003
	title = EVTTITLE_LT_40003
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	portrait = event_target:giselbert
	is_triggered_only = yes
	only_playable = yes
	prisoner = no
	war = no

	trigger = {
		character = 1282
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		year < 950
		OR = {
			has_character_flag = otto_thankmars_rebellion_event
			year >= 940
		}
		NOT = { has_character_flag = otto_traitor_lorraine_event }
		c_7813 = {
			is_alive = yes
			OR = {
				has_landed_title = d_upper_lorraine
				has_landed_title = d_lower_lorraine
			}
		}
		NOR = {
			has_landed_title = d_upper_lorraine
			any_realm_lord = { has_landed_title = d_upper_lorraine }
		}
	}

	immediate = {
		set_character_flag = otto_traitor_lorraine_event
		c_7813 = { save_event_target_as = giselbert }
	}

	option = {      
		name = EVTOPTA_LT_40003
		c_7813 = {
			show_scope_change = no
			any_demesne_title = {
				show_scope_change = no
				ROOT = {
					show_scope_change = no
					add_claim = PREV
				}
			}
			narrative_event = { id = LT.40004 }
		}
		war = {
			target = event_target:giselbert
			casus_belli = claim_all
		}
	}
	option = {      
		name = EVTOPTB_LT_40003
		trigger = {
			ai = no
		}
	}
}

# Giselbert is informed about Otto's attack
narrative_event = {
	id = LT.40004
	desc = EVTDESC_LT_40004
	title = EVTTITLE_LT_40004
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	portrait = event_target:otto
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		character = 7813 # Giselbert
		c_1282 = { is_alive = yes }
	}

	immediate = {
		c_1282 = { save_event_target_as = otto }
	}

	option = {
		name = EVTOPTA_LT_40004
		custom_tooltip = { text = EVTOPTA_LT_40004_TT }
	}
}

## Thankmar's Rebellion ##
# Thankmar is given the chance of rebelling against Otto
narrative_event = {
	id = LT.40005
	desc = EVTDESC_LT_40005
	title = EVTTITLE_LT_40005
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes
	portrait = event_target:otto
	only_playable = yes
	prisoner = no
	war = no

	trigger = {
		character = 261394 # Thankmar
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		NOT = { has_character_flag = thankmar_rebellion }
		year < 940
		emf_hre_has_holder = no
		c_1282 = { # Otto
			is_alive = yes
			has_landed_title = k_germany
			NOT = { has_character_flag = otto_thankmars_rebellion_event }
		}
	}

	immediate = {
		set_character_flag = thankmar_rebellion
		c_1282 = { save_event_target_as = otto }
	}

	option = {
		name = EVTOPTA_LT_40005
		unsafe_war = {
			target = event_target:otto
			casus_belli = thankmars_rebellion
		}
		event_target:otto = {
			set_character_flag = otto_thankmars_rebellion_event
			any_vassal = {
				limit = {
					higher_tier_than = BARON
					OR = {
						is_feudal = yes
						is_tribal = yes
					}
					any_dejure_liege = {
						OR = {
							title = k_germany
							title = k_bavaria
							title = k_frisia
						}
					}
				}
				narrative_event = { id = LT.40006 }
			}
			narrative_event = { id = LT.40007 }
		}
	}

	option = {
		name = EVTOPTB_LT_40005
		trigger = {
			OR = {
				ai = no
				event_target:otto = { ai = yes }
			}
		}
	}
}

# Dukes are invited to join the rebellion
narrative_event = {
	id = LT.40006
	desc = EVTDESC_LT_40006
	title = EVTTITLE_LT_40006
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes
	only_playable = yes
	prisoner = no

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		c_261394 = {
			is_alive = yes
			war = yes
		}
	}
	
	immediate = {
		c_261394 = { save_event_target_as = thankmar }
	}

	option = {
		name = EVTOPTA_LT_40006
		set_defacto_liege = THIS
		emf_liege_change = yes
		join_attacker_wars = event_target:thankmar
		ai_chance = {
			factor = 2
			modifier = {
				factor = 1.5
				tier = DUKE
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 2
				likes_better_than = {
					who = event_target:thankmar
					than = event_target:otto
				}
			}
		}
	}

	option = {
		trigger = {
			OR = {
				ai = no
				NOR = {
					has_landed_title = d_franconia
					has_landed_title = c_ostfriesland
				}
			}
		}
		name = EVTOPTB_LT_40006
		ai_chance = {
			factor = 98
			modifier = {
				factor = 1.5
				tier = COUNT
			}
			modifier = {
				factor = 1.5
				trait = content
			}
			modifier = {
				factor = 1.5
				likes_better_than = {
					who = event_target:otto
					than = event_target:thankmar
				}
			}
		}
	}
}

# Otto is informed of Thankmar's betrayal
narrative_event = {
	id = LT.40007
	desc = EVTDESC_LT_40007
	title = EVTTITLE_LT_40007
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
	}

	immediate = {

	}

	option = {
		name = EVTOPTA_LT_40007
	}
}

# Thankmar won rebellion
narrative_event = {
	id = LT.40009
	desc = EVTDESC_LT_40009
	title = EVTTITLE_LT_40009
	picture = GFX_evt_magnificent_castle
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
	}

	option = {
		name = EVTOPTA_LT_40009
		prestige = 250
	}

	option = {
		name = EVTOPTB_LT_40009
		trigger = {
			ai = no
			emf_hre_has_holder = no
			has_landed_title = k_germany
		}
		prestige = 500
		custom_tooltip = { text = EVTOPTB_LT_40009_TT }
		hidden_effect = {
			# Narrative event
			any_playable_ruler = {
				limit = {
					is_within_diplo_range = ROOT
				}
				narrative_event = { id = LT.40010 days = 1 }                
			}
			# Mark preexisting claims so that we don't clear them at the end
			any_claim = {
				set_flag = emf_prior_claim_by_@ROOT
			}
			any_landed_title = {
				limit = {
					OR = { # Former Germany & Bavaria
						title = k_saxony
						title = k_franconia
						title = k_schwaben
						title = k_carinthia # Part of former Bavaria (Bavaria is already active & de jure)
					}
				}
				any_landed_title = {
					limit = { has_flag = emf_startup_vassal_of_@PREV }
					clr_flag = emf_startup_vassal_of_@PREV
					de_jure_liege = PREV
				}
				activate_title = { title = THIS status = yes }
				de_jure_liege = e_hre
			}
			# Move all old kingdoms into Empire of Germania
			e_hre = {
				if = {
					limit = { has_game_rule = { name = ahistorical_empires value = on } }
					any_direct_de_jure_vassal_title = {
						de_jure_liege = e_germany
					}
				}
				else = {
					any_direct_de_jure_vassal_title = {
						de_jure_liege = e_null
					}
				}
				set_flag = emf_defunct
			}
			# Fix Thankmar's title
			k_germany = {
				k_saxony = {
					grant_title = ROOT
					copy_title_laws = PREV
					copy_title_history = PREV
					emf_copy_title_state_from_PREV = yes
					emf_make_primary_title = yes
				}
				set_flag = emf_defunct
				emf_destroy_title = yes
			}
			## Grant titles ##
			# Franconia #
			random_vassal = {
				limit = {
					higher_tier_than = BARON
					any_demesne_title = {
						tier = COUNT
						kingdom = { title = k_franconia }
					}
					is_theocracy = no
					is_republic = no
				}
				preferred_limit = {
					has_landed_title = d_franconia
				}
				preferred_limit = {
					tier = DUKE
					capital_scope = {
						k_franconia = {
							capital_scope = {
								province = PREVPREV
							}
						}
					}
				}
				preferred_limit = {
					tier = DUKE
					capital_scope = {
						de_jure_liege_or_above = k_franconia
					}
					any_demesne_title = {
						tier = COUNT
						k_franconia = {
							capital_scope = {
								county = {
									title = PREVPREVPREV
								}
							}
						}
					}
				}
				preferred_limit = {
					tier = DUKE
					capital_scope = {
						de_jure_liege_or_above = k_franconia
					}
				}
				preferred_limit = {
					capital_scope = {
						k_franconia = {
							capital_scope = {
								province = PREVPREV
							}
						}
					}
				}
				preferred_limit = {
					capital_scope = {
						de_jure_liege_or_above = k_franconia
					}
					any_demesne_title = {
						tier = COUNT
						k_franconia = {
							capital_scope = {
								county = {
									title = PREVPREVPREV
								}
							}
						}
					}
				}
				preferred_limit = {
					capital_scope = {
						de_jure_liege_or_above = k_franconia
					}
				}
				save_event_target_as = franconia_king
				grant_title_no_opinion = k_franconia
				emf_liege_change = yes
			}
			any_vassal = {
				limit = {
					primary_title = {
						de_jure_liege_or_above = k_franconia
					}
					lower_tier_than = event_target:franconia_king
				}
				set_defacto_liege = event_target:franconia_king
				emf_liege_change = yes
			}
			# Swabia #
			random_vassal = {
				limit = {
					higher_tier_than = BARON
					any_demesne_title = {
						tier = COUNT
						kingdom = { title = k_schwaben }
					}
					is_theocracy = no
					is_republic = no
				}
				preferred_limit = {
					has_landed_title = d_swabia
				}
				preferred_limit = {
					tier = DUKE
					capital_scope = {
						k_schwaben = {
							capital_scope = {
								province = PREVPREV
							}
						}
					}
				}
				preferred_limit = {
					tier = DUKE
					capital_scope = {
						de_jure_liege_or_above = k_schwaben
					}
					any_demesne_title = {
						tier = COUNT
						k_schwaben = {
							capital_scope = {
								county = {
									title = PREVPREVPREV
								}
							}
						}
					}
				}
				preferred_limit = {
					tier = DUKE
					capital_scope = {
						de_jure_liege_or_above = k_schwaben
					}
				}
				preferred_limit = {
					capital_scope = {
						k_schwaben = {
							capital_scope = {
								province = PREVPREV
							}
						}
					}
				}
				preferred_limit = {
					capital_scope = {
						de_jure_liege_or_above = k_schwaben
					}
					any_demesne_title = {
						tier = COUNT
						k_schwaben = {
							capital_scope = {
								county = {
									title = PREVPREVPREV
								}
							}
						}
					}
				}
				preferred_limit = {
					capital_scope = {
						de_jure_liege_or_above = k_schwaben
					}
				}
				save_event_target_as = swabia_king
				grant_title_no_opinion = k_schwaben
				emf_liege_change = yes
			}
			any_vassal = {
				limit = {
					primary_title = {
						de_jure_liege_or_above = k_schwaben
					}
					lower_tier_than = event_target:swabia_king
				}
				set_defacto_liege = event_target:swabia_king
				emf_liege_change = yes
			}
			# Bavaria #
			if = {
				limit = {
					k_bavaria = {
						OR = {
							has_holder = no
							holder = ROOT
						}
					}
				}
				random_vassal = {
					limit = {
						higher_tier_than = BARON
						any_demesne_title = {
							tier = COUNT
							kingdom = { title = k_bavaria }
						}
						is_theocracy = no
						is_republic = no
					}
					preferred_limit = {
						has_landed_title = d_bavaria
					}
					preferred_limit = {
						tier = DUKE
						capital_scope = {
							k_bavaria = {
								capital_scope = {
									province = PREVPREV
								}
							}
						}
					}
					preferred_limit = {
						tier = DUKE
						capital_scope = {
							de_jure_liege_or_above = k_bavaria
						}
						any_demesne_title = {
							tier = COUNT
							k_bavaria = {
								capital_scope = {
									county = {
										title = PREVPREVPREV
									}
								}
							}
						}
					}
					preferred_limit = {
						tier = DUKE
						capital_scope = {
							de_jure_liege_or_above = k_bavaria
						}
					}
					preferred_limit = {
						capital_scope = {
							k_bavaria = {
								capital_scope = {
									province = PREVPREV
								}
							}
						}
					}
					preferred_limit = {
						capital_scope = {
							de_jure_liege_or_above = k_bavaria
						}
						any_demesne_title = {
							tier = COUNT
							k_bavaria = {
								capital_scope = {
									county = {
										title = PREVPREVPREV
									}
								}
							}
						}
					}
					preferred_limit = {
						capital_scope = {
							de_jure_liege_or_above = k_bavaria
						}
					}
					save_event_target_as = bavaria_king
					grant_title_no_opinion = k_bavaria
					emf_liege_change = yes
				}
				any_vassal = {
					limit = {
						primary_title = {
							de_jure_liege_or_above = k_bavaria
						}
						lower_tier_than = event_target:bavaria_king
					}
					set_defacto_liege = event_target:bavaria_king
					emf_liege_change = yes
				}
				# Carinthia
				random_vassal = {
					limit = {
						higher_tier_than = BARON
						any_demesne_title = {
							tier = COUNT
							kingdom = { title = k_carinthia }
						}
						is_theocracy = no
						is_republic = no
					}
					preferred_limit = {
						tier = DUKE
						capital_scope = {
							k_carinthia = {
								capital_scope = {
									province = PREVPREV
								}
							}
						}
					}
					preferred_limit = {
						tier = DUKE
						capital_scope = {
							de_jure_liege_or_above = k_carinthia
						}
						any_demesne_title = {
							tier = COUNT
							k_carinthia = {
								capital_scope = {
									county = {
										title = PREVPREVPREV
									}
								}
							}
						}
					}
					preferred_limit = {
						tier = DUKE
						capital_scope = {
							de_jure_liege_or_above = k_carinthia
						}
					}
					preferred_limit = {
						capital_scope = {
							k_carinthia = {
								capital_scope = {
									province = PREVPREV
								}
							}
						}
					}
					preferred_limit = {
						capital_scope = {
							de_jure_liege_or_above = k_carinthia
						}
						any_demesne_title = {
							tier = COUNT
							k_carinthia = {
								capital_scope = {
									county = {
										title = PREVPREVPREV
									}
								}
							}
						}
					}
					preferred_limit = {
						capital_scope = {
							de_jure_liege_or_above = k_carinthia
						}
					}
					save_event_target_as = carinthia_king
					grant_title_no_opinion = k_carinthia
					emf_liege_change = yes
				}
				any_vassal = {
					limit = {
						primary_title = {
							de_jure_liege_or_above = k_carinthia
						}
						lower_tier_than = event_target:carinthia_king
					}
					set_defacto_liege = event_target:carinthia_king
					emf_liege_change = yes
				}
			}
			# Set independence for remaining vassals outside of the north
			any_vassal = {
				limit = {
					higher_tier_than = BARON
					NOT = {
						any_dejure_liege = {
							OR = {
								title = k_saxony
								title = k_pomerania
								title = k_frisia
							}
						}
					}
				}
				set_defacto_liege = THIS
				emf_liege_change = yes
			}
			# Clear claims that were added from all this breaking of vassalage
			any_claim = {
				limit = { NOT = { has_flag = emf_prior_claim_by_@ROOT } }
				remove_claim = ROOT
			}
			any_claim = {
				clr_flag = emf_prior_claim_by_@ROOT
			}
			# Always activate e_germany since e_hre is now defunct, it'll just only be titular without ahistorical empires
			activate_title = {
				title = e_germany
				status = yes
			}
			set_global_flag = hre_removed
		}
	}
}

# A return to the old ways
narrative_event = {
	id = LT.40010
	desc = EVTDESC_LT_40010
	title = EVTTITLE_LT_40010
	picture = GFX_evt_magnificent_castle
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
	}

	immediate = {

	}

	option = {
		name = EVTOPTA_LT_40010
	}
}

# Otto won against rebellion
narrative_event = {
	id = LT.40011
	desc = EVTDESC_LT_40011
	title = EVTTITLE_LT_40011
	picture = GFX_evt_magnificent_castle
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
	}

	immediate = {

	}

	option = {
		name = EVTOPTA_LT_40011
		prestige = 500
	}
}

## Otto's Invasion of Italy ##
# Choice given to Otto about enforcing his rights on the Italian lands
narrative_event = {
	id = LT.40012
	desc = EVTDESC_LT_40012
	title = EVTTITLE_LT_40012
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes
	portrait = event_target:italian_king
	only_playable = yes
	prisoner = no
	war = no

	trigger = {
		character = 1282
		real_tier = KING
		has_landed_title = k_germany
		year = 955
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		NOT = { has_character_flag = otto_italian_campaign_event }
		NOR = { 
			has_landed_title = k_italy 
			has_landed_title = e_hre
		}
		k_italy = {
			has_holder = yes
			holder_scope = {
				independent = yes
			}
		}
	}

	immediate = {
		set_character_flag = otto_italian_campaign_event
		k_italy = {
			owner = {
				save_event_target_as = italian_king
			}
		}
	}

	option = {
		name = EVTOPTA_LT_40012
		hidden_tooltip = {
			add_claim = k_italy
		}
		war = {
			target = event_target:italian_king
			casus_belli = claim
			thirdparty_title = k_italy
		}
		event_target:italian_king = {
			narrative_event = { id = LT.40013 days = 1 }
			any_vassal = {
				narrative_event = { id = LT.40013 }
			}
		}
	}

	option = {
		name = EVTOPTB_LT_40012
		trigger = {
			ai = no
		}
	}
}

# Italians informed about Otto's attack
narrative_event = {
	id = LT.40013
	desc = EVTDESC_LT_40013
	title = EVTTITLE_LT_40013
	picture = GFX_evt_large_army
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
	}

	immediate = {

	}

	option = {
		name = EVTOPTA_LT_40013
		trigger = {
			has_landed_title = k_italy
		}
	}

	option = {
		name = EVTOPTB_LT_40013
		trigger = {
			NOT = { has_landed_title = k_italy }
		}
	}
}

## Otto the Great ##
# Pre-requisites Done
narrative_event = {
	id = LT.40014
	desc = EVTDESC_LT_40014
	title = EVTTITLE_LT_40014
	picture = GFX_evt_magnificent_castle
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes
	only_playable = yes
	prisoner = no
	war = no

	trigger = {
		character = 1282
		real_tier = KING
		year = 960
		has_landed_title = k_germany
		has_landed_title = k_italy
		NOT = { has_landed_title = e_hre }
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		NOT = { has_character_flag = otto_coronation_event }
	}

	immediate = {
		set_character_flag = otto_coronation_event
	}

	option = {
		name = EVTOPTA_LT_40014
		narrative_event = { id = LT.40015 }
		any_playable_ruler = {
			limit = { is_within_diplo_range = ROOT }
			narrative_event = { id = LT.40015 }
		}
		if = {
			limit = { has_nickname = no }
			give_nickname = nick_the_great
		}
		if = {
			limit = { character = 1282 }
			create_bloodline = {
				type = otto
			}
		}
	}

	option = {
		name = EVTOPTB_LT_40014
		trigger = {
			ai = no
		}
	}
}

# Coronation
narrative_event = {
	id = LT.40015
	desc = EVTDESC_LT_40015
	title = EVTTITLE_LT_40015
	picture = GFX_evt_found_hre
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
	}

	immediate = {

	}

	option = {
		name = EVTOPTA_LT_40015
		trigger = {
			character = 1282
		}
		prestige = 200
	}

	option = {
		name = EVTOPTB_LT_40015
		trigger = {
			NOT = { character = 1282 }
		}
	}
}

### Fatimids ###
narrative_event = {
	id = LT.40016
	desc = EVTDESC_LT_40016
	title = EVTTITLE_LT_40016
	picture = GFX_evt_battle
	border = GFX_event_narrative_frame_war
	is_triggered_only = yes
	portrait = event_target:sultan_egypt

	min_age = 16
	only_playable = yes
	only_capable = yes
	prisoner = no
	war = no
	religion = ismaili

	trigger = {
		has_landed_title = k_africa
		year = 960
		NOT = { has_global_flag = fatimid_invasion_egypt }
		NOT = {
			has_game_rule = {
				name = otto_story
				value = off
			}
		}
		k_egypt = { has_holder = yes }
		k_egypt = {
			holder_scope = {
				NOT = { character = ROOT }
				religion = sunni
			}
		}
	}

	immediate = {
		set_global_flag = fatimid_invasion_egypt
		k_egypt = {
			owner = {
				save_event_target_as = sultan_egypt
			}
		}
	}

	option = {
		name = EVTOPTA_LT_40016
		hidden_tooltip = {
			add_claim = k_egypt
			add_claim = c_cairo
		}
		war = {
			target = event_target:sultan_egypt
			casus_belli = claim_all
		}
	}

	option = {
		name = EVTOPTB_LT_40016
		prestige = -250
		piety = -100
	}
}
