#!/usr/bin/env python3

import sys
import datetime
import ck2parser

g_emf_path = ck2parser.rootpath / 'EMF/EMF'
g_core_effect_path = g_emf_path / 'common/scripted_effects/emf_core_character_codegen_effects.txt'

###

g_codegen_file_hdr = '''
################################################################################
# WARNING: Do NOT modify this file manually!
#
# This file is code-generated and any manual changes will be overwritten.
#
# Generated by src/traits_codegen.py on: {}
################################################################################
'''.format(datetime.date.today())

###


class Trait:
	GENERAL = 0
	PERSONALITY = 1
	LIFESTYLE = 2
	LEADER = 3
	EDUCATION = 4
	CHILDHOOD = 5

	def __init__(self, tag, archetype):
		self.tag = tag
		self.archetype = archetype


def main():
	moddirs = (g_emf_path,)
	parser = ck2parser.SimpleParser(*moddirs)
	loc = ck2parser.get_localisation(moddirs=moddirs)

	global g_traits
	g_traits = {}

	for _, tree in parser.parse_files('common/traits/*.txt'):
		for n, v in tree:
			if v.has_pair('leader', 'yes'):
				archetype = Trait.LEADER
			elif v.has_pair('personality', 'yes'):
				archetype = Trait.PERSONALITY
			elif v.has_pair('childhood', 'yes'):
				archetype = Trait.CHILDHOOD
			elif v.has_pair('lifestyle', 'yes'):
				archetype = Trait.LIFESTYLE
			elif v.has_pair('education', 'yes'):
				archetype = Trait.EDUCATION
			else:
				archetype = Trait.GENERAL
			g_traits[n.val] = Trait(n.val, archetype)

	with g_core_effect_path.open('w', encoding='cp1252', newline='\n') as f:
		print_file_header(f, 'ck2.scripted_effects')
		print_effect_remove_all_traits(f, loc)

	return 0


def print_file_header(f, spec=None):
	if spec:
		print('# -*- {} -*-'.format(spec), file=f)
	print(g_codegen_file_hdr, file=f)


def print_effect_remove_all_traits(f, loc):
	print('''
emf_remove_all_traits = {''', file=f)

	for t in g_traits:
		print('\tremove_trait = {} # {}'.format(t, loc.get(t, '<< NOT LOCALISED >>')), file=f)

	print('}', file=f)


###


if __name__ == '__main__':
	sys.exit(main())
