# Targetted decisions are possible vs _all_ other characters and shown are in the Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] ('self' MUST be set for decisions targetting only the taker, the other filter types can be set to lessen CPU load)
# ai_target_filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] (which characters for which the AI evaluates the decision.)
#	court: all characters in the AI's host court, including prisoners, and characters currently away (wards, prisoners, etc)
#	home_court: all characters in the AI's home court, including prisoners, and characters currently away (wards, prisoners, etc)
#	vassals: direct vassal rulers of the AI's employer
#	sub_realm: all characters below the AI's employer
#	realm: all characters in the same top realm as the AI
#	dynasty: all members of the same dynasty
#	rivals: your rivals plus any character you have an opinion modifier with 'crime = yes' set (the same set of characters the 'is_foe' trigger evaluates)
#	all: all living characters (Avoid if possible. VERY CPU-HEAVY!)
#	

targetted_decisions = {

	emf_debug_vassalize = {
		ai_target_filter = self
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			is_ruler = yes
			NOT = { vassal_of = FROM }
			lower_tier_than = FROM
		}
		allow = {
		}
		effect = {
			set_defacto_liege = FROM
			pf_liege_change_effect = yes
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_kill = {
		ai_target_filter = self
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
		}
		allow = {
		}
		effect = {
			death = yes
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_abdicate = {
		ai_target_filter = self
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			is_ruler = yes
		}
		allow = {
		}
		effect = {
			abdicate = yes
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_lower_vassal_opinion = {
		ai_target_filter = self
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			is_playable = yes
			higher_real_tier_than = COUNT
		}
		allow = {
			custom_tooltip = {
				text = emf_debug_ctt_has_playable_vassals
				hidden_tooltip = {			
					any_vassal = {
						is_playable = yes
					}
				}
			}
		}
		effect = {
			hidden_tooltip = {
				any_vassal = {
					limit = { is_playable = yes }
					opinion = { who = PREV modifier = opinion_debug_liege_neg25 years = 3 }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_raise_vassal_opinion = {
		ai_target_filter = self
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			is_playable = yes
			higher_real_tier_than = COUNT
		}
		allow = {
			custom_tooltip = {
				text = emf_debug_ctt_has_playable_vassals
				hidden_tooltip = {			
					any_vassal = {
						is_playable = yes
					}
				}
			}
		}
		effect = {
			hidden_tooltip = {
				any_vassal = {
					limit = { is_playable = yes }
					opinion = { who = PREV modifier = opinion_debug_liege_pos25 years = 3 }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_usurp_all = {
		ai_target_filter = self
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			is_ruler = yes
			any_demesne_title = {
				is_landless_type_title = no
			}
		}
		allow = {
		}
		effect = {
			hidden_tooltip = {
				any_demesne_title = {
					limit = {
						higher_tier_than = COUNT
						is_landless_type_title = no
					}
					usurp_title = FROM
				}
				any_demesne_title = {
					limit = { is_landless_type_title = no }
					usurp_title = FROM
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
}


# Title decisions are possible vs _all_ titles and are shown in the Title Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [capital/primary_title/owned/vassal_owned/sub_realm_owned/realm_owned/dynasty_owned/all]
# ai_target_filter = [capital/primary_title/owned/vassal_owned/sub_realm_owned/realm_owned/dynasty_owned/all] (which titles for which the AI evaluates the decision.)
#	owned: all titles owned by the AI
#	vassal_owned: all titles owned by direct vassal rulers of the AI's employer
#	sub_realm_owned: all titles below the AI's employer
#	realm_owned: all titles in the same top realm as the AI
#	dynasty_owned: all titles owned by members of the same dynasty
#	all: all titles (Avoid if possible. VERY CPU-HEAVY!)
#	

title_decisions = {
	emf_debug_gain_under_title = {
		ai_target_filter = capital
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			higher_tier_than = BARON
			is_titular = no
		}
		allow = {
		}
		effect = {
			if = {
				limit = { tier = COUNT }
				if = {
					limit = { NOT = { holder = FROM } }
					gain_title = FROM
				}
				any_de_jure_vassal_title = {
					limit = { NOT = { holder = FROM } }
					gain_title = FROM
				}
				break = yes
			}
			any_de_jure_vassal_title = {
				limit = { tier = COUNT }
				if = {
					limit = { NOT = { holder = FROM } }
					gain_title = FROM
				}
				any_de_jure_vassal_title = {
					limit = { NOT = { holder = FROM } }
					gain_title = FROM
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_usurp_title = {
		ai_target_filter = capital
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			OR = {
				higher_tier_than = COUNT
				has_holder = yes
			}
		}
		allow = {
		}
		effect = {
			usurp_title = FROM
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_debug_destroy_title = {
		ai_target_filter = capital
		
		from_potential = {
			ai = no
			has_global_flag = emf_debug
		}
		potential = {
			higher_tier_than = COUNT
			has_holder = yes
			is_landless_type_title = no
		}
		allow = {
		}
		effect = {
			destroy_landed_title = THIS
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
}
