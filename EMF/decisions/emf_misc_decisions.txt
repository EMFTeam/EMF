# -*- ck2.decisions -*-

# Targetted decisions are possible vs _all_ other characters and shown are in the Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/spouse/liege/rivals/all] ('self' MUST be set for decisions targetting only the taker, the other filter types can be set to lessen CPU load)
# ai_target_filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/spouse/liege/rivals/all] (which characters for which the AI evaluates the decision.)
#	court: all characters in the AI's host court, including prisoners, and characters currently away (wards, prisoners, etc)
#	home_court: all characters in the AI's home court, including prisoners, and characters currently away (wards, prisoners, etc)
#	vassals: direct vassal rulers of the AI's employer
#	sub_realm: all characters below the AI's employer
#	realm: all characters in the same top realm as the AI
#	dynasty: all members of the same dynasty
#	rivals: your rivals plus any character you have an opinion modifier with 'crime = yes' set (the same set of characters the 'is_foe' trigger evaluates)
#	all: all living characters (Avoid if possible. VERY CPU-HEAVY!)
#	


targetted_decisions = {
	emf_bring_child_home = {
		filter = dynasty
		ai_target_filter = self
		
		is_high_prio = yes
		
		from_potential = {
			is_playable = yes
			ai = no
		}
		potential = {
			is_child_of = FROM
			liege = { NOT = { character = FROM } }
			NOR = {
				prisoner = yes
				is_ruler = yes
				is_adult = yes
				is_married = yes
				any_child = { is_alive = yes }
			}
		}
		allow = {
			liege = {
				lower_real_tier_than = FROM
			}
		}
		effect = {
			move_character = FROM
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
}

decisions = {
	emf_become_nomad = {
		only_playable = yes
		
		potential = {
			culture_group = altaic
			is_tribal = yes
			pacifist = no
			is_adult = yes
			capital_scope = { num_of_empty_holdings = 1 }
			OR = {
				tier = DUKE
				tier = KING
			}
		}
		allow = {
			war = no
			is_ill = no
			prisoner = no
			is_female = no
			prestige = 1000
			martial = 12
			custom_tooltip = {
				text = IS_PHYSICALLY_CAPABLE
				hidden_tooltip = {
					is_weak_trigger = no
					has_severe_disability_trigger = no
					has_medium_disability_trigger = no
				}
			}
			NOR = {
				trait = content
				trait = humble
			}
			OR = {
				independent = yes
				liege = { is_nomadic = yes }
			}
			OR = {
				num_of_count_titles = 3
				liege = { is_nomadic = yes }
			}
		}
		effect = {
			set_government_type = nomadic_government
			prestige = -500
			population = 500
			if = {
				limit = { prestige = 1500 }
				population = 500
			}
			if = {
				limit = { prestige = 2000 }
				population = 500
			}
			if = {
				limit = { prestige = 2500 }
				population = 500
			}
			if = {
				limit = { prestige = 3000 }
				population = 500
			}
			hidden_tooltip = {
				disband_event_forces = settled_nomads
				if = {
					limit = { independent = yes }
					narrative_event = { id = emf_nomad.101 }
				}
				if = {
					limit = { independent = no }
					narrative_event = { id = emf_nomad.102 }
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.05
				always = yes
			}
			modifier = {
				factor = 0
				NOT = { had_global_flag = { flag = EMF days = 10950 } }
			}
			modifier = {
				factor = 0
				independent = no
				liege = {
					OR = {
						dynasty = ROOT
						any_vassal = {
							is_nomadic = yes
							dynasty = ROOT
						}
						any_vassal = {
							is_nomadic = yes
							count = 5
						}
					}
				}
			}
			modifier = {
				factor = 0
				independent = yes
				NOT = {
					calc_true_if = {
						amount = 2
						martial = 15
						martial = 20
						trait = brave
						trait = strong
						trait = robust
					}
				}
			}
			modifier = {
				factor = 0
				any_realm_title = {
					tier = BARON
					holding_type = castle
					count = 4
				}
			}
			modifier = {
				factor = 0
				NOT = {
					capital_scope = { region = world_steppe }
				}
			}
		}
	}
}

