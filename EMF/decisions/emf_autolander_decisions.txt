# -*- ck2.decisions -*-

decisions = {
	emf_autolander = {
		is_high_prio = yes
		ai = no

		potential = {
			multiplayer = no
			higher_tier_than = COUNT
			is_nomadic = no
			over_max_demesne_size > 0
			any_demesne_title = {
				tier = COUNT
				location = {
					has_province_modifier = emf_mod_recently_acquired
				}
				NOT = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
		}
		effect = {
			any_demesne_title = {
				show_scope_change = no
				limit = {
					tier = COUNT
					location = {
						has_province_modifier = emf_mod_recently_acquired
					}
					NOT = {
						ROOT = {
							capital_scope = {
								duchy = {
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
					can_be_given_away = yes
				}
				location = {
					show_scope_change = no
					custom_tooltip = { text = emf_autolander_ctt_prompt_province }
				}
			}
			hidden_tooltip = {
				character_event = { id = emf_autolander.3 }
			}
		}
	}

	# Same thing but not is_high_prio = yes for when not over demesne cap
	emf_autolander_low_prio = {
		ai = no

		potential = {
			multiplayer = no
			higher_tier_than = COUNT
			is_nomadic = no
			over_max_demesne_size <= 0
			any_demesne_title = {
				tier = COUNT
				location = {
					has_province_modifier = emf_mod_recently_acquired
				}
				NOT = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
		}
		effect = {
			any_demesne_title = {
				show_scope_change = no
				limit = {
					tier = COUNT
					location = {
						has_province_modifier = emf_mod_recently_acquired
					}
					NOT = {
						ROOT = {
							capital_scope = {
								duchy = {
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
					can_be_given_away = yes
				}
				location = {
					show_scope_change = no
					custom_tooltip = { text = emf_autolander_ctt_prompt_province }
				}
			}
			hidden_tooltip = {
				character_event = { id = emf_autolander.3 }
			}
		}
	}

	# Versions that will not distribute land in the capitaly duchy but are otherwise
	# completely automatic (used for multiplayer)
	emf_autolander_auto = {
		is_high_prio = yes
		ai = no

		potential = {
			multiplayer = yes
			higher_tier_than = COUNT
			is_nomadic = no
			over_max_demesne_size > 0
			any_demesne_title = {
				tier = COUNT
				location = {
					has_province_modifier = emf_mod_recently_acquired
				}
				NOT = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
		}
		effect = {
			any_demesne_title = {
				show_scope_change = no
				limit = {
					tier = COUNT
					location = {
						has_province_modifier = emf_mod_recently_acquired
					}
					NOT = {
						ROOT = {
							capital_scope = {
								duchy = {
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
					can_be_given_away = yes
				}
				location = {
					show_scope_change = no
					custom_tooltip = { text = emf_autolander_ctt_auto_grant_province }
				}
			}
			if = {
				limit = {
					any_demesne_title = {
						tier = COUNT
						location = {
							has_province_modifier = emf_mod_recently_acquired
							NAND = {
								religion = ROOT
								culture = ROOT
							}
						}
						NOT = {
							ROOT = {
								capital_scope = {
									duchy = {
										de_jure_vassal_or_below = PREVPREVPREV
									}
								}
							}
						}
						can_be_given_away = yes
					}
				}
				hidden_effect = {
					set_variable = { which = emf_autolander_total_gold_cost value = 0 }
					any_demesne_title = {
						limit = {
							tier = COUNT
							location = {
								has_province_modifier = emf_mod_recently_acquired
								NAND = {
									religion = ROOT
									culture = ROOT
								}
							}
							NOT = {
								ROOT = {
									capital_scope = {
										duchy = {
											de_jure_vassal_or_below = PREVPREVPREV
										}
									}
								}
							}
							can_be_given_away = yes
						}
						export_to_variable = { which = emf_autolander_loop_cost value = yearly_income }
						if = {
							limit = {
								NAND = {
									religion = ROOT
									culture = ROOT
								}
							}
							divide_variable = { which = emf_autolander_loop_cost value = 4 }
							if = {
								limit = { check_variable = { which = emf_autolander_loop_cost value < 25 } }
								set_variable = { which = emf_autolander_loop_cost value = 25 }
							}
							else_if = {
								limit = { check_variable = { which = emf_autolander_loop_cost value > 100 } }
								set_variable = { which = emf_autolander_loop_cost value = 100 }
							}
						}
						change_variable = { which = emf_autolander_total_gold_cost which = emf_autolander_loop_cost }
					}
					multiply_variable = { which = emf_autolander_total_gold_cost value = -1 }
				}
				tooltip = { wealth = emf_autolander_total_gold_cost }
				custom_tooltip = { text = emf_autolander_ctt_pay_governor }
			}
			else = {
				custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			}
			hidden_tooltip = {
				character_event = { id = emf_autolander.1 }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	emf_autolander_auto_low_prio = {
		ai = no

		potential = {
			multiplayer = yes
			higher_tier_than = COUNT
			is_nomadic = no
			over_max_demesne_size <= 0
			any_demesne_title = {
				tier = COUNT
				location = {
					has_province_modifier = emf_mod_recently_acquired
				}
				NOT = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
		}
		effect = {
			any_demesne_title = {
				show_scope_change = no
				limit = {
					tier = COUNT
					location = {
						has_province_modifier = emf_mod_recently_acquired
					}
					NOT = {
						ROOT = {
							capital_scope = {
								duchy = {
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
					can_be_given_away = yes
				}
				location = {
					show_scope_change = no
					custom_tooltip = { text = emf_autolander_ctt_auto_grant_province }
				}
			}
			if = {
				limit = {
					any_demesne_title = {
						tier = COUNT
						location = {
							has_province_modifier = emf_mod_recently_acquired
							NAND = {
								religion = ROOT
								culture = ROOT
							}
						}
						NOT = {
							ROOT = {
								capital_scope = {
									duchy = {
										de_jure_vassal_or_below = PREVPREVPREV
									}
								}
							}
						}
						can_be_given_away = yes
					}
				}
				hidden_effect = {
					set_variable = { which = emf_autolander_total_gold_cost value = 0 }
					any_demesne_title = {
						limit = {
							tier = COUNT
							location = {
								has_province_modifier = emf_mod_recently_acquired
								NAND = {
									religion = ROOT
									culture = ROOT
								}
							}
							NOT = {
								ROOT = {
									capital_scope = {
										duchy = {
											de_jure_vassal_or_below = PREVPREVPREV
										}
									}
								}
							}
							can_be_given_away = yes
						}
						export_to_variable = { which = emf_autolander_loop_cost value = yearly_income }
						if = {
							limit = {
								NAND = {
									religion = ROOT
									culture = ROOT
								}
							}
							divide_variable = { which = emf_autolander_loop_cost value = 4 }
							if = {
								limit = { check_variable = { which = emf_autolander_loop_cost value < 25 }  }
								set_variable = { which = emf_autolander_loop_cost value = 25 }
							}
							else_if = {
								limit = { check_variable = { which = emf_autolander_loop_cost value > 100 } }
								set_variable = { which = emf_autolander_loop_cost value = 100 }
							}
						}
						change_variable = { which = emf_autolander_total_gold_cost which = emf_autolander_loop_cost }
					}
					multiply_variable = { which = emf_autolander_total_gold_cost value = -1 }
				}
				tooltip = { wealth = emf_autolander_total_gold_cost }
				custom_tooltip = { text = emf_autolander_ctt_pay_governor }
			}
			else = {
				custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			}
			hidden_tooltip = {
				character_event = { id = emf_autolander.2 }
			}
		}
	}
	
	emf_autolander_auto_locals = {
		is_high_prio = yes
		ai = no

		potential = {
			multiplayer = yes
			higher_tier_than = COUNT
			is_nomadic = no
			over_max_demesne_size > 0
			any_demesne_title = {
				tier = COUNT
				location = {
					has_province_modifier = emf_mod_recently_acquired
					NAND = {
						religion = ROOT
						culture = ROOT
					}
				}
				NOT = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
		}
		effect = {
			any_demesne_title = {
				show_scope_change = no
				limit = {
					tier = COUNT
					location = {
						has_province_modifier = emf_mod_recently_acquired
					}
					NOT = {
						ROOT = {
							capital_scope = {
								duchy = {
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
					can_be_given_away = yes
				}
				location = {
					show_scope_change = no
					custom_tooltip = { text = emf_autolander_ctt_auto_grant_province }
				}
			}
			custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			hidden_tooltip = {
				set_flag = emf_match_province
				character_event = { id = emf_autolander.1 }
				clr_flag = emf_match_province
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	emf_autolander_auto_locals_low_prio = {
		ai = no

		potential = {
			multiplayer = yes
			higher_tier_than = COUNT
			is_nomadic = no
			over_max_demesne_size <= 0
			any_demesne_title = {
				tier = COUNT
				location = {
					has_province_modifier = emf_mod_recently_acquired
					NAND = {
						religion = ROOT
						culture = ROOT
					}
				}
				NOT = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
		}
		effect = {
			any_demesne_title = {
				show_scope_change = no
				limit = {
					tier = COUNT
					location = {
						has_province_modifier = emf_mod_recently_acquired
					}
					NOT = {
						ROOT = {
							capital_scope = {
								duchy = {
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
					can_be_given_away = yes
				}
				location = {
					show_scope_change = no
					custom_tooltip = { text = emf_autolander_ctt_auto_grant_province }
				}
			}
			custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			hidden_tooltip = {
				set_flag = emf_match_province
				character_event = { id = emf_autolander.2 }
				clr_flag = emf_match_province
			}
		}
	}
}


# Title decisions are possible vs _all_ titles and are shown in the Title Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [capital/primary_title/owned/vassal_owned/sub_realm_owned/realm_owned/dynasty_owned/all]
# ai_target_filter = [capital/primary_title/owned/vassal_owned/sub_realm_owned/realm_owned/dynasty_owned/all] (which titles for which the AI evaluates the decision.)
#	owned: all titles owned by the AI
#	vassal_owned: all titles owned by direct vassal rulers of the AI's employer
#	sub_realm_owned: all titles below the AI's employer
#	realm_owned: all titles in the same top realm as the AI
#	dynasty_owned: all titles owned by members of the same dynasty
#	all: all titles (Avoid if possible. VERY CPU-HEAVY!)
#

title_decisions = {
	emf_autolander_grant_county = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = no
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = { is_capital = no }
		}
		allow = {
			can_be_given_away = yes
		}
		effect = {
			hidden_tooltip = {
				save_event_target_as = target_county
				location = { save_event_target_as = target_prov }
				FROM = { character_event = { id = emf_autolander.20 } }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_autolander_grant_county_mp_steward = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = yes
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = { is_capital = no }
		}
		allow = {
			OR = {
				location = {
					culture = FROM
					religion = FROM
				}
				FROM = { scaled_wealth = { value = 0.25 min = 25 max = 100 } }
			}
			can_be_given_away = yes
		}
		effect = {
			if = {
				limit = {
					location = {
						culture = FROM
						religion = FROM
					}
				}
				custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			}
			else = {
				FROM = {
					set_flag = emf_pay_governor
					tooltip = { scaled_wealth = { value = -0.25 min = -25 max = -100 } }
					custom_tooltip = { text = emf_autolander_ctt_pay_governor }
				}
			}
			hidden_tooltip = {
				save_event_target_as = target_county
				FROM = {
					set_flag = emf_steward_governor
					character_event = { id = emf_autolander.11 }
					clr_flag = emf_steward_governor
					clr_flag = emf_pay_governor
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_autolander_grant_county_mp_priest = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = yes
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = { is_capital = no }
		}
		allow = {
			OR = {
				location = {
					culture = FROM
					religion = FROM
				}
				FROM = { scaled_wealth = { value = 0.25 min = 25 max = 100 } }
			}
			can_be_given_away = yes
		}
		effect = {
			if = {
				limit = {
					location = {
						culture = FROM
						religion = FROM
					}
				}
				custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			}
			else = {
				FROM = {
					set_flag = emf_pay_governor_full
					tooltip = { scaled_wealth = { value = -0.25 min = -25 max = -100 } }
					custom_tooltip = { text = emf_autolander_ctt_pay_governor }
				}
			}
			hidden_tooltip = {
				save_event_target_as = target_county
				FROM = {
					set_flag = emf_priest_governor
					character_event = { id = emf_autolander.11 }
					clr_flag = emf_priest_governor
					clr_flag = emf_pay_governor
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_autolander_grant_county_mp_soldier = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = yes
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = { is_capital = no }
		}
		allow = {
			OR = {
				location = {
					culture = FROM
					religion = FROM
				}
				FROM = { scaled_wealth = { value = 0.25 min = 25 max = 100 } }
			}
			can_be_given_away = yes
		}
		effect = {
			if = {
				limit = {
					location = {
						culture = FROM
						religion = FROM
					}
				}
				custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			}
			else = {
				FROM = {
					set_flag = emf_pay_governor_full
					tooltip = { scaled_wealth = { value = -0.25 min = -25 max = -100 } }
					custom_tooltip = { text = emf_autolander_ctt_pay_governor }
				}
			}
			hidden_tooltip = {
				save_event_target_as = target_county
				FROM = {
					set_flag = emf_military_governor
					character_event = { id = emf_autolander.11 }
					clr_flag = emf_military_governor
					clr_flag = emf_pay_governor
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_autolander_grant_county_mp_steward_local = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = yes
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = {
				is_capital = no
				NAND = {
					religion = FROM
					culture = FROM
				}
			}
		}
		allow = {
			can_be_given_away = yes
		}
		effect = {
			hidden_tooltip = {
				save_event_target_as = target_county
				FROM = {
					set_flag = emf_steward_governor
					character_event = { id = emf_autolander.11 }
					clr_flag = emf_steward_governor
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_autolander_grant_county_mp_priest_local = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = yes
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = {
				is_capital = no
				NAND = {
					religion = FROM
					culture = FROM
				}
			}
		}
		allow = {
			can_be_given_away = yes
		}
		effect = {
			custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			hidden_tooltip = {
				save_event_target_as = target_county
				FROM = {
					set_flag = emf_priest_governor
					character_event = { id = emf_autolander.11 }
					clr_flag = emf_priest_governor
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	emf_autolander_grant_county_mp_soldier_local = {
		only_playable = yes
		filter = owned
		ai_target_filter = capital

		from_potential = {
			ai = no
			multiplayer = yes
		}
		potential = {
			tier = COUNT
			holder = FROM
			location = {
				is_capital = no
				NAND = {
					religion = FROM
					culture = FROM
				}
			}
		}
		allow = {
			can_be_given_away = yes
		}
		effect = {
			custom_tooltip = { text = emf_autolander_ctt_pay_governor_not_required_for_prov_culrel }
			hidden_tooltip = {
				save_event_target_as = target_county
				FROM = {
					set_flag = emf_military_governor
					character_event = { id = emf_autolander.11 }
					clr_flag = emf_military_governor
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
}
