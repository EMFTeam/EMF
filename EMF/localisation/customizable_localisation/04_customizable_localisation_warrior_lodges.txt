# -*- ck2.custom_loc -*-

defined_text = { #Used in HF.10040 (Power: Warrior Training)
	name = GetWarriorLodgeTrainingDesc
	
	text = {
		trigger = { society_member_of = warrior_lodge_norse }
		localisation_key = string_norse_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_tengri }
		localisation_key = string_tengri_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_baltic }
		localisation_key = string_baltic_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_finnish }
		localisation_key = string_finnish_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_slavic }
		localisation_key = string_slavic_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_west_african }
		localisation_key = string_west_african_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_zun }
		localisation_key = string_zun_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_bon }
		localisation_key = string_bon_training
	}
	text = {
		trigger = { society_member_of = warrior_lodge_hellenic }
		localisation_key = string_hellenic_training
	}
	fallback_text = {
		localisation_key = string_norse_training #fallback, in case it fails to find relevant info
	}
}

defined_text = { #Used in HFP.11028 (battle event)
	name = GetWarriorLodgeSymbol
	
	text = {
		trigger = { society_member_of = warrior_lodge_norse }
		localisation_key = string_norse_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_tengri }
		localisation_key = string_tengri_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_baltic }
		localisation_key = string_baltic_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_finnish }
		localisation_key = string_finnish_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_slavic }
		localisation_key = string_slavic_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_west_african }
		localisation_key = string_west_african_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_zun }
		localisation_key = string_zun_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_bon }
		localisation_key = string_bon_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_hellenic }
		localisation_key = string_hellenic_symbol
	}
	fallback_text = {
		localisation_key = string_hellenic_symbol #"the gods". Fallback, in case it fails to find relevant info
	}
}
defined_text = { #Used here and there? Made *singular*, on purpose...
	name = GetWarriorLodgeSymbolShort #forest, light, wolf, etc...
	
	text = {
		trigger = { society_member_of = warrior_lodge_norse }
		localisation_key = string_norse_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_tengri }
		localisation_key = string_tengri_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_baltic }
		localisation_key = string_baltic_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_finnish }
		localisation_key = string_finnish_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_slavic }
		localisation_key = string_slavic_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_west_african }
		localisation_key = string_west_african_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_zun }
		localisation_key = string_zun_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_bon }
		localisation_key = string_bon_symbol_short
	}
	text = {
		trigger = { society_member_of = warrior_lodge_hellenic }
		localisation_key = string_hellenic_symbol_short
	}
	fallback_text = {
		localisation_key = string_hellenic_symbol_short #"the gods". Fallback, in case it fails to find relevant info
	}
}
defined_text = { #Used here and there? Made *singular*, on purpose...
	name = GetWarriorLodgeSymbolShortCap #Forest, Light, Wolf, etc...
	
	text = {
		trigger = { society_member_of = warrior_lodge_norse }
		localisation_key = string_norse_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_tengri }
		localisation_key = string_tengri_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_baltic }
		localisation_key = string_baltic_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_finnish }
		localisation_key = string_finnish_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_slavic }
		localisation_key = string_slavic_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_west_african }
		localisation_key = string_west_african_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_zun }
		localisation_key = string_zun_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_bon }
		localisation_key = string_bon_symbol_short_cap
	}
	text = {
		trigger = { society_member_of = warrior_lodge_hellenic }
		localisation_key = string_hellenic_symbol_short_cap
	}
	fallback_text = {
		localisation_key = string_hellenic_symbol_short_cap #"the gods". Fallback, in case it fails to find relevant info
	}
}
defined_text = { #Used in HFP.11037 (battle event)
	name = GetSkullTrophyComment
	
	text = {
		trigger = { has_character_flag = took_enemy_skull }
		localisation_key = string_took_skull
	}
	text = {
		trigger = { NOT = { has_character_flag = took_enemy_skull } }
		localisation_key = string_didnt_take_skull
	}
	fallback_text = {
		localisation_key = string_didnt_take_skull #same as no skull
	}
}
defined_text = { #Used in HFP.11038 (battle event)
	name = GetWarriorBattleNick
	
	text = {
		trigger = { society_member_of = warrior_lodge_norse }
		localisation_key = string_battle_nick_norse_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_tengri }
		localisation_key = string_battle_nick_tengri_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_baltic }
		localisation_key = string_battle_nick_baltic_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_finnish }
		localisation_key = string_battle_nick_finnish_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_slavic }
		localisation_key = string_battle_nick_slavic_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_west_african }
		localisation_key = string_battle_nick_west_african_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_zun }
		localisation_key = string_battle_nick_zun_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_bon }
		localisation_key = string_battle_nick_bon_symbol
	}
	text = {
		trigger = { society_member_of = warrior_lodge_hellenic }
		localisation_key = string_battle_nick_hellenic_symbol
	}
	fallback_text = {
		localisation_key = string_battle_nick_neutral_symbol #"Battering Ram". Fallback, in case it fails to find relevant info
	}
}

defined_text = { #Used in HF.10513 (mission event to Wage War)
	name = GetMarchSail
	
	text = {
		trigger = {
			event_target:my_war_target = {
				location = {
					#Is either a coastal province accessible via water...
			        is_coastal = yes
					can_naval_path_to = { target = event_target:home_capital distance < 1000 }
		            #And they are not accessible via land...
			        NOT = { can_land_path_to = { target = event_target:home_capital distance < 1000 } }
				}
			}
		}
		localisation_key = string_sail_your_ships
	}
	text = {
		trigger = {
			event_target:my_war_target = {
				location = {
					OR = {
						AND = {
				            #Or they are accessible via land...
				            event_target:home_capital = { is_coastal = no }
					        can_land_path_to = { target = event_target:home_capital distance < 1000 }
			            }
			            AND = { #Or not a coastal place...
				        	is_coastal = no
				        	can_land_path_to = { target = event_target:home_capital distance < 1000 }
				        	#event_target:home_capital = { distance = { where = PREV distance < 1000 } }
			            }
					}
				}
			}
		}
		localisation_key = string_march_your_troops
	}
	fallback_text = {
		localisation_key = string_march_your_troops
	}
}


defined_text = { #Used in HFP.11038 (battle event)
	name = GetWLCanJoinReligion
	
	text = {
		trigger = { FROM = { is_society = warrior_lodge_norse } }
		localisation_key = string_WL_norse_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_tengri } }
		localisation_key = string_WL_tengri_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_baltic } }
		localisation_key = string_WL_baltic_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_finnish } }
		localisation_key = string_WL_finnish_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_slavic } }
		localisation_key = string_WL_slavic_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_west_african } }
		localisation_key = string_WL_west_african_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_zun } }
		localisation_key = string_WL_zun_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_bon } }
		localisation_key = string_WL_bon_religion
	}
	text = {
		trigger = { FROM = { is_society = warrior_lodge_hellenic } }
		localisation_key = string_WL_hellenic_religion
	}
	fallback_text = {
		localisation_key = string_no_religion # Fallback, in case it fails to find relevant info
	}
}


## Flything Insults Custom Loc extravaganza. ##

#Options (visible by insulter)
#FROM = insulted person, ROOT = person insulting.


#Inult Prowess Option.
defined_text = { 
	name = GetProwessInsultOption
	# 																			X <-- Don't go beyond here.
	# (male)
	# It is said that your virility is legendary amongst dwarves.
	# No warrior is as cowardly as the one between your legs.
	# Ancient legends tell of the last time a lady called you a man.
	# Never a man was born that could pleasure his lover as swiftly as you.

	# (male eunuch)
	# They claim you are no longer a man, but, I ask, were you ever?
	# You were already a girl in every way before even losing your manhood.
	# Your manhood was not cut: it shriveled off for lack of use.

	# (female)
	# Was there ever a fouler place than the cave between your legs?
	# Your wailing is such that your lovers need to bed you with earplugs.
	# Do you dress as a warrior because you could never pass for a lady?
	# No place is as desolate and maggot-riddled as your womb.


	text = {
		trigger = { FROM = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_option_1
	}
	text = {
		trigger = { FROM = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_option_2
	}
	text = {
		trigger = { FROM = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_option_3
	}
	text = {
		trigger = { FROM = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_option_4
	}
	text = {
		trigger = { FROM = { is_female = no trait = eunuch } }
		localisation_key = string_WL_flyting_prowess_insult_option_5
	}
	text = {
		trigger = { FROM = { is_female = no trait = eunuch } }
		localisation_key = string_WL_flyting_prowess_insult_option_6
	}
	text = {
		trigger = { FROM = { is_female = no trait = eunuch } }
		localisation_key = string_WL_flyting_prowess_insult_option_7
	}
	text = {
		trigger = { FROM = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_option_8
	}
	text = {
		trigger = { FROM = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_option_9
	}
	text = {
		trigger = { FROM = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_option_10
	}
	text = {
		trigger = { FROM = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_option_11
	}
	fallback_text = {
		localisation_key = string_prowess_insult_option_default # Fallback, in case it fails to find relevant info
	}
}


defined_text = { 
	name = GetCharacterInsultOption

#Insult Character Option.
	# 																			X <-- Don't go beyond here.
	# Is it any surprise you would pick a game where you are the center of attention? 			(proud/groomed)
	# Try not to choke between turns, [From.GetFirstName], we have a long game ahead. 			(gluttonous)
	# I am surprised you haven't started to whine about losing yet. 							(envious)
	# Feeling alright, [From.GetFirstName]? Sure you're not tired already?						(slothful)
	# Somebody warn [From.GetFirstName] that [From.GetSheHe] won't be paid by word. 			(greedy)
	# Are you sure Flyting is good for your temper, [From.GetFirstName]?					 	(wroth)
	# I have never met a [From.GetManWoman] more easily dumpfounded by a pretty face.			(lustful)
	# Did you drag yourself through a pigsden before getting in here? 							(uncouth)

	# (based on looks)
	# Were you always this ugly, or did you just lose one too many brawls?						(not fair/groomed)
	# I might have to yield, looking at your face is too great an offence to bear.				(not fair/groomed)
	# [From.GetFirstName] is so repulsive children flee at [From.GetHerHis] sight.		 		(ugly)
	# [From.GetFirstName] face is so grotesque it scares wolves and cracks stone.				(ugly)
	# What god did your mother offend to curse you with such a revolting look?					(ugly)
	# It is telling how often [From.GetFirstName] has to remind us that she a woman.			(ugly, female)

	# (based on strength)
	# It is telling how much faster you are to play word games over proper fights.				(not strong)
	# I am still unsure what made you think a weakling like you can be one of us.				(not strong)
	# Was there ever a weaker fighter recruited to [From.Society.GetName]?						(weak)
	# I am impressed you managed to get on this table without breaking a bone...				(weak)
	# Does the little girl need her hand held before she faints?								(weak)
	# I shall try to speak softly, lest my voice strikes you dead.								(weak)
	# Delicate as a flower, [From.GetFirstName] yet clings to dreams of war.					(weak)

	# (based on intellect)
	# Was there ever a problem [From.GetFirstName]'s mind couldn't avoid solving?				(not smart)
	# Are you truly as dumb as you look, I wonder? 												(not smart)
	# I will be using big words now, [From.GetFirstName], try to keep up.						(dumb)
	# You realize this is a game that requires wit, right?										(dumb)
	# I am looking forward to your grunts of rebuttal, for sure.								(dumb)

	# Is it really such a surprise you jumped at the chance to yap some more?					(gregarious)
	# Are you sure you wouldn't rather give up and go hide in a corner?							(shy)
	# 

	# One can hardly find anything bad or good to say about [From.GetFirstName].
	# Saying you are the dullest [From.GetManWoman] I ever met would give you too much credit.

	text = {
		trigger = { FROM = { OR = { trait = proud trait = groomed } } }
		localisation_key = string_WL_flyting_character_insult_option_1
	}
	text = {
		trigger = { FROM = { trait = gluttonous } }
		localisation_key = string_WL_flyting_character_insult_option_2
	}
	text = {
		trigger = { FROM = { trait = envious } }
		localisation_key = string_WL_flyting_character_insult_option_3
	}
	text = {
		trigger = { FROM = { trait = slothful } }
		localisation_key = string_WL_flyting_character_insult_option_4
	}
	text = {
		trigger = { FROM = { trait = greedy } }
		localisation_key = string_WL_flyting_character_insult_option_5
	}
	text = {
		trigger = { FROM = { trait = wroth } }
		localisation_key = string_WL_flyting_character_insult_option_6
	}
	text = {
		trigger = { FROM = { trait = lustful } }
		localisation_key = string_WL_flyting_character_insult_option_7
	}
	text = {
		trigger = { FROM = { trait = uncouth } }
		localisation_key = string_WL_flyting_character_insult_option_8
	}
	text = {
		trigger = { FROM = { is_attractive_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_option_9
	}
	text = {
		trigger = { FROM = { is_attractive_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_option_10
	}
	text = {
		trigger = { FROM = { has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_11
	}
	text = {
		trigger = { FROM = { has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_12
	}
	text = {
		trigger = { FROM = { has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_13
	}
	text = {
		trigger = { FROM = { is_female = yes has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_14
	}
	text = {
		trigger = { FROM = { is_strong_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_option_15
	}
	text = {
		trigger = { FROM = { is_strong_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_option_16
	}
	text = {
		trigger = { FROM = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_17
	}
	text = {
		trigger = { FROM = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_18
	}
	text = {
		trigger = { FROM = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_19
	}
	text = {
		trigger = { FROM = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_20
	}
	text = {
		trigger = { FROM = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_21
	}
	text = {
		trigger = { FROM = { is_smart_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_option_22
	}
	text = {
		trigger = { FROM = { is_smart_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_option_23
	}
	text = {
		trigger = { FROM = { is_dumb_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_24
	}
	text = {
		trigger = { FROM = { is_dumb_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_25
	}
	text = {
		trigger = { FROM = { is_dumb_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_option_26
	}
	text = {
		trigger = { FROM = { trait = gregarious } }
		localisation_key = string_WL_flyting_character_insult_option_27
	}
	text = {
		trigger = { FROM = { OR = { trait = craven trait = shy } } }
		localisation_key = string_WL_flyting_character_insult_option_28
	}
	text = {
		trigger = { FROM = { is_alive = yes } }
		localisation_key = string_WL_flyting_character_insult_option_29
	}
	text = {
		trigger = { FROM = { is_alive = yes } }
		localisation_key = string_WL_flyting_character_insult_option_30
	}
	fallback_text = {
		localisation_key = string_character_insult_option_default # Fallback, in case it fails to find relevant info
	}
}

#Insult Accomplishments Option.


defined_text = { 
	name = GetAccomplishmentsInsultOption
	# 																			X <-- Don't go beyond here.
	# Not every [From.Culture.GetName] can be satisfied with so little...				(not ambitious)
	# I suppose being born with so few skills makes mediocrity desirable?				(not ambitious)
	# Better be careful not to trip over your broken dreams on your way out.			(not ambitious)
	# How does it feel to be the black sheep of your dynasty?							(not ambitious)
	# I can scarcely believe how little a [From.GetTitle] like you could accomplish.	(not ambitious)


	# It is very impressive to wish for so much yet accomplish so little.				(ambitious)
	# Hard to find somebody with greater designs and pettier goals.						(ambitious)
	# The thought of you managing to accomplish something is as scary as laughable.		(ambitious)

	text = {
		trigger = { FROM = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_1
	}
	text = {
		trigger = { FROM = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_2
	}
	text = {
		trigger = { FROM = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_3
	}
	text = {
		trigger = { FROM = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_4
	}
	text = {
		trigger = { FROM = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_5
	}
	text = {
		trigger = { FROM = { trait = ambitious } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_6
	}
	text = {
		trigger = { FROM = { trait = ambitious } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_7
	}
	text = {
		trigger = { FROM = { trait = ambitious } }
		localisation_key = string_WL_flyting_accomplishments_insult_option_8
	}
	fallback_text = {
		localisation_key = string_accomplishments_insult_option_default # Fallback, in case it fails to find relevant info
	}
}

#Insult Family Option.

defined_text = { 
	name = GetFamilyInsultOption
	# 																			X <-- Don't go beyond here.
	# I guess, after seeing how you came out, your parents simply gave up?			(only child)
	# So, how is the wretched harpy that spawned you, [From.GetFirstName]?			(living mother)
	# I have heard great, hilarious tales about your father's cowardice.	
	# If you are the best your folks can offer, I dread the sight of your siblings.	(has siblings)
	# I cannot lie: your parents confided me that you are their greatest mistake.	(living parents)
	# Let us be quick about this game, your mother's legs still wait for me.		(living mother, vs male/lesb)
	# Eager to return to that toad you call wife? 									(married, male)
	# Eager to return to that spineless worm you call husband? 						(married, female)
	# Tell me, how many times did you stomp on your kids' heads?					(with children)
	# One can only hope your children sprung from a stronger seed than yours.		(married with children, male)


	# How does it feel to be the disgrace of your dynasty?
	# You are truly the greatest example of your dynasty's mediocrity.
	# I guess claiming you are the best the [From.GetOnlyDynastyName] is a meager reward?
	# To see what you have become, your ancestors must be rolling in their graves.

	# What sort of imbeciles would not expose a revolting child like you at birth?	(vs cruel)
	# Of all the drooling imbeciles making up your family, you are the worst.		(vs cruel)
	# I guess a deficiency of honor and bravery runs deep within your family...		(vs cruel)

	text = {
		trigger = { 
			FROM = { 
				NOR = { 
					father_even_if_dead = { num_of_children = 2 }
					mother_even_if_dead = { num_of_children = 2 }
				} 
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_1
	}
	text = {
		trigger = { 
			FROM = { 
				mother_even_if_dead = { is_alive = yes }
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_2
	}
	text = {
		trigger = { 
			FROM = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_3
	}
	text = {
		trigger = { 
			FROM = { 
				OR = { 
					father_even_if_dead = { num_of_children = 2 }
					mother_even_if_dead = { num_of_children = 2 }
				} 
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_4
	}
	text = {
		trigger = { 
			FROM = { 
				father_even_if_dead = { is_alive = yes }
				mother_even_if_dead = { is_alive = yes }
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_5
	}
	text = {
		trigger = { 
			OR = { 
				is_female = no
				AND = { is_female = yes trait = homosexual } 
			} 
			FROM = { 
				mother_even_if_dead = { is_alive = yes }
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_6
	}
	text = {
		trigger = { 
			FROM = { 
				is_married = yes
				is_female = no
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_7
	}
	text = {
		trigger = { 
			FROM = { 
				is_married = yes
				is_female = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_8
	}
	text = {
		trigger = { 
			FROM = { 
				num_of_children = 2
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_9
	}
	text = {
		trigger = { 
			FROM = { 
				is_female = no
				num_of_children = 2
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_10
	}
	text = {
		trigger = { 
			FROM = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_11
	}
	text = {
		trigger = { 
			FROM = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_12
	}
	text = {
		trigger = { 
			FROM = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_13
	}
	text = {
		trigger = { 
			FROM = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_option_14
	}
	text = {
		trigger = { 
			trait = cruel
		} 
		localisation_key = string_WL_flyting_family_insult_option_15
	}
	text = {
		trigger = { 
			trait = cruel
		} 
		localisation_key = string_WL_flyting_family_insult_option_16
	}
	text = {
		trigger = { 
			trait = cruel
		} 
		localisation_key = string_WL_flyting_family_insult_option_17
	}
	fallback_text = {
		localisation_key = string_family_insult_option_default # Fallback, in case it fails to find relevant info
	}
}

#Descs (visible by insulted)


#Inult Prowess Desc.
defined_text = { 
	name = GetProwessInsultDesc
	# 																			X <-- Don't go beyond here.
	# (male)
	# It is said that your virility is legendary amongst dwarves.
	# No warrior is as cowardly as the one between your legs.
	# Ancient legends tell of the last time a lady called you a man.
	# Never a man was born that could pleasure his lover as swiftly as you.

	# (male eunuch)
	# They claim you are no longer a man, but, I ask, were you ever?
	# You were already a girl in every way before even losing your manhood.
	# Your manhood was not cut: it shriveled off for lack of use.

	# (female)
	# Was there ever a fouler place than the cave between your legs?
	# Your wailing is such that your lovers need to bed you with earplugs.
	# Do you dress as a warrior because you could never pass for a lady?
	# No place is as desolate and maggot-riddled as your womb.


	text = {
		trigger = { ROOT = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_1
	}
	text = {
		trigger = { ROOT = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_2
	}
	text = {
		trigger = { ROOT = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_3
	}
	text = {
		trigger = { ROOT = { is_female = no NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_4
	}
	text = {
		trigger = { ROOT = { is_female = no trait = eunuch } }
		localisation_key = string_WL_flyting_prowess_insult_desc_5
	}
	text = {
		trigger = { ROOT = { is_female = no trait = eunuch } }
		localisation_key = string_WL_flyting_prowess_insult_desc_6
	}
	text = {
		trigger = { ROOT = { is_female = no trait = eunuch } }
		localisation_key = string_WL_flyting_prowess_insult_desc_7
	}
	text = {
		trigger = { ROOT = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_desc_8
	}
	text = {
		trigger = { ROOT = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_desc_9
	}
	text = {
		trigger = { ROOT = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_desc_10
	}
	text = {
		trigger = { ROOT = { is_female = yes } }
		localisation_key = string_WL_flyting_prowess_insult_desc_11
	}
	#Additional variants
	text = {
		trigger = { ROOT = { is_female = no NOR = { is_close_relative = FROM trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_12
	}
	text = {
		trigger = { ROOT = { trait = eunuch NOT = { is_close_relative = FROM } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_13
	}
	text = {
		trigger = { ROOT = { is_female = yes NOT = { is_close_relative = FROM } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_14
	}
	text = {
		trigger = { ROOT = { is_female = no is_close_relative = FROM NOT = { trait = eunuch } } }
		localisation_key = string_WL_flyting_prowess_insult_desc_15
	}
	text = {
		trigger = { ROOT = { trait = eunuch is_close_relative = FROM } }
		localisation_key = string_WL_flyting_prowess_insult_desc_16
	}
	text = {
		trigger = { ROOT = { is_female = yes is_close_relative = FROM } }
		localisation_key = string_WL_flyting_prowess_insult_desc_17
	}


	fallback_text = {
		localisation_key = string_prowess_insult_desc_default # Fallback, in case it fails to find relevant info
	}
}


defined_text = { 
	name = GetCharacterInsultDesc

#Insult Character Desc.
	# 																			X <-- Don't go beyond here.
	# Is it any surprise you would pick a game where you are the center of attention? 			(proud/groomed)
	# Try not to choke between turns, [From.GetFirstName], we have a long game ahead. 			(gluttonous)
	# I am surprised you haven't started to whine about losing yet. 							(envious)
	# Feeling alright, [From.GetFirstName]? Sure you're not tired already?						(slothful)
	# Somebody warn [From.GetFirstName] that [From.GetSheHe] won't be paid by word. 			(greedy)
	# Are you sure Flyting is good for your temper, [From.GetFirstName]?					 	(wroth)
	# I have never met a [From.GetManWoman] more easily dumpfounded by a pretty face.			(lustful)
	# Did you drag yourself through a pigsden before getting in here? 							(uncouth)

	# (based on looks)
	# Were you always this ugly, or did you just lose one too many brawls?						(not fair/groomed)
	# I might have to yield, looking at your face is too great an offense to bear.				(not fair/groomed)
	# [From.GetFirstName] is so repulsive children flee at [From.GetHerHis] sight.		 		(ugly)
	# [From.GetFirstName] face is so grotesque it scares wolves and cracks stone.				(ugly)
	# What god did your mother offend to curse you with such a revolting look?					(ugly)
	# It is telling how often [From.GetFirstName] has to remind us that she a woman.			(ugly, female)

	# (based on strength)
	# It is telling how much eager you are to play word games over proper fights.				(not strong)
	# I am still unsure what made you think a weakling like you can be one of us.				(not strong)
	# Was there ever a weaker fighter recruited to [From.Society.GetName]?						(weak)
	# I am impressed you managed to get on this table without breaking a bone...				(weak)
	# Does the little girl need her hand held before she faints?								(weak)
	# I shall try to speak softly, lest my voice strikes you dead.								(weak)
	# Delicate as a flower, [From.GetFirstName] yet clings to dreams of war.					(weak)

	# (based on intellect)
	# Was there ever a problem [From.GetFirstName]'s mind couldn't avoid solving?				(not smart)
	# Are you truly as dumb as you look, I wonder? 												(not smart)
	# I will be using big words now, [From.GetFirstName], try to keep up.						(dumb)
	# You realize this is a game that requires wit, right?										(dumb)
	# I am looking forward to your grunts of rebuttal, for sure.								(dumb)

	# Is it really such a surprise you jumped at the chance to yap some more?					(gregarious)
	# Are you sure you wouldn't rather give up and go hide in a corner?							(shy)
	# 

	# One can hardly find anything bad or good to say about [From.GetFirstName].
	# Saying you are the dullest [From.GetManWoman] I ever met would give you too much credit.

	text = {
		trigger = { ROOT = { OR = { trait = proud trait = groomed } } }
		localisation_key = string_WL_flyting_character_insult_desc_1
	}
	text = {
		trigger = { ROOT = { trait = gluttonous } }
		localisation_key = string_WL_flyting_character_insult_desc_2
	}
	text = {
		trigger = { ROOT = { trait = envious } }
		localisation_key = string_WL_flyting_character_insult_desc_3
	}
	text = {
		trigger = { ROOT = { trait = slothful } }
		localisation_key = string_WL_flyting_character_insult_desc_4
	}
	text = {
		trigger = { ROOT = { trait = greedy } }
		localisation_key = string_WL_flyting_character_insult_desc_5
	}
	text = {
		trigger = { ROOT = { trait = wroth } }
		localisation_key = string_WL_flyting_character_insult_desc_6
	}
	text = {
		trigger = { ROOT = { trait = lustful } }
		localisation_key = string_WL_flyting_character_insult_desc_7
	}
	text = {
		trigger = { ROOT = { trait = uncouth } }
		localisation_key = string_WL_flyting_character_insult_desc_8
	}
	text = {
		trigger = { ROOT = { is_attractive_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_desc_9
	}
	text = {
		trigger = { ROOT = { is_attractive_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_desc_10
	}
	text = {
		trigger = { ROOT = { has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_11
	}
	text = {
		trigger = { ROOT = { has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_12
	}
	text = {
		trigger = { ROOT = { has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_13
	}
	text = {
		trigger = { ROOT = { is_female = yes has_unattractive_trait_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_14
	}
	text = {
		trigger = { ROOT = { is_strong_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_desc_15
	}
	text = {
		trigger = { ROOT = { is_strong_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_desc_16
	}
	text = {
		trigger = { ROOT = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_17
	}
	text = {
		trigger = { ROOT = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_18
	}
	text = {
		trigger = { ROOT = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_19
	}
	text = {
		trigger = { ROOT = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_20
	}
	text = {
		trigger = { ROOT = { is_weak_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_21
	}
	text = {
		trigger = { ROOT = { is_smart_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_desc_22
	}
	text = {
		trigger = { ROOT = { is_smart_trigger = no } }
		localisation_key = string_WL_flyting_character_insult_desc_23
	}
	text = {
		trigger = { ROOT = { is_dumb_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_24
	}
	text = {
		trigger = { ROOT = { is_dumb_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_25
	}
	text = {
		trigger = { ROOT = { is_dumb_trigger = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_26
	}
	text = {
		trigger = { ROOT = { trait = gregarious } }
		localisation_key = string_WL_flyting_character_insult_desc_27
	}
	text = {
		trigger = { ROOT = { OR = { trait = craven trait = shy } } }
		localisation_key = string_WL_flyting_character_insult_desc_28
	}
	text = {
		trigger = { ROOT = { is_alive = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_29
	}
	text = {
		trigger = { ROOT = { is_alive = yes } }
		localisation_key = string_WL_flyting_character_insult_desc_30
	}
	#Additional variants

	text = {
		trigger = { ROOT = { trait = lustful is_female = no prefers_men_trigger = no } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_31
	}
	text = {
		trigger = { ROOT = { trait = lustful is_female = no prefers_men_trigger = yes } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_32
	}
	text = {
		trigger = { ROOT = { trait = lustful is_female = yes prefers_men_trigger = yes } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_33
	}
	text = {
		trigger = { ROOT = { trait = lustful is_female = yes prefers_men_trigger = no } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_34
	}
	text = {
		trigger = { ROOT = { trait = gluttonous } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_35
	}
	text = {
		trigger = { ROOT = { trait = envious } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_36
	}
	text = {
		trigger = { ROOT = { trait = greedy } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_37
	}
	text = {
		trigger = { ROOT = { trait = slothful } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_38
	}
	text = {
		trigger = { ROOT = { trait = wroth } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_39
	}
	text = {
		trigger = { FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_40
	}
	text = {
		trigger = { ROOT = { OR = { trait = proud trait = groomed } } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_41
	}
	text = {
		trigger = { ROOT = { trait = lustful prefers_men_trigger = no } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_42
	}
	text = {
		trigger = { ROOT = { trait = lustful prefers_men_trigger = yes } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_43
	}
	text = {
		trigger = { ROOT = { trait = gluttonous } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_44
	}
	text = {
		trigger = { ROOT = { trait = envious } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_45
	}
	text = {
		trigger = { ROOT = { trait = greedy } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_46
	}
	text = {
		trigger = { ROOT = { trait = slothful } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_47
	}
	text = {
		trigger = { ROOT = { trait = wroth } FROM = { trait = poet } }
		localisation_key = string_WL_flyting_character_insult_desc_48
	}
	text = {
		trigger = { ROOT = { OR = { trait = proud trait = groomed } } FROM = { NOT = { trait = poet } } }
		localisation_key = string_WL_flyting_character_insult_desc_49
	}

	fallback_text = {
		localisation_key = string_character_insult_desc_default # Fallback, in case it fails to find relevant info
	}
}

#Insult Accomplishments Desc.


defined_text = { 
	name = GetAccomplishmentsInsultDesc
	# 																			X <-- Don't go beyond here.
	# Not every [From.Culture.GetName] can be satisfied with so little...				(not ambitious)
	# I suppose being born with so few skills makes mediocrity desirable?				(not ambitious)
	# Better be careful not to trip over your broken dreams on your way out.			(not ambitious)
	# How does it feel to be the black sheep of your dynasty?							(not ambitious)
	# I can scarcely believe how little a [From.GetTitle] like you could accomplish.	(not ambitious)


	# It is very impressive to wish for so much yet accomplish so little.				(ambitious)
	# Hard to find somebody with greater designs and pettier goals.						(ambitious)
	# The thought of you managing to accomplish something is as scary as laughable.		(ambitious)

	text = {
		trigger = { ROOT = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_1
	}
	text = {
		trigger = { ROOT = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_2
	}
	text = {
		trigger = { ROOT = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_3
	}
	text = {
		trigger = { ROOT = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_4
	}
	text = {
		trigger = { ROOT = { NOT = { trait = ambitious } } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_5
	}
	text = {
		trigger = { ROOT = { trait = ambitious } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_6
	}
	text = {
		trigger = { ROOT = { trait = ambitious } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_7
	}
	text = {
		trigger = { ROOT = { trait = ambitious } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_8
	}
	#Additional variants
	text = {
		trigger = { ROOT = { trait = content } NOT = { vassal_of = FROM } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_9
	}
	text = {
		trigger = { ROOT = { NOR = { trait = ambitious trait = content } } NOT = { vassal_of = FROM } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_10
	}
	text = {
		trigger = { ROOT = { trait = ambitious } NOT = { vassal_of = FROM } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_11
	}
	text = {
		trigger = { ROOT = { trait = content vassal_of = FROM } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_12
	}
	text = {
		trigger = { ROOT = { NOR = { trait = ambitious trait = content } vassal_of = FROM } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_13
	}
	text = {
		trigger = { ROOT = { trait = ambitious vassal_of = FROM } }
		localisation_key = string_WL_flyting_accomplishments_insult_desc_14
	}

	fallback_text = {
		localisation_key = string_accomplishments_insult_desc_default # Fallback, in case it fails to find relevant info
	}
}

#Insult Family Desc.

defined_text = { 
	name = GetFamilyInsultDesc
	# 																			X <-- Don't go beyond here.
	# I guess, after seeing how you came out, your parents simply gave up?			(only child)
	# So, how is the wretched harpy that spawned you, [From.GetFirstName]?			(living mother)
	# I have heard great, hilarious tales about your father's cowardice.	
	# If you are the best your folks can offer, I dread the sight of your siblings.	(has siblings)
	# I cannot lie: your parents confided me that you are their greatest mistake.	(living parents)
	# Let us be quick about this game, your mother's legs still wait for me.		(living mother, vs male/lesb)
	# Eager to return to that toad you call wife? 									(married, male)
	# Eager to return to that spineless worm you call husband? 						(married, female)
	# Tell me, how many times did you stomp on your kids' heads?					(with children)
	# One can only hope your children sprung from a stronger seed than yours.		(married with children, male)


	# How does it feel to be the disgrace of your dynasty?
	# You are truly the greatest example of your dynasty's mediocrity.
	# I guess claiming you are the best the [From.GetOnlyDynastyName] is a meager reward?
	# To see what you have become, your ancestors must be rolling in their graves.

	# What sort of imbeciles would not expose a revolting child like you at birth?	(vs cruel)
	# Of all the drooling imbeciles making up your family, you are the worst.		(vs cruel)
	# I guess a deficiency of honor and bravery runs deep within your family...		(vs cruel)

	text = {
		trigger = { 
			ROOT = { 
				NOR = { 
					father_even_if_dead = { num_of_children = 2 }
					mother_even_if_dead = { num_of_children = 2 }
				} 
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_1
	}
	text = {
		trigger = { 
			ROOT = { 
				mother_even_if_dead = { is_alive = yes }
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_2
	}
	text = {
		trigger = { 
			ROOT = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_3
	}
	text = {
		trigger = { 
			ROOT = { 
				OR = { 
					father_even_if_dead = { num_of_children = 2 }
					mother_even_if_dead = { num_of_children = 2 }
				} 
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_4
	}
	text = {
		trigger = { 
			ROOT = { 
				father_even_if_dead = { is_alive = yes }
				mother_even_if_dead = { is_alive = yes }
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_5
	}
	text = {
		trigger = { 
			FROM = { 
				OR = { 
					is_female = no
					AND = { is_female = yes trait = homosexual } 
				} 
			} 
			ROOT = { 
				mother_even_if_dead = { is_alive = yes }
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_6
	}
	text = {
		trigger = { 
			ROOT = { 
				is_married = yes
				is_female = no
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_7
	}
	text = {
		trigger = { 
			ROOT = { 
				is_married = yes
				is_female = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_8
	}
	text = {
		trigger = { 
			ROOT = { 
				num_of_children = 2
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_9
	}
	text = {
		trigger = { 
			ROOT = { 
				is_female = no
				num_of_children = 2
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_10
	}
	text = {
		trigger = { 
			ROOT = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_11
	}
	text = {
		trigger = { 
			ROOT = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_12
	}
	text = {
		trigger = { 
			ROOT = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_13
	}
	text = {
		trigger = { 
			ROOT = { 
				is_alive = yes
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_14
	}
	text = {
		trigger = { 
			FROM = { 
				trait = cruel
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_15
	}
	text = {
		trigger = { 
			FROM = { 
				trait = cruel
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_16
	}
	text = {
		trigger = { 
			FROM = { 
				trait = cruel
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_17
	}
	#Additional variants
	text = {
		trigger = { 
			FROM = { 
				NOT = { 
					trait = cruel
				} 
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_18
	}
	text = {
		trigger = { 
			FROM = { 
				trait = cruel
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_19
	}
	text = {
		trigger = { 
			FROM = { 
				trait = cruel
			} 
		} 
		localisation_key = string_WL_flyting_family_insult_desc_20
	}
	fallback_text = {
		localisation_key = string_family_insult_desc_default # Fallback, in case it fails to find relevant info
	}
}


defined_text = { #Used when founding a legendary bloodline...
	name = GetLegendaryReturnReception
	
	text = {
		trigger = { has_character_flag = bloodline_quality_1 }
		localisation_key = string_reception_1
	}
	text = {
		trigger = { has_character_flag = bloodline_quality_2 }
		localisation_key = string_reception_2
	}
	text = {
		trigger = { has_character_flag = bloodline_quality_3 }
		localisation_key = string_reception_3
	}
	fallback_text = {
		localisation_key = string_reception_1 # Fallback, in case it fails to find relevant info
	}
}
defined_text = { #Used when founding a legendary bloodline...
	name = GetLegendaryAchievementSummary
	
	text = {
		trigger = { has_character_flag = bloodline_quality_1 }
		localisation_key = string_summary_1
	}
	text = {
		trigger = { has_character_flag = bloodline_quality_2 }
		localisation_key = string_summary_2
	}
	text = {
		trigger = { has_character_flag = bloodline_quality_3 }
		localisation_key = string_summary_3
	}
	fallback_text = {
		localisation_key = string_summary_1 # Fallback, in case it fails to find relevant info
	}
}

defined_text = { #Used to refer to a type of "warrior"...
	name = GetWarriorRole
	
	text = {
		trigger = { has_character_modifier = pet_hunting_eagle }
		localisation_key = String_sky_hunter
	}
	text = {
		trigger = {
			has_character_modifier = pet_hunting_dog
			trait = hunter
		}
		localisation_key = String_hunter
	}
	text = {
		trigger = {
			OR = {
				trait = strategist
				has_character_modifier = adept_of_strategy
				trait = brilliant_strategist
			}
		}
		localisation_key = String_strategist_role
	}
	text = {
		localisation_key = String_warrior
	}
	text = {
		localisation_key = String_fighter
	}
	text = {
		trigger = {
			prestige = 2000
		}
		localisation_key = String_champion
	}
	text = {
		localisation_key = String_soldier
	}
	text = {
		trigger = {
			OR = {
				leader_traits = 1
				has_minor_title = title_commander
			}
		}
		localisation_key = String_commander
	}
	text = {
		trigger = {
			OR = {
				leader_traits = 1
				trait = wroth
			}
		}
		localisation_key = String_brute
	}
	
	text = {
		trigger = {
			OR = {
				trait = duelist
				duelist_skill_is_high_group_trigger = yes
			}
		}
		localisation_key = String_duelist
	}

	fallback_text = {
		localisation_key = String_warrior # Fallback, in case it fails to find relevant info
	}
}


defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetWarriorRoleCap
	
	text = {
		trigger = { has_character_modifier = pet_hunting_eagle }
		localisation_key = String_Sky_Hunter
	}
	text = {
		trigger = {
			has_character_modifier = pet_hunting_dog
			trait = hunter
		}
		localisation_key = String_Hunter
	}
	text = {
		trigger = {
			OR = {
				trait = strategist
				has_character_modifier = adept_of_strategy
				trait = brilliant_strategist
			}
		}
		localisation_key = String_Strategist
	}
	text = {
		localisation_key = String_Warrior
	}
	text = {
		localisation_key = String_Fighter
	}
	text = {
		trigger = {
			prestige = 2000
		}
		localisation_key = String_Champion
	}
	text = {
		localisation_key = String_Soldier
	}
	text = {
		trigger = {
			OR = {
				leader_traits = 1
				has_minor_title = title_commander
			}
		}
		localisation_key = String_Commander
	}
	text = {
		trigger = {
			OR = {
				leader_traits = 1
				trait = wroth
			}
		}
		localisation_key = String_Brute
	}
	
	text = {
		trigger = {
			OR = {
				trait = duelist
				duelist_skill_is_high_group_trigger = yes
			}
		}
		localisation_key = String_Duelist
	}

	fallback_text = {
		localisation_key = String_Warrior # Fallback, in case it fails to find relevant info
	}
}


defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetTeachingMomentActivity
	
	text = {
		localisation_key = String_bravery_lesson
		trigger = {
			OR = {
				has_character_flag = learning_bravery@event_target:teacher
				has_character_flag = teaching_bravery@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_ambition_lesson
		trigger = {
			OR = {
				has_character_flag = learning_ambition@event_target:teacher
				has_character_flag = teaching_ambition@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_patience_lesson
		trigger = {
			OR = {
				has_character_flag = learning_patience@event_target:teacher
				has_character_flag = teaching_patience@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_diligence_lesson
		trigger = {
			OR = {
				has_character_flag = learning_diligence@event_target:teacher
				has_character_flag = teaching_diligence@event_target:student
			}
		}
	}
	fallback_text = {
		localisation_key = String_bravery_lesson # Fallback, in case it fails to find relevant info
	}
}


defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetTeachingMomentTool
	
	text = {
		localisation_key = String_bravery_tool
		trigger = {
			OR = {
				has_character_flag = learning_bravery@event_target:teacher
				has_character_flag = teaching_bravery@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_ambition_tool
		trigger = {
			OR = {
				has_character_flag = learning_ambition@event_target:teacher
				has_character_flag = teaching_ambition@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_patience_tool
		trigger = {
			OR = {
				has_character_flag = learning_patience@event_target:teacher
				has_character_flag = teaching_patience@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_diligence_tool
		trigger = {
			OR = {
				has_character_flag = learning_diligence@event_target:teacher
				has_character_flag = teaching_diligence@event_target:student
			}
		}
	}
	fallback_text = {
		localisation_key = String_bravery_tool # Fallback, in case it fails to find relevant info
	}
}

defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetTeachingMomentResult
	
	text = {
		localisation_key = String_teaching_moment_great
		trigger = { 
			event_target:teacher = {
				has_character_flag = great_outcome
				NOT = { has_character_flag = kiss_of_gratitude }
			}
		}
	}
	text = {
		localisation_key = String_teaching_moment_romance
		trigger = { event_target:teacher = { has_character_flag = kiss_of_gratitude } }
	}
	text = {
		localisation_key = String_teaching_moment_ok
		trigger = { event_target:teacher = { has_character_flag = good_outcome } }
	}
	text = {
		localisation_key = String_teaching_moment_bad
		trigger = { event_target:teacher = { has_character_flag = bad_outcome } }
	}
	fallback_text = {
		localisation_key = String_teaching_moment_ok # Fallback, in case it fails to find relevant info
	}
}


defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetWarriorLodgeCompetitionType
	
	text = {
		localisation_key = String_flyting
		trigger = {
			OR = { #Only for northeners
				society_member_of = warrior_lodge_norse
				society_member_of = warrior_lodge_slavic
				society_member_of = warrior_lodge_baltic
				society_member_of = warrior_lodge_finnish
			}
		}
	}
	text = {
		localisation_key = String_arm_wrestling
	}
	text = {
		localisation_key = String_drinking
		trigger = { NOT = { society_member_of = warrior_lodge_bon } }
	}
	text = {
		localisation_key = String_dice
		trigger = { 
			OR = { 
				society_member_of = warrior_lodge_bon
				society_member_of = warrior_lodge_hellenic
			}
		}
	}
	fallback_text = {
		localisation_key = String_arm_wrestling # Fallback, in case it fails to find relevant info
	}
}

defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetTeachingMomentRomanceReaction
	
	text = {
		localisation_key = String_share_kiss_long
		trigger = { has_character_flag = become_lovers }
	}
	text = {
		localisation_key = String_share_kiss
		trigger = { has_character_flag = both_gain_romance }
	}
	text = {
		localisation_key = String_kissed_on_cheek
		trigger = { has_character_flag = student_gains_crush }
	}
	text = {
		localisation_key = String_kissed_light
		trigger = { has_character_flag = teacher_gains_crush }
	}
}

defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetTeachingMomentFocus
	
	text = {
		localisation_key = String_bravery
		trigger = {
			OR = {
				has_character_flag = learning_bravery@event_target:teacher
				has_character_flag = teaching_bravery@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_ambition
		trigger = {
			OR = {
				has_character_flag = learning_ambition@event_target:teacher
				has_character_flag = teaching_ambition@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_patience
		trigger = {
			OR = {
				has_character_flag = learning_patience@event_target:teacher
				has_character_flag = teaching_patience@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_diligence
		trigger = {
			OR = {
				has_character_flag = learning_diligence@event_target:teacher
				has_character_flag = teaching_diligence@event_target:student
			}
		}
	}
}

defined_text = { #Used to refer to a type of "warrior", initial cap...
	name = GetTeachingMomentFocusCap
	
	text = {
		localisation_key = String_Bravery
		trigger = {
			OR = {
				has_character_flag = learning_bravery@event_target:teacher
				has_character_flag = teaching_bravery@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_Ambition
		trigger = {
			OR = {
				has_character_flag = learning_ambition@event_target:teacher
				has_character_flag = teaching_ambition@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_Patience
		trigger = {
			OR = {
				has_character_flag = learning_patience@event_target:teacher
				has_character_flag = teaching_patience@event_target:student
			}
		}
	}
	text = {
		localisation_key = String_Diligence
		trigger = {
			OR = {
				has_character_flag = learning_diligence@event_target:teacher
				has_character_flag = teaching_diligence@event_target:student
			}
		}
	}
}



defined_text = { #Used to find accurate status of Legend
	name = GetLegendStatus
	
	text = {
		localisation_key = String_LegendaryJourneyActiveTooltip
		trigger = {
            any_society_member = {
            	count = 2
                has_character_flag = call_to_legend_active
                prisoner = no
                is_alive = yes
                is_dying = no
                NOT = { trait = incapable }
            }
        }
	}
	text = {
		localisation_key = String_DefaultLegendTooltip
		trigger = {
			NOT = {
                any_society_member = {
                    has_character_flag = call_to_legend_active
                    prisoner = no
                    is_alive = yes
                    is_dying = no
                    NOT = { trait = incapable }
                }
            }
		}
	}
	text = {
		localisation_key = String_OneWarriorLeftTooltip
		trigger = {
			AND = {
				any_society_member = {
	                has_character_flag = call_to_legend_active
	                prisoner = no
	                is_alive = yes
	                is_dying = no
	                NOT = { trait = incapable }
	            }
	            NOT = {
	                any_society_member = {
	                	count = 2
		                has_character_flag = call_to_legend_active
		                prisoner = no
		                is_alive = yes
		                is_dying = no
		                NOT = { trait = incapable }
		            }
	            }
			}
		}
	}
}

defined_text = { #Used to find correct desc and Berserking potential
	name = GetBerserkerDecisionDesc
	
	text = {
		localisation_key = string_go_berserk_at_home
		trigger = {
           	prisoner = no
        }
	}
	text = {
		localisation_key = string_go_berserk_in_prison
		trigger = {
			prisoner = yes
		}
	}
}
defined_text = { #Used to find correct desc (can return empty - "fallback" contains real text)
	name = GetBerserkerDecisionExtras
	
	text = {
		localisation_key = String_empty_space
		trigger = {
			trait = wroth
			trait = aggressive_leader
		}
	}
	fallback_text = {
		localisation_key = String_some_change_tt
	}
}
defined_text = { #Used to find correct desc and Berserking potential
	name = GetBerserkerDecisionTraitChanges
	
	text = {
		localisation_key = String_gain_wroth_aggressive_leader_lose_defender
		trigger = {
           	NOR = {
				trait = wroth
				trait = patient
				trait = aggressive_leader
			}
			trait = defensive_leader
        }
	}
	text = {
		localisation_key = String_lose_patient_defender_gain_aggressive_leader
		trigger = {
			trait = patient
			trait = defensive_leader
			NOT = {	trait = aggressive_leader }
        }
	}
	text = {
		localisation_key = String_lose_patient_gain_aggressive_leader
		trigger = {
			trait = patient
			NOR = {
				leader_traits = 2 #Max
				trait = aggressive_leader
				trait = defensive_leader
			}
		}
	}
	text = {
		localisation_key = String_gain_aggressive_leader
		trigger = {
			trait = wroth
			NOR = {
				leader_traits = 2 #Max
				trait = aggressive_leader
				trait = defensive_leader
			}
		}
	}
	text = {
		localisation_key = String_lose_patient
		trigger = {
			trait = patient
			OR = { #Either you already have Aggressive Leader, or you have enough leader traits (that are not Defender)...
				trait = aggressive_leader
				AND = {
					leader_traits = 2 #Max
					NOT = { trait = defensive_leader }
				}			
			}
		}
	}
	text = {
		localisation_key = String_gain_wroth
		trigger = {
			NOR = {
				trait = wroth
				trait = patient
			}
			OR = { #Either you already have Aggressive Leader, or you have enough leader traits (that are not Defender)...
				trait = aggressive_leader
				AND = {
					leader_traits = 2 #Max
					NOT = { trait = defensive_leader }
				}			
			}
		}
	}
	text = {
		localisation_key = String_gain_wroth_and_aggressive_leader
		trigger = {
			NOR = {
				trait = wroth
				trait = patient
			}
			NOR = {
				leader_traits = 2
				trait = aggressive_leader
				trait = defensive_leader
			}
		}
	}
	text = {
		localisation_key = String_gain_aggressive_leader_lose_defender
		trigger = {
			trait = wroth
			trait = defensive_leader
			NOT = { trait = aggressive_leader }
		}
	}
}


defined_text = {
	name = GetWarLetterFlavor

	text = {
		trigger = {
			has_focus = focus_war
		}
		localisation_key = string_war_letter_positive_war_focus
	}

	text = {
		trigger = {
			has_focus = focus_hunting
		}
		localisation_key = string_war_letter_positive_hunting_focus
	}

	text = {
		trigger = {
			OR = {
				trait = cavalry_leader
				trait = berserker
				trait = aggressive_leader
			}
		}
		localisation_key = string_war_letter_positive_battlecry
	}

	text = {
		trigger = {
			opinion = {
				who = FROM
				value = 50
			}
		}
		localisation_key = string_war_letter_positive_quench
	}

	text = {
		trigger = {
			OR = {
				trait = skilled_tactician
				trait = brilliant_strategist 
			}
		}
		localisation_key = string_war_letter_positive_tactics
	}

	text = {
		trigger = {
			OR = {
				martial = 16
			}
		}
		localisation_key = string_war_letter_positive_exchange
	}

	text = {
		localisation_key = string_war_letter_positive_battlefield
	}

	text = {
		localisation_key = string_war_letter_positive_wit
	}
}

defined_text = {
	name = GetWarLetterOutcome

	text = {
		trigger = {
			has_character_flag = positive_war_letter
		}
		localisation_key = string_positive_war_letter
	}

	text = {
		trigger = {
			has_character_flag = negative_war_letter
		}
		localisation_key = string_negative_war_letter
	}
}

defined_text = {
	name = GetSuggestedActivity

	text = {
		trigger = {
			FROMFROM = {
				OR = {
					has_focus = focus_hunting
					trait = falconer
					trait = hunter
				}
			}
		}
		localisation_key = string_suggested_post_war_hunting
	}

	text = {
		trigger = {
			FROMFROM = {
				OR = {
					trait = trickster
					trait = gamer
					trait = strategist
				}
				NAND = {
					has_focus = focus_hunting
					trait = falconer
					trait = hunter
				}
			}
		}
		localisation_key = string_suggested_post_war_games
	}

	text = {
		trigger = {
			FROMFROM = {
				OR = {
					trait = scholar
					trait = mystic
					trait = erudite
					learning = 18
					trait = physician
				}
				NAND = {
					has_focus = focus_hunting
					trait = falconer
					trait = hunter
					trait = trickster
					trait = gamer
					trait = strategist
				}
			}
		}
		localisation_key = string_suggested_post_war_knowledge
	}

	text = {
		trigger = {
			FROMFROM = {
				NAND = {
					has_focus = focus_hunting
					trait = falconer
					trait = hunter
					trait = trickster
					trait = gamer
					trait = strategist
					trait = scholar
					trait = mystic
					trait = erudite
					learning = 18
					trait = physician
				}
			}
		}
		localisation_key = string_suggested_post_war_party
	}
}


defined_text = {
	name = GetDecidedActionInHF51002
	text = {
		trigger = {
			has_character_flag = decided_to_kidnap
		}
		localisation_key = string_decided_to_abduct
	}

	text = {
		trigger = {
			has_character_flag = decided_to_dig_up
		}
		localisation_key = string_decided_to_dig_up
	}
}

defined_text = {
	name = GetDecidedWeapon
	text = {
		trigger = {
			has_character_flag = crucible_steel_axe
		}
		localisation_key = string_decided_weapon_axe
	}

	text = {
		trigger = {
			has_character_flag = crucible_steel_sword
		}
		localisation_key = string_decided_weapon_sword
	}

	text = {
		trigger = {
			has_character_flag = crucible_steel_mace
		}
		localisation_key = string_decided_weapon_mace
	}
}


