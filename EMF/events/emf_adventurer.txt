#########################################################
#
# Landless Character Adventures
# Replaces the vanilla range TOG.1200 through TOG.1499
#
#########################################################

# Based upon concept authored by Henrik Fahraeus for the The Old Gods DLC
# Re-Written by Rylock for CK2Plus
# Adapted by zijistark for EMF

namespace = emf_adventurer

### CLAIMANT ADVENTURES

# A landless claimant begins an adventure to press his claim (standard, male-only)
character_event = {
	id = emf_adventurer.0
	
	hide_window = yes
	
	only_men = yes
	min_age = 16
	max_age = 50
	prisoner = no
	capable_only = yes

	trigger = {
		is_ruler = no
		num_of_claims = 1
		
		# must be competent and healthy
		health = 4
		OR = {
			diplomacy = 7
			trait = ambitious
			is_smart_trigger = yes
			is_strong_trigger = yes
		}
		OR = {
			diplomacy = 12
			martial = 10
			prestige = 500
			wealth = 200
		}
		
		# basic disqualifiers
		NOR = {
			trait = content
			trait = craven
			trait = depressed
			trait = imbecile
			trait = nun
			trait = monk
			any_liege = { holy_order = yes }
			any_heir_title = { higher_tier_than = BARON }
		}
		
		# has a suitable claim that can be seized
		any_claim = { emf_adventurer_claim_is_valid_target_basic_trigger = yes }	
		
		# mechanical disqualifiers
		NOR = {
			has_character_modifier = planning_claimant_adventure
			has_character_flag = claimant_adventurer
			has_character_flag = was_claimant_adventurer
		}
	}
	
	mean_time_to_happen = {
		years = 35
		modifier = {
			factor = 0.2
			has_character_flag = flag_denied_title
		}
		modifier = {
			factor = 0.2
			has_character_flag = demon_child_non_pagan
		}
		modifier = {
			factor = 0.5
			has_character_flag = justified_claimant
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = lunatic
				trait = possessed
			}
		}
		modifier = {
			factor = 0.75
			trait = brilliant_strategist
		}
		modifier = {
			factor = 0.75
			is_smart_trigger = yes
		}
		modifier = {
			factor = 0.75
			trait = brave
		}
		modifier = {
			factor = 0.75
			trait = proud
		}
		modifier = {
			factor = 0.75
			trait = greedy
		}
		modifier = {
			factor = 0.75
			trait = envious
		}
		modifier = {
			factor = 0.75
			trait = wroth
		}
		modifier = {
			factor = 0.75
			trait = sayyid
		}
		modifier = {
			factor = 0.75
			wealth = 100
		}
		modifier = {
			factor = 0.75
			wealth = 200
		}
		modifier = {
			factor = 0.75
			wealth = 300
		}
		modifier = {
			factor = 0.75
			diplomacy = 12
		}
		modifier = {
			factor = 1.5
			trait = slothful
		}
		modifier = {
			factor = 1.5
			trait = charitable
		}
		modifier = {
			factor = 1.25
			trait = patient
		}
		modifier = {
			factor = 2.0
			trait = kind
		}
		modifier = {
			factor = 2.0
			trait = humble
		}
		modifier = {
			factor = 2.0
			NOT = { diplomacy = 7 }
		}
	}

	immediate = {
		#pick adventurer target
		random_claim = {
			limit = { emf_adventurer_claim_is_valid_target_basic_trigger = yes }
			log = "INFO: [Root.GetBestName] (ID: [Root.GetID]) has begun an adventure to take [This.GetID] ([This.GetFullBaseName]) from [This.Holder.GetTitledName] (ID: [This.GetID])"
			ROOT = {
				set_character_flag = was_claimant_adventurer
				set_character_flag = planning_claimant_adventure
				add_character_modifier = { name = planning_claimant_adventure hidden = yes duration = 1825 }
				emf_stop_hiding_effect = yes
			}
			
			#warn the target
			holder_scope = {
				reverse_opinion = { who = ROOT modifier = opinion_claimant_adventure_target years = 10 }
				add_character_modifier = { name = adventurer_target_timer duration = 1825 hidden = yes }
				character_event = { id = emf_adventurer.2 }
			}
		}
		
		#find a court to reside in
		character_event = { id = emf_adventurer.3 }
	}
}

# A landless claimant begins an adventure to press her claim (female-only)
character_event = {
	id = emf_adventurer.1
	
	hide_window = yes
	
	only_women = yes
	min_age = 16
	max_age = 50
	prisoner = no
	capable_only = yes

	trigger = {
		is_ruler = no
		
		# Female pre-trigger, so to speak
		any_claim = {
			holder_scope = { independent = yes }
			emf_adventurer_claim_is_valid_target_female_trigger = yes
		}
		
		# must be competent and healthy
		health = 4
		OR = {
			diplomacy = 7
			trait = ambitious
			is_smart_trigger = yes
			is_strong_trigger = yes
		}
		OR = {
			diplomacy = 12
			martial = 10
			prestige = 500
			wealth = 200
		}
		
		# basic disqualifiers
		NOR = {
			trait = content
			trait = craven
			trait = depressed
			trait = imbecile
			trait = nun
			trait = monk
			any_liege = { holy_order = yes }
			any_heir_title = { higher_tier_than = BARON }
		}
		
		# mechanical disqualifiers
		NOR = {
			has_character_modifier = planning_claimant_adventure
			has_character_flag = claimant_adventurer
			has_character_flag = was_claimant_adventurer
		}
		
		# has a suitable claim that can be seized
		any_claim = {
			emf_adventurer_claim_is_valid_target_basic_trigger = yes
			emf_adventurer_claim_is_valid_target_female_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		years = 50
		modifier = {
			factor = 0.2
			has_character_flag = flag_denied_title
		}
		modifier = {
			factor = 0.2
			has_character_flag = demon_child_non_pagan
		}
		modifier = {
			factor = 0.5
			has_character_flag = justified_claimant
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = lunatic
				trait = possessed
			}
		}
		modifier = {
			factor = 0.75
			trait = brilliant_strategist
		}
		modifier = {
			factor = 0.75
			is_smart_trigger = yes
		}
		modifier = {
			factor = 0.75
			trait = brave
		}
		modifier = {
			factor = 0.75
			trait = proud
		}
		modifier = {
			factor = 0.75
			trait = greedy
		}
		modifier = {
			factor = 0.75
			trait = envious
		}
		modifier = {
			factor = 0.75
			trait = wroth
		}
		modifier = {
			factor = 0.75
			trait = sayyid
		}
		modifier = {
			factor = 0.75
			wealth = 100
		}
		modifier = {
			factor = 0.75
			wealth = 200
		}
		modifier = {
			factor = 0.75
			wealth = 300
		}
		modifier = {
			factor = 0.75
			diplomacy = 12
		}
		modifier = {
			factor = 1.5
			trait = slothful
		}
		modifier = {
			factor = 1.5
			trait = charitable
		}
		modifier = {
			factor = 1.25
			trait = patient
		}
		modifier = {
			factor = 2.0
			trait = kind
		}
		modifier = {
			factor = 2.0
			trait = humble
		}
		modifier = {
			factor = 2.0
			NOT = { diplomacy = 7 }
		}
	}

	immediate = {
		#pick adventurer target
		random_claim = {
			limit = {
				emf_adventurer_claim_is_valid_target_basic_trigger = yes
				emf_adventurer_claim_is_valid_target_female_trigger = yes
			}
			log = "INFO: [Root.GetBestName] (ID: [Root.GetID]) has begun an adventure to take [This.GetID] ([This.GetFullBaseName]) from [This.Holder.GetTitledName] (ID: [This.GetID])"
			ROOT = {
				set_character_flag = was_claimant_adventurer
				set_character_flag = planning_claimant_adventure
				add_character_modifier = { name = planning_claimant_adventure hidden = yes duration = 1825 }
				emf_stop_hiding_effect = yes
			}
			
			#warn the target
			holder_scope = {
				reverse_opinion = { who = ROOT modifier = opinion_claimant_adventure_target years = 10 }
				add_character_modifier = { name = adventurer_target_timer duration = 1825 hidden = yes }
				character_event = { id = emf_adventurer.2 }
			}
		}
		
		#find a court to reside in
		character_event = { id = emf_adventurer.3 }
	}
}
	
# Targeted ruler receives word of the adventurer
character_event = {
	id = emf_adventurer.2
	desc = EVTDESC_TOG_1201
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_1201
		opinion = {
			who = FROM
			modifier = opinion_targeted_by_adventurer
			months = 36
		}
	}
}

# Claimant seeks a court to "reside" in
character_event = {
	id = emf_adventurer.3
	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		emf_adventurer_find_adventurer_target_effect = yes
		
		if = {
			limit = {
				liege = {
					NOR = {
						character = event_target:adventurer_target
						is_liege_or_above = event_target:adventurer_target
					}
				}
			}
			liege = { save_event_target_as = adventurer_court }
		}
		
		#only move if the target is their liege or above their liege
		if = {
			limit = {
				liege = {
					OR = {
						character = event_target:adventurer_target
						is_liege_or_above = event_target:adventurer_target
					}
				}
			}
			#first check for a nearby friendly ruler
			random_playable_ruler = {
				limit = {
					emf_adventurer_can_approach_trigger = yes
					opinion = { who = ROOT value = -25 }
					OR = {
						opinion = { who = ROOT value = 40 }
						NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
					}
					NOR = {
						same_realm = event_target:adventurer_target
						is_allied_with = event_target:adventurer_target
						has_non_aggression_pact_with = event_target:adventurer_target
						opinion = { who = event_target:adventurer_target value = 25 }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 200 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_adventurer_court }
				save_event_target_as = adventurer_court
			}
			#then check for a nearby ruler who doesn't hate me and doesn't like my target
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 200 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#first check for a meadium distance friendly ruler
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						OR = {
							opinion = { who = ROOT value = 40 }
							NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
						}
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 400 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for a medium distance ruler who doesn't hate me and doesn't like my target
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 400 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#first check for a far away friendly ruler
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						OR = {
							opinion = { who = ROOT value = 40 }
							NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
						}
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 600 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for a far away ruler who doesn't hate me and doesn't like my target
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 600 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for any friendly ruler
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						OR = {
							opinion = { who = ROOT value = 40 }
							NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
						}
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for any ruler who doesn't hate me and doesn't like my target
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						opinion = { who = ROOT value = -25 }
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for any nearby appropriate ruler
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 200 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for any medium distance appropriate ruler
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 400 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#then check for any far away appropriate ruler
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						NOR = {
							same_realm = event_target:adventurer_target
							is_allied_with = event_target:adventurer_target
							has_non_aggression_pact_with = event_target:adventurer_target
							opinion = { who = event_target:adventurer_target value = 25 }
						}
						capital_scope = {
							event_target:adventurer_target = {
								capital_scope = {
									NOT = { distance = { where = PREVPREV value = 600 } }
								}
							}
						}
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			#failing that, any ruler will do
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						emf_adventurer_can_approach_trigger = yes
						NOT = { same_realm = event_target:adventurer_target }
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			if = {
				limit = { NOT = { has_character_flag = found_adventurer_court } }
				random_playable_ruler = {
					limit = {
						is_playable = yes
						demesne_size = 1
						NOT = { same_realm = event_target:adventurer_target }
					}
					ROOT = { set_character_flag = found_adventurer_court }
					save_event_target_as = adventurer_court
				}
			}
			clr_character_flag = found_adventurer_court

			#move the adventurer there and create their title
			move_character = event_target:adventurer_court
		}
		
		log = "--> [Root.GetBestName] will begin [Root.GetHerHis] adventure in the court of [adventurer_court.GetTitledName] ([adventurer_court.PrimaryTitle.GetID] / ID: [adventurer_court.GetID])"
		event_target:adventurer_court = {
			capital_scope = {
				ROOT = {
					create_title = {
						tier = DUKE
						landless = yes
						adventurer = yes
						culture = THIS
						name = "CLAIMANT_ADVENTURE"
						holder = THIS
						ruler = "LORD"
						ruler_female = "LADY"
						base_title = PREV
					}
				}
			}
		}
		set_defacto_liege = ROOT
		
		#move family & friends to their court
		any_spouse = {
			limit = {
				prisoner = no
				is_ruler = no
			}
			log = "--> [This.GetBestName] has joined [Root.GetBestName] on their adventure (spouse)"
			move_character = ROOT
		}
		any_child = {
			limit = {
				is_ruler = no
				prisoner = no
				OR = {
					is_adult = no
					opinion = { who = ROOT value = 50 }
				}
				OR = {
					is_adult = no
					liege = {
						NOT = { reverse_opinion = { who = PREV value = 0 } }
						NOT = { dynasty = PREV }
					}
				}
			}
			log = "--> [This.GetBestName] has joined [Root.GetBestName] on their adventure (child)"
			move_character = ROOT
			any_child = {
				limit = {
					is_ruler = no
					prisoner = no
					OR = {
						is_adult = no
						opinion = { who = ROOT value = 25 }
					}
					OR = {
						is_adult = no
						liege = {
							NOT = { reverse_opinion = { who = PREV value = 0 } }
							NOT = { dynasty = PREV }
						}
					}
				}
				log = "--> [This.GetBestName] has joined [Root.GetBestName] on their adventure (grandchild)"
				move_character = ROOT
			}
		}
		any_friend = {
			limit = {
				prisoner = no
				is_adult = yes
				is_ruler = no
				NOR = {
					trait = in_hiding
					trait = incapable
					opinion = { who = event_target:adventurer_target value = 25 }
					opinion = { who = liege value = 50 }
				}
			}
			log = "--> [This.GetBestName] has joined [Root.GetBestName] on their adventure (friend)"
			move_character = ROOT
		}
		event_target:adventurer_target = {
			any_realm_character = {
				count = 3
				limit = {
					prisoner = no
					is_adult = yes
					is_ruler = no
					is_councillor = no
					OR = {
						opinion = { who = ROOT value = 40 }
						AND = {
							NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
							opinion = { who = ROOT value = 25 }
						}
					}
					NOR = {
						trait = in_hiding
						trait = incapable
						is_married = event_target:adventurer_target
						opinion = { who = event_target:adventurer_target value = 0 }
						opinion = { who = liege value = 25 }
					}
				}
				log = "--> [This.GetBestName] has joined [Root.GetBestName] on their adventure (realm character)"
				move_character = ROOT
			}
		}

		# Create some courtiers
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = ROOT
			culture = ROOT
			female = no
			age = 30
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = ROOT
			culture = ROOT
			female = no
			age = 25
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = ROOT
			culture = ROOT
			female = no
			age = 29
		}
		create_random_intriguer = {
			random_traits = yes
			dynasty = none
			religion = ROOT
			culture = ROOT
			female = no
			age = 30
		}
		
		#begin approaching rulers
		character_event = { id = emf_adventurer.10 days = 1 }
	}
}

# Adventurer seeks a court to begin recruiting in
character_event = {
	id = emf_adventurer.10
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		ROOT = { emf_adventurer_is_valid_trigger = yes }
		NOT = { has_character_flag = began_adventure }
		NOT = { wealth = 1000 }
	}
	
	immediate = {
		clr_character_flag = do_not_disturb
		remove_character_modifier = do_not_disturb
		emf_adventurer_find_adventurer_target_effect = yes
		emf_adventurer_reset_location_effect = yes
		
		#first ask from the top liege of their current location
		if = {
			limit = {
				location = {
					owner = {
						top_liege = { emf_adventurer_can_approach_trigger = yes }
					}
				}
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 1 hidden = yes } }
			location = {
				owner = {
					top_liege = { character_event = { id = emf_adventurer.15 days = 1 } }
				}
			}
			break = yes
		}
		#then seek out close independent rulers who hate the targeted ruler and are also friends/close relatives
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_like_adventurer_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out close independent rulers who hate the targeted ruler and are of the same religion/culture
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				religion = ROOT
				culture = ROOT
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out close independent rulers who like me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_like_adventurer_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out nearby independent rulers who hate the targeted ruler and are also friends/close relatives
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_like_adventurer_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out nearby independent rulers who hate the targeted ruler and are of the same religion/culture
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				religion = ROOT
				culture = ROOT
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out nearby independent rulers who like me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_like_adventurer_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out independent rulers who are further afield and who hate the targeted ruler and also like me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_like_adventurer_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out independent rulers who are further afield and who hate the targeted ruler and are of the same religion and culture
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				religion = ROOT
				culture = ROOT
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out independent rulers who are further afield and who like me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_like_adventurer_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out close independent rulers who hate the targeted ruler but do not hate me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out nearby independent rulers who hate the targeted ruler but do not hate me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out independent rulers who are further afield and who hate the targeted ruler but do not hate me
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				emf_adventurer_hate_adventurer_target_trigger = yes
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out anyone of the same religion AND culture who is close
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				religion = ROOT
				culture = ROOT
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out anyone of the same religion AND culture who is nearby
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				religion = ROOT
				culture = ROOT
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out anyone of the same religion AND culture who is further afield
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				religion = ROOT
				culture = ROOT
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out anyone of the same religion OR culture who is close
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				OR = {
					religion = ROOT
					culture = ROOT
				}
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out anyone of the same religion OR culture who is nearby
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				OR = {
					religion = ROOT
					culture = ROOT
				}
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out anyone of the same religion OR culture who is further afield
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				OR = {
					religion = ROOT
					culture = ROOT
				}
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out anyone of the same religion group AND culture group who doesn't hate me and who is close
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				culture_group = ROOT
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out anyone of the same religion group AND culture group who doesn't hate me and who is nearby
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				culture_group = ROOT
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out anyone of the same religion group AND culture group who doesn't hate me and who is further afield
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				culture_group = ROOT
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#then seek out anyone of the same religion group who doesn't hate me and who is close
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#then seek out anyone of the same religion group who doesn't hate me and who is nearby
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#then seek out anyone of the same religion group who doesn't hate me and who is further afield
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				opinion = { who = ROOT value = -25 }
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#last resort: go anywhere close
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 150 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 5 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 5 }
			break = yes
		}
		#last resort: go anywhere nearby
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 300 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 10 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 10 }
			break = yes
		}
		#last resort: go anywhere further afield
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
				NOT = { distance = { where = event_target:current_court value = 600 } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 15 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 15 }
			break = yes
		}
		#failing that, go anywhere
		random_independent_ruler = {
			limit = {
				emf_adventurer_can_approach_trigger = yes
				any_realm_province = { NOT = { has_province_modifier = adventurer_recruited } }
			}
			ROOT = { add_character_modifier = { name = do_not_disturb duration = 30 hidden = yes } }
			character_event = { id = emf_adventurer.15 days = 30 }
			break = yes
		}
	}
}

# Adventurer arrives at a foreign court and asks for support
character_event = {
	id = emf_adventurer.15
	desc = EVTDESC_TOG_1215
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			emf_adventurer_is_valid_trigger = yes
			NOT = { has_character_flag = began_adventure }
		}
	}
	
	immediate = {
		FROM = { remove_character_modifier = do_not_disturb }
		capital_scope = { save_event_target_as = current_court }
	}
	
	option = {
		name = EVTOPTA_TOG_1215 # I will give him my full support
		trigger = {
			wealth = 10
		}
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0.75
				war = yes
			}
			modifier = {
				factor = 0.5
				FROM = { wealth = 500 }
			}
			modifier = {
				factor = 0.5
				FROM = { wealth = 750 }
			}
			modifier = {
				factor = 0.5
				FROM = { wealth = 1000 }
			}
			modifier = {
				factor = 5
				is_friend = FROM
			}
			modifier = {
				factor = 5
				is_rival = event_target:adventurer_target
			}
			modifier = {
				factor = 0
				OR = {
					is_friend = event_target:adventurer_target
					is_rival = FROM
					NOT = { opinion = { who = FROM value = -50 } }
					opinion = { who = event_target:adventurer_target value = 50 }
				}
			}
			modifier = {
				factor = 1.5
				religion = FROM
				NOT = { religion = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				culture = FROM
				NOT = { culture = event_target:adventurer_target }
			}
			modifier = {
				factor = 2
				is_close_relative = FROM
				NOT = { is_close_relative = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				OR = {
					dynasty = FROM
					is_allied_with = FROM
				}
				NOT = {
					is_close_relative = FROM
					dynasty = event_target:adventurer_target
					is_allied_with = event_target:adventurer_target
					has_non_aggression_pact_with = event_target:adventurer_target
				}
			}
#			modifier = {
#				factor = 0.1
#				has_character_modifier = ai_austerity
#			}
			modifier = {
				factor = 1.5
				trait = charitable
			}
			modifier = {
				factor = 0.25
				is_allied_with = event_target:adventurer_target
			}
			modifier = {
				factor = 0.5
				NOT = { is_allied_with = event_target:adventurer_target }
				has_non_aggression_pact_with = event_target:adventurer_target
			}
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 0.5
				NOT = { religion = FROM }
			}
			modifier = {
				factor = 0.5
				NOT = { culture_group = FROM }
			}
			modifier = {
				factor = 0.75
				NOT = { opinion = { who = FROM value = 0 } }
			}
			modifier = {
				factor = 0.5
				NOT = { opinion = { who = FROM value = -25 } }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 25 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 2
				opinion = { who = FROM value = 75 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = event_target:adventurer_target value = -25 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = event_target:adventurer_target value = -50 } }
			}
			modifier = {
				factor = 2
				NOT = { opinion = { who = event_target:adventurer_target value = -75 } }
			}
			modifier = {
				factor = 0.5
				opinion = { who = event_target:adventurer_target value = 25 }
			}
			modifier = {
				factor = 0.5
				FROM = { NOT = { diplomacy = 6 } }
			}
			modifier = {
				factor = 1.1
				FROM = { diplomacy = 10 }
			}
			modifier = {
				factor = 1.1
				FROM = { diplomacy = 12 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 14 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 16 }
			}
		}
		emf_adventurer_donate_to_adventurer_effect = yes
		reverse_opinion = { who = FROM modifier = backed_adventurer years = 20 }
		reverse_opinion = { who = event_target:adventurer_target modifier = supported_adventurer_against_me multiplier = 2 years = 10 }
		FROM = { custom_tooltip = { text = ADVENTURER_RECRUITS_FROM_MY_LANDS } }
		hidden_tooltip = {
			# inform targeted ruler
			if = {
				limit = {
					is_within_diplo_range = event_target:adventurer_target
					FROM = { NOT = { has_character_flag = not_interested_in_movement } }
				}
				event_target:adventurer_target = { character_event = { id = emf_adventurer.16 days = 15 } }
			}
			# adventurer recruits in the realm, remaining a time based on the ruler's realm size
			if = {
				limit = { NOT = { realm_size = 50 } }
				FROM = { add_character_modifier = { name = do_not_disturb duration = 75 hidden = yes } }
				any_realm_character = {
					limit = { emf_adventurer_can_approach_vassal_trigger = yes }
					letter_event = { id = emf_adventurer.18 days = 15 random = 45 }
				}
				any_realm_province = {
					limit = {
						NOT = { has_province_modifier = adventurer_recruited }
						NOT = { any_province_holding = { is_occupied = yes } }
					}
					province_event = { id = emf_adventurer.19 days = 15 random = 45 }
				}
				# adventurer moves on after a time
				FROM = { character_event = { id = emf_adventurer.10 days = 60 random = 15 } }
			}
			if = {
				limit = {
					realm_size = 50
					NOT = { realm_size = 100 }
				}
				FROM = { add_character_modifier = { name = do_not_disturb duration = 130 hidden = yes } }
				any_realm_character = {
					limit = { emf_adventurer_can_approach_vassal_trigger = yes }
					letter_event = { id = emf_adventurer.18 days = 15 random = 100 }
				}			
				any_realm_province = {
					limit = {
						NOT = { has_province_modifier = adventurer_recruited }
						NOT = { any_province_holding = { is_occupied = yes } }
					}
					province_event = { id = emf_adventurer.19 days = 15 random = 100 }
				}
				# adventurer moves on after a time
				FROM = { character_event = { id = emf_adventurer.10 days = 115 random = 15 } }
			}			
			if = {
				limit = { realm_size = 100 }
				FROM = { add_character_modifier = { name = do_not_disturb duration = 180 hidden = yes } }
				any_realm_character = {
					limit = { emf_adventurer_can_approach_vassal_trigger = yes }
					letter_event = { id = emf_adventurer.18 days = 15 random = 150 }
				}
				any_realm_province = {
					limit = {
						NOT = { has_province_modifier = adventurer_recruited }
						NOT = { any_province_holding = { is_occupied = yes } }
					}
					province_event = { id = emf_adventurer.19 days = 15 random = 150 }
				}
				# adventurer moves on after a time
				FROM = { character_event = { id = emf_adventurer.10 days = 165 random = 15 } }
			}
		}		
	}
	option = {
		name = EVTOPTB_TOG_1215 # He may raise support in my lands
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0.75
				war = yes
			}
			modifier = {
				factor = 5
				is_friend = FROM
			}
			modifier = {
				factor = 5
				is_rival = event_target:adventurer_target
			}
			modifier = {
				factor = 0
				OR = {
					is_friend = event_target:adventurer_target
					is_rival = FROM
					NOT = { opinion = { who = FROM value = -50 } }
					opinion = { who = event_target:adventurer_target value = 50 }
				}
			}
			modifier = {
				factor = 1.5
				religion = FROM
				NOT = { religion = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				culture = FROM
				NOT = { culture = event_target:adventurer_target }
			}
			modifier = {
				factor = 2
				is_close_relative = FROM
				NOT = { is_close_relative = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				OR = {
					dynasty = FROM
					is_allied_with = FROM
				}
				NOR = {
					is_close_relative = FROM
					dynasty = event_target:adventurer_target
					is_allied_with = event_target:adventurer_target
					has_non_aggression_pact_with = event_target:adventurer_target
				}
			}
			modifier = {
				factor = 0.25
				is_allied_with = event_target:adventurer_target
			}
			modifier = {
				factor = 0.5
				NOT = { is_allied_with = event_target:adventurer_target }
				has_non_aggression_pact_with = event_target:adventurer_target
			}
			modifier = {
				factor = 0.5
				NOT = { religion = FROM }
			}
			modifier = {
				factor = 0.5
				NOT = { culture_group = FROM }
			}
			modifier = {
				factor = 0.75
				NOT = { opinion = { who = FROM value = 0 } }
			}
			modifier = {
				factor = 0.5
				NOT = { opinion = { who = FROM value = -25 } }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 25 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 2
				opinion = { who = FROM value = 75 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = event_target:adventurer_target value = -25 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = event_target:adventurer_target value = -50 } }
			}
			modifier = {
				factor = 2
				NOT = { opinion = { who = event_target:adventurer_target value = -75 } }
			}
			modifier = {
				factor = 0.5
				opinion = { who = event_target:adventurer_target value = 25 }
			}
			modifier = {
				factor = 0.5
				FROM = { NOT = { diplomacy = 6 } }
			}
			modifier = {
				factor = 1.1
				FROM = { diplomacy = 10 }
			}
			modifier = {
				factor = 1.1
				FROM = { diplomacy = 12 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 14 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 16 }
			}
		}
		reverse_opinion = { who = FROM modifier = let_adventurer_stay years = 20 }
		reverse_opinion = { who = event_target:adventurer_target modifier = supported_adventurer_against_me years = 10 }
		FROM = { custom_tooltip = { text = ADVENTURER_RECRUITS_FROM_MY_LANDS } }
		hidden_tooltip = {
			# inform targeted ruler
			if = {
				limit = {
					is_within_diplo_range = event_target:adventurer_target
					FROM = { NOT = { has_character_flag = not_interested_in_movement } }
				}
				event_target:adventurer_target = { character_event = { id = emf_adventurer.17 days = 15 } }
			}
			# adventurer recruits in the realm, remaining a time based on the ruler's realm size
			if = {
				limit = { NOT = { realm_size = 50 } }
				FROM = { add_character_modifier = { name = do_not_disturb duration = 75 hidden = yes } }
				any_realm_character = {
					limit = { emf_adventurer_can_approach_vassal_trigger = yes }
					letter_event = { id = emf_adventurer.18 days = 15 random = 45 }
				}
				any_realm_province = {
					limit = {
						NOT = { has_province_modifier = adventurer_recruited }
						NOT = { any_province_holding = { is_occupied = yes } }
					}
					province_event = { id = emf_adventurer.19 days = 15 random = 45 }
				}
				# adventurer moves on after a time
				FROM = { character_event = { id = emf_adventurer.10 days = 60 random = 15 } }
			}
			if = {
				limit = {
					realm_size = 50
					NOT = { realm_size = 100 }
				}
				FROM = { add_character_modifier = { name = do_not_disturb duration = 130 hidden = yes } }
				any_realm_character = {
					limit = { emf_adventurer_can_approach_vassal_trigger = yes }
					letter_event = { id = emf_adventurer.18 days = 15 random = 100 }
				}			
				any_realm_province = {
					limit = {
						NOT = { has_province_modifier = adventurer_recruited }
						NOT = { any_province_holding = { is_occupied = yes } }
					}
					province_event = { id = emf_adventurer.19 days = 15 random = 100 }
				}
				# adventurer moves on after a time
				FROM = { character_event = { id = emf_adventurer.10 days = 115 random = 15 } }
			}			
			if = {
				limit = { realm_size = 100 }
				FROM = { add_character_modifier = { name = do_not_disturb duration = 180 hidden = yes } }
				any_realm_character = {
					limit = { emf_adventurer_can_approach_vassal_trigger = yes }
					letter_event = { id = emf_adventurer.18 days = 15 random = 150 }
				}
				any_realm_province = {
					limit = {
						NOT = { has_province_modifier = adventurer_recruited }
						NOT = { any_province_holding = { is_occupied = yes } }
					}
					province_event = { id = emf_adventurer.19 days = 15 random = 150 }
				}
				# adventurer moves on after a time
				FROM = { character_event = { id = emf_adventurer.10 days = 165 random = 15 } }
			}
		}
	}
	option = {
		name = EVTOPTC_TOG_1215 # He can do as he wishes, but not here
		ai_chance = {
			factor = 40
			modifier = {
				factor = 2
				NOT = { religion = FROM }
			}
			modifier = {
				factor = 1.5
				NOT = { culture = FROM }
			}
			modifier = {
				factor = 1.5
				NOT = { culture_group = FROM }
			}
		}
		reverse_opinion = { who = FROM modifier = turned_adventurer_away years = 20 }
		FROM = {
			custom_tooltip = {
				text = ADVENTURER_MUST_MOVE_ON
				hidden_tooltip = { character_event = { id = emf_adventurer.10 } }
			}
		}
	}
	option = {
		name = EVTOPTD_TOG_1215 # Betray him for a ransom
		trigger = {
			intrigue = 8
			NOT = { trait = honest }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 2
				NOT = { religion_group = FROM }
			}
			modifier = {
				factor = 2
				trait = deceitful
			}
			modifier = {
				factor = 2
				likes_better_than = { who = event_target:adventurer_target than = FROM }
			}
			modifier = {
				factor = 0.5
				likes_better_than = { who = FROM than = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				is_allied_with = event_target:adventurer_target
			}
			modifier = {
				factor = 1.5
				trait = cruel
			}
			modifier = {
				factor = 1.5
				trait = greedy
			}
			modifier = {
				factor = 1.25
				trait = arbitrary
			}
			modifier = {
				factor = 1.25
				FROM = { NOT = { diplomacy = 6 } }
			}
			modifier = {
				factor = 0.8
				FROM = { diplomacy = 10 }
			}
			modifier = {
				factor = 0.8
				FROM = { diplomacy = 14 }
			}
			modifier = {
				factor = 0.8
				FROM = { diplomacy = 18 }
			}
			modifier = {
				factor = 0.5
				is_close_relative = FROM
			}
			modifier = {
				factor = 0.5
				trait = just
			}
			modifier = {
				factor = 0
				NOR = {
					trait = deceitful
					trait = ambitious
					trait = cruel
					is_allied_with = event_target:adventurer_target
				}
			}
			modifier = {
				factor = 0
				OR = {
					trait = kind
					has_truce = event_target:adventurer_target
					has_non_aggression_pact_with = event_target:adventurer_target
					war_with = event_target:adventurer_target
					is_rival = event_target:adventurer_target
					is_friend = FROM
				}
			}	
		}
		if = {
			limit = { trait = kind }
			random = {
				chance = 50
				remove_trait = kind
			}
		}
		if = {
			limit = { NOT = { trait = deceitful } }
			random = {
				chance = 50
				add_trait = deceitful
			}
		}
		tooltip_info = intrigue
		reverse_opinion = { who = FROM modifier = betrayed_adventurer years = 100 }
		hidden_tooltip = { FROM = { add_character_modifier = { name = do_not_disturb duration = 20 hidden = yes } } }
		random_list = {
			50 = {
				modifier = {
					factor = 1.2
					FROM = { attribute_diff = { character = ROOT attribute = intrigue value = 1 } }
				}
				modifier = {
					factor = 1.2
					FROM = { attribute_diff = { character = ROOT attribute = intrigue value = 3 } }
				}
				modifier = {
					factor = 1.2
					FROM = { attribute_diff = { character = ROOT attribute = intrigue value = 5 } }
				}
				modifier = {
					factor = 1.5
					FROM = { attribute_diff = { character = ROOT attribute = intrigue value = 7 } }
				}
				modifier = {
					factor = 1.5
					FROM = { attribute_diff = { character = ROOT attribute = intrigue value = 9 } }
				}
				modifier = {
					factor = 2.0
					FROM = { attribute_diff = { character = ROOT attribute = intrigue value = 11 } }
				}
				prestige = -50
				FROM = { custom_tooltip = { text = ADVENTURER_ESCAPES } }
				hidden_tooltip = {
					character_event = { id = emf_adventurer.20 }
					FROM = { character_event = { id = emf_adventurer.10 } } # Adventurer moves on
				}
			}
			50 = {
				modifier = {
					factor = 1.2
					attribute_diff = { character = FROM attribute = intrigue value = 1 }
				}
				modifier = {
					factor = 1.2
					attribute_diff = { character = FROM attribute = intrigue value = 3 }
				}
				modifier = {
					factor = 1.2
					attribute_diff = { character = FROM attribute = intrigue value = 5 }
				}
				modifier = {
					factor = 1.2
					attribute_diff = { character = FROM attribute = intrigue value = 7 }
				}
				modifier = {
					factor = 1.2
					attribute_diff = { character = FROM attribute = intrigue value = 9 }
				}
				FROM = { imprison = ROOT }
				event_target:adventurer_target = { letter_event = { id = emf_adventurer.22 tooltip = OFFER_ADVENTURER_FOR_RANSOM } }
				hidden_tooltip = {
					character_event = { id = emf_adventurer.21 }
				}
			}
		}
	}
}

# Targeted ruler hears that adventurer is being supported
character_event = {
	id = emf_adventurer.16
	desc = EVTDESC_TOG_1216
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	show_from_from = yes
	
	trigger = {
		ai = no
		has_opinion_modifier = { who = FROMFROM modifier = opinion_targeted_by_adventurer }
		FROMFROM = { emf_adventurer_is_valid_trigger = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_1216
	}
	option = {
		name = EVTOPTB_TOG_1216
		hidden_tooltip = {
			FROMFROM = { set_character_flag = not_interested_in_movements }
		}
	}
}

# Targeted ruler hears that adventurer is being allowed to recruit
character_event = {
	id = emf_adventurer.17
	desc = EVTDESC_TOG_1217
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	show_from_from = yes
	
	trigger = {
		ai = no
		has_opinion_modifier = { who = FROMFROM modifier = opinion_targeted_by_adventurer }
		FROMFROM = { emf_adventurer_is_valid_trigger = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_1217
	}
	option = {
		name = EVTOPTB_TOG_1216
		hidden_tooltip = {
			FROMFROM = { set_character_flag = not_interested_in_movements }
		}
	}
}

# Adventurer asks those in the realm for support
letter_event = {
	id = emf_adventurer.18
	desc = EVTDESC_TOG_1218
	border = GFX_event_letter_frame_diplomacy
	
	is_triggered_only = yes
	show_from_from = yes
	
	trigger = {
		FROMFROM = { emf_adventurer_is_valid_trigger = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_1218 # Agree
		trigger = { wealth = 10 }
		ai_chance = {
			factor = 35
			modifier = {
				factor = 0.5
				FROMFROM = { wealth = 500 }
			}
			modifier = {
				factor = 0.5
				FROMFROM = { wealth = 750 }
			}
			modifier = {
				factor = 0.5
				FROMFROM = { wealth = 1000 }
			}
			modifier = {
				factor = 0.75
				NOT = { wealth = 25 }
			}
			modifier = {
				factor = 5
				is_friend = FROMFROM
			}
			modifier = {
				factor = 5
				is_rival = event_target:adventurer_target
			}
			modifier = {
				factor = 0
				OR = {
					is_friend = event_target:adventurer_target
					is_rival = FROMFROM
					NOT = { opinion = { who = FROMFROM value = -50 } }
					opinion = { who = event_target:adventurer_target value = 50 }
				}
			}
			modifier = {
				factor = 1.5
				religion = FROMFROM
				NOT = { religion = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				culture = FROMFROM
				NOT = { culture = event_target:adventurer_target }
			}
			modifier = {
				factor = 2
				is_close_relative = FROMFROM
				NOT = { is_close_relative = event_target:adventurer_target }
			}
			modifier = {
				factor = 1.5
				OR = {
					dynasty = FROMFROM
					is_allied_with = FROMFROM
				}
				NOR = {
					is_close_relative = FROMFROM
					dynasty = event_target:adventurer_target
					is_allied_with = event_target:adventurer_target
					has_non_aggression_pact_with = event_target:adventurer_target
				}
			}
			# modifier = {
			# 	factor = 0.1
			# 	has_character_modifier = ai_austerity
			# }
			modifier = {
				factor = 1.5
				trait = charitable
			}
			modifier = {
				factor = 0.25
				is_allied_with = event_target:adventurer_target
			}
			modifier = {
				factor = 0.5
				NOT = { is_allied_with = event_target:adventurer_target }
				has_non_aggression_pact_with = event_target:adventurer_target
			}
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 0.5
				NOT = { religion = FROMFROM }
			}
			modifier = {
				factor = 0.8
				NOT = { culture = FROMFROM }
			}
			modifier = {
				factor = 0.5
				NOT = { culture_group = FROMFROM }
			}
			modifier = {
				factor = 0.75
				NOT = { opinion = { who = FROMFROM value = 0 } }
			}
			modifier = {
				factor = 0.5
				NOT = { opinion = { who = FROMFROM value = -25 } }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROMFROM value = 25 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROMFROM value = 50 }
			}
			modifier = {
				factor = 2
				opinion = { who = FROMFROM value = 75 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = event_target:adventurer_target value = -25 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = event_target:adventurer_target value = -50 } }
			}
			modifier = {
				factor = 2
				NOT = { opinion = { who = event_target:adventurer_target value = -75 } }
			}
			modifier = {
				factor = 0.5
				opinion = { who = event_target:adventurer_target value = 25 }
			}
			modifier = {
				factor = 0.5
				FROMFROM = { NOT = { diplomacy = 6 } }
			}
			modifier = {
				factor = 1.2
				FROMFROM = { diplomacy = 10 }
			}
			modifier = {
				factor = 1.2
				FROMFROM = { diplomacy = 12 }
			}
			modifier = {
				factor = 1.2
				FROMFROM = { diplomacy = 14 }
			}
			modifier = {
				factor = 1.2
				FROMFROM = { diplomacy = 16 }
			}
		}
		if = {
			limit = {
				wealth = 10
				NOT = { wealth = 40 }
			}
			wealth = -10
			FROMFROM = { wealth = 10 }
		}
		if = {
			limit = {
				wealth = 40
				NOT = { wealth = 80 }
			}
			wealth = -20
			FROMFROM = { wealth = 20 }
		}
		if = {
			limit = {
				wealth = 80
				NOT = { wealth = 120 }
			}
			wealth = -40
			FROMFROM = { wealth = 40 }
		}
		if = {
			limit = {
				wealth = 120
				NOT = { wealth = 160 }
			}
			wealth = -60
			FROMFROM = { wealth = 60 }
		}
		if = {
			limit = {
				wealth = 160
				NOT = { wealth = 200 }
			}
			wealth = -80
			FROMFROM = { wealth = 80 }
		}
		if = {
			limit = {
				wealth = 200
				NOT = { wealth = 300 }
			}
			wealth = -100
			FROMFROM = { wealth = 100 }
		}
		if = {
			limit = {
				wealth = 300
			}
			wealth = -150
			FROMFROM = { wealth = 150 }
		}
		reverse_opinion = { who = FROMFROM modifier = backed_adventurer years = 20 }
	}
	option = {
		name = EVTOPTB_TOG_1218 # Refuse
		ai_chance = {
			factor = 65
		}
		reverse_opinion = { who = FROMFROM modifier = refused_adventurer years = 20 }
	}
}

# Adventurer recruits from a province in the realm
province_event = {
	id = emf_adventurer.19
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = { emf_adventurer_is_valid_trigger = yes }
	}
	
	immediate = {
		add_province_modifier = {
			name = adventurer_recruited
			duration = 900
		}
		if = {
			limit = {
				culture_group = FROMFROM
				religion = FROMFROM
			}
			random_list = {
				50 = {
					modifier = {
						factor = 0.8
						FROMFROM = {
							diplomacy = 10
							NOT = { diplomacy = 15 }
						}
					}
					modifier = {
						factor = 0.4
						FROMFROM = { diplomacy = 15 }
					}
					#no bonus
				}
				40 = {
					modifier = {
						factor = 0.75
						FROMFROM = { diplomacy = 10 }
					}
					FROMFROM = { wealth = 10 }
				}
				10 = {
					modifier = {
						factor = 2.0
						FROMFROM = {
							diplomacy = 10
							NOT = { diplomacy = 15 }
						}
					}
					modifier = {
						factor = 3.0
						FROMFROM = { diplomacy = 15 }
					}
					FROMFROM = { wealth = 20 }
				}
				10 = {
					modifier = {
						factor = 0
						FROMFROM = { NOT = { diplomacy = 10 } }
					}
					modifier = {
						factor = 2.0
						FROMFROM = { diplomacy = 15 }
					}
					FROMFROM = { wealth = 30 }
				}
			}
		}
		if = {
			limit = {
				OR = {
					NOT = { culture_group = FROMFROM }
					NOT = { religion = FROMFROM }
				}
				OR = {
					culture_group = FROMFROM
					religion = FROMFROM
				}
			}
			random_list = {
				60 = {
					modifier = {
						factor = 0.83
						FROMFROM = {
							diplomacy = 10
							NOT = { diplomacy = 15 }
						}
					}
					modifier = {
						factor = 0.58
						FROMFROM = { diplomacy = 15 }
					}
					#no bonus
				}
				30 = {
					modifier = {
						factor = 0.66
						FROMFROM = {
							diplomacy = 10
							NOT = { diplomacy = 15 }
						}
					}
					modifier = {
						factor = 1.17
						FROMFROM = { diplomacy = 15 }
					}
					FROMFROM = { wealth = 10 }
				}
				10 = {
					modifier = {
						factor = 2.0
						FROMFROM = { diplomacy = 10 }
					}
					FROMFROM = { wealth = 20 }
				}
				10 = {
					modifier = {
						factor = 0
						FROMFROM = { NOT = { diplomacy = 10 } }
					}
					FROMFROM = { wealth = 30 }
				}
			}
		}
		if = {
			limit = {
				NOT = { culture_group = FROMFROM }
				NOT = { religion = FROMFROM }
			}
			random_list = {
				80 = {
					modifier = {
						factor = 0.75
						FROMFROM = {
							diplomacy = 10
							NOT = { diplomacy = 15 }
						}
					}
					modifier = {
						factor = 0.56
						FROMFROM = { diplomacy = 15 }
					}
					FROMFROM = { wealth = 0 }
				}
				10 = {
					modifier = {
						factor = 3.0
						FROMFROM = {
							diplomacy = 10
							NOT = { diplomacy = 15 }
						}
					}
					modifier = {
						factor = 3.5
						FROMFROM = { diplomacy = 15 }
					}
					FROMFROM = { wealth = 10 }
				}
				10 = {
					modifier = {
						factor = 1.5
						FROMFROM = { diplomacy = 15 }
					}
					FROMFROM = { wealth = 20 }
				}
				5 = {
					modifier = {
						factor = 0
						FROMFROM = { NOT = { diplomacy = 15 } }
					}
					FROMFROM = { wealth = 30 }
				}
			}
		}
	}
}

# Adventurer escapes the trap and flees the realm
character_event = {
	id = emf_adventurer.20
	desc = EVTDESC_TOG_1220
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	show_from_from = yes
	
	option = {
		name = CURSES
	}
}

# Adventurer is imprisoned and can now be offered for ransom
character_event = {
	id = emf_adventurer.21
	desc = EVTDESC_TOG_1221
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	show_from_from = yes
	
	option = {
		name = EXCELLENT
	}
}

# Adventurer offered to the targeted ruler for ransom
letter_event = {
	id = emf_adventurer.22
	desc = EVTDESC_TOG_1222
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_1222 # Pay the ransom
		ai_chance = {
			factor = 75
			modifier = {
				factor = 0
				NOT = { wealth = 50 }
			}
			# modifier = {
			# 	factor = 0.5
			# 	has_character_modifier = ai_austerity
			# }
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 0.75
				FROMFROM = { NOT = { wealth = 250 } }
			}
			modifier = {
				factor = 0.75
				FROMFROM = { NOT = { wealth = 200 } }
			}
			modifier = {
				factor = 0.75
				FROMFROM = { NOT = { wealth = 150 } }
			}
			modifier = {
				factor = 0.75
				FROMFROM = { NOT = { wealth = 100 } }
			}
		}
		wealth = -50
		hidden_tooltip = {
			save_event_target_as = new_court_home
			FROM = { letter_event = { id = emf_adventurer.23 days = 3 } }
			FROMFROM = {
				hidden_tooltip = { prisoner = no }
				emf_adventurer_abandon_adventure_effect = yes
				reverse_opinion = { who = ROOT modifier = opinion_traitor }
			}
		}
		FROMFROM = { imprison = ROOT }
	}
	option = {
		name = EVTOPTB_TOG_1222 # Refuse
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				trait = greedy
			}
		}
		hidden_tooltip = {
			FROM = { letter_event = { id = emf_adventurer.24 days = 3 } }
		}
	}
}

# Notification that the ransom has been paid
letter_event = {
	id = emf_adventurer.23
	desc = EVTDESC_TOG_1223
	
	is_triggered_only = yes
	
	option = {
		name = EXCELLENT
		wealth = 50
		reverse_opinion = { who = FROM modifier = opinion_grateful years = 10 }
	}
}

# Notification that the ransom has been refused
letter_event = {
	id = emf_adventurer.24
	desc = EVTDESC_TOG_1224
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_1224 # Let him go
		FROMFROMFROM = {
			prisoner = no
			custom_tooltip = {
				text = ADVENTURER_MUST_MOVE_ON
				character_event = { id = emf_adventurer.10 } # Adventurer moves on
			}
		}
	}
	option = {
		name = EVTOPTB_TOG_1224 # Leave him where he is
		FROMFROMFROM = {
			custom_tooltip = { text = ADVENTURER_STAYS_IN_PRISON }
		}
	}
}

# Adventurer seeks support in the targeted liege's realm
character_event = {
	id = emf_adventurer.30
	
	hide_window = yes
	
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		emf_adventurer_is_valid_trigger = yes
		NOT = { has_character_flag = began_adventure }
		NOT = { wealth = 1000 }
		any_opinion_modifier_target = {
			has_opinion_modifier = { who = ROOT modifier = opinion_targeted_by_adventurer }
			any_realm_character = {
				wealth = 10
				is_within_diplo_range = ROOT
				is_adult = yes
				prisoner = no
				OR = {
					dynasty = ROOT
					is_close_relative = ROOT
					any_spouse = { is_close_relative = ROOT }
					is_friend = ROOT
					opinion = { who = ROOT value = 40 }
					is_rival = PREV
					NOT = { reverse_opinion = { who = PREV value = -40 } }
				}
				NOR = {
					trait = incapable
					has_opinion_modifier = { who = ROOT modifier = opinion_targeted_by_adventurer }
					reverse_has_opinion_modifier = { who = ROOT modifier = turned_adventurer_away }
					reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
					reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					reverse_has_opinion_modifier = { who = ROOT modifier = betrayed_adventurer }
					reverse_has_opinion_modifier = { who = ROOT modifier = refused_adventurer }
				}
			}
		}
	}
	
	mean_time_to_happen = {
		days = 20
		modifier = {
			factor = 0.5
			NOT = { wealth = 100 }
		}
		modifier = {
			factor = 1.5
			wealth = 300
		}
		modifier = {
			factor = 1.5
			wealth = 400
		}
		modifier = {
			factor = 2
			wealth = 500
		}
		modifier = {
			factor = 2
			wealth = 600
		}
		modifier = {
			factor = 2
			wealth = 700
		}
	}
	
	immediate = {
		random_opinion_modifier_target = {
			limit = { has_opinion_modifier = { who = ROOT modifier = opinion_targeted_by_adventurer } }
			random_realm_character = {
				limit = {
					wealth = 10
					is_within_diplo_range = ROOT
					is_adult = yes
					prisoner = no
					OR = {
						dynasty = ROOT
						is_close_relative = ROOT
						any_spouse = { is_close_relative = ROOT }
						is_friend = ROOT
						opinion = { who = ROOT value = 40 }
						is_rival = PREV
						NOT = { reverse_opinion = { who = PREV value = -40 } }
					}
					NOR = {
						trait = incapable
						has_opinion_modifier = { who = ROOT modifier = opinion_targeted_by_adventurer }
						reverse_has_opinion_modifier = { who = ROOT modifier = turned_adventurer_away }
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
						reverse_has_opinion_modifier = { who = ROOT modifier = betrayed_adventurer }
						reverse_has_opinion_modifier = { who = ROOT modifier = refused_adventurer }
					}
				}
				letter_event = { id = emf_adventurer.31 }
			}
		}
	}
}

# Member of targeted ruler's realm receives plea for support
letter_event = {
	id = emf_adventurer.31
	desc = EVTDESC_TOG_1231
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_1231 # Agree
		ai_chance = {
			factor = 35
			modifier = {
				factor = 5
				in_faction = faction_claimant
				supported_claimant = { character = FROM }
			}
			modifier = {
				factor = 0.75
				NOT = { wealth = 25 }
			}
			modifier = {
				factor = 0.5
				FROM = { wealth = 500 }
			}
			modifier = {
				factor = 0.5
				FROM = { wealth = 750 }
			}
			modifier = {
				factor = 0.5
				FROM = { wealth = 1000 }
			}
			modifier = {
				factor = 5
				is_friend = FROM
			}
			modifier = {
				factor = 5
				top_liege = { is_rival = ROOT }
			}
			modifier = {
				factor = 0
				OR = {
					top_liege = { is_friend = ROOT }
					is_rival = FROM
					NOT = { opinion = { who = FROM value = -50 } }
					top_liege = { reverse_opinion = { who = ROOT value = 50 } }
				}
			}
			modifier = {
				factor = 1.25
				religion = FROM
				top_liege = { NOT = { religion = ROOT } }
			}
			modifier = {
				factor = 1.25
				culture = FROM
				top_liege = { NOT = { culture = ROOT } }
			}
			modifier = {
				factor = 2
				is_close_relative = FROM
				top_liege = { NOT = { is_close_relative = ROOT } }
			}
			modifier = {
				factor = 1.5
				OR = {
					dynasty = FROM
					is_allied_with = FROM
				}
				NOR = {
					is_close_relative = FROM
					top_liege = { dynasty = ROOT }
					top_liege = { is_allied_with = ROOT }
					top_liege = { has_non_aggression_pact_with = ROOT }
				}
			}
			# modifier = {
			# 	factor = 0.1
			# 	has_character_modifier = ai_austerity
			# }
			modifier = {
				factor = 1.5
				trait = charitable
			}
			modifier = {
				factor = 0.5
				top_liege = { is_allied_with = ROOT }
			}
			modifier = {
				factor = 0.75
				top_liege = {
					NOT = { is_allied_with = ROOT }
					has_non_aggression_pact_with = ROOT
				}
			}
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 0.5
				NOT = { religion = FROM }
			}
			modifier = {
				factor = 0.8
				NOT = { culture = FROM }
			}
			modifier = {
				factor = 0.5
				NOT = { culture_group = FROM }
			}
			modifier = {
				factor = 0.75
				NOT = { opinion = { who = FROM value = 0 } }
			}
			modifier = {
				factor = 0.5
				NOT = { opinion = { who = FROM value = -25 } }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 25 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 2
				opinion = { who = FROM value = 75 }
			}
			modifier = {
				factor = 1.25
				top_liege = { NOT = { reverse_opinion = { who = ROOT value = -25 } } }
			}
			modifier = {
				factor = 1.5
				top_liege = { NOT = { reverse_opinion = { who = ROOT value = -50 } } }
			}
			modifier = {
				factor = 2
				top_liege = { NOT = { reverse_opinion = { who = ROOT value = -75 } } }
			}
			modifier = {
				factor = 0.5
				top_liege = { reverse_opinion = { who = ROOT value = 25 } }
			}
			modifier = {
				factor = 0.5
				FROM = { NOT = { diplomacy = 6 } }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 10 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 12 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 14 }
			}
			modifier = {
				factor = 1.2
				FROM = { diplomacy = 16 }
			}
		}
		emf_adventurer_donate_to_adventurer_effect = yes
		reverse_opinion = { who = FROM modifier = backed_adventurer years = 20 }
		hidden_tooltip = {
			if = {
				limit = { wealth = 50 }
				random = {
					chance = 50
					modifier = {
						factor = 0.5
						top_liege = { NOT = { realm_intrigue = 20 } }
					}
					modifier = {
						factor = 1.5
						top_liege = { realm_intrigue = 40 }
					}
					top_liege = { character_event = { id = emf_adventurer.32 } }
				}
			}
		}
	}
	option = {
		name = EVTOPTB_TOG_1231 # Refuse
		ai_chance = {
			factor = 65
		}
		reverse_opinion = { who = FROM modifier = refused_adventurer years = 20 }
	}
}

# Targeted ruler hears that someone prominent in their realm is supporting the adventurer
character_event = {
	id = emf_adventurer.32
	desc = EVTDESC_TOG_1232
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_1232
		opinion = { who = FROM modifier = supported_adventurer_against_me multiplier = 2 years = 10 }
	}
}

# Notify targeted ruler that adventurer is halfway to raising an army
character_event = {
	id = emf_adventurer.40
	desc = EVTDESC_TOG_1240
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	trigger = { ai = no }
	
	option = {
		name = EVTOPTA_TOG_1240
	}
}

# Notify ruler that adventurer has abandoned their quest after too long
character_event = {
	id = emf_adventurer.41
	desc = EVTDESC_TOG_1241
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	trigger = { ai = no }
	
	option = {
		name = EVTOPTA_TOG_1241
	}
}

# Notify ruler that adventurer has abandoned their quest because they are incapable
character_event = {
	id = emf_adventurer.42
	desc = EVTDESC_TOG_1242
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	trigger = { ai = no }
	
	option = {
		name = EVTOPTA_TOG_1242
	}
}

# Notify ruler that adventurer has abandoned their quest because they are now a ruler themselves
character_event = {
	id = emf_adventurer.43
	desc = EVTDESC_TOG_1243
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	trigger = { ai = no }
	
	option = {
		name = EVTOPTA_TOG_1243
	}
}

# When adventurer is idle, send him off to a new realm (if possible}
character_event = {
	id = emf_adventurer.44
	
	hide_window = yes
	
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		ROOT = { emf_adventurer_is_valid_trigger = yes }
		NOR = {
			has_character_modifier = do_not_disturb
			wealth = 1000
		}
	}
	
	mean_time_to_happen = {
		days = 30
		modifier = {
			factor = 2
			wealth = 400
		}
		modifier = {
			factor = 2
			wealth = 600
		}
		modifier = {
			factor = 2
			wealth = 800
		}
	}
	
	immediate = {
		character_event = { id = emf_adventurer.10 } # Adventurer moves on
	}
}

# Adventurer dies while holding the title
character_event = {
	id = emf_adventurer.45
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		any_demesne_title = { adventurer = yes }
		OR = {
			has_character_flag = claimant_adventurer
			has_character_modifier = planning_claimant_adventure
		}
	}
	
	immediate = {
		log = "INFO: adventurer [Root.GetBestName] (ID: [Root.GetID]) has died before adventure completed -- removing title"
		
		#deal with adventurer's wealth
		if = {
			limit = {
				current_heir = {
					OR = {
						is_child_of = ROOT
						is_married = ROOT
						dynasty = ROOT
					}
				}
			}
			current_heir = {
				ROOT = {
					transfer_scaled_wealth = {
						to = PREV
						value = all
					}
				}
			}
		}
		if = {
			limit = {
				current_heir = {
					NOR = {
						is_child_of = ROOT
						is_married = ROOT
						dynasty = ROOT
					}
				}
			}
			clear_wealth = yes
		}
		
		emf_adventurer_find_adventurer_target_effect = yes
		event_target:adventurer_target = { character_event = { id = emf_adventurer.46 } } # notify target
		
		emf_adventurer_find_friendly_court_effect = yes
		
		# remove all adventurer statuses
		log = "---> [Root.GetHerHis] followers will retire to the court of [new_court_home.GetTitledName] ([new_court_home.PrimaryTitle.GetID] / ID: [new_court_home.GetID])"
		clr_character_flag = claimant_adventurer
		emf_adventurer_abandon_adventure_effect = yes
	}
}

# Notify ruler of adventurer's death
character_event = {
	id = emf_adventurer.46
	desc = EVTDESC_TOG_1248
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	trigger = { ai = no }
	
	option = {
		name = EVTOPTA_TOG_1248
	}	
}

# Ping event post-DoW to ensure that the war was declared properly
character_event = {
	id = emf_adventurer.47
	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { war = yes }
			add_trait = adventurer
			remove_character_modifier = planning_claimant_adventure
			clr_character_flag = planning_claimant_adventure
			clr_character_flag = warned_adventurer_target
			clr_character_flag = not_interested_in_movements
			break = yes
		}
		
		log = "ERROR: [Root.GetBestName] (ID: [Root.GetID]) had an invalid adventure war -- removing adventurer status"
		emf_adventurer_find_friendly_court_effect = yes
		log = "---> adventurer will retire to the court of [new_court_home.GetTitledName] ([new_court_home.PrimaryTitle.GetID] / ID: [new_court_home.GetID])"
		emf_adventurer_abandon_adventure_effect = yes
	}
}

# Armies disbanded after five years (or lack of claimant_adventurer flag), if at peace
character_event = {
	id = emf_adventurer.48
	desc = EVTDESC_TOG_1253
	picture = GFX_evt_crusaders
	
	only_rulers = yes
	
	trigger = {
		has_earmarked_regiments = claimant_adventure
		war = no
		OR = {
			had_character_flag = { flag = claimant_adventurer days = 1825 }
			NOT = { has_character_flag = claimant_adventurer }
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	option = {
		name = EVTOPTA_TOG_1253
		clr_character_flag = claimant_adventurer
		disband_event_forces = claimant_adventure
	}
}

# Adventurer begins their war against the targeted ruler
character_event = {
	id = emf_adventurer.49
	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		emf_adventurer_find_adventurer_target_effect = yes
		
		# find a friendly court near the target, if possible
		random_playable_ruler = {
			limit = {
				demesne_size = 1
				OR = {
					reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
					reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
				}
				capital_scope = {
					event_target:adventurer_target = {
						capital_scope = {
							NOT = { distance = { where = PREVPREV value = 100 } }
						}
					}
				}
			}
			ROOT = { set_character_flag = found_attack_court }
			capital_scope = { save_event_target_as = attack_court }
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			random_playable_ruler = {
				limit = {
					demesne_size = 1
					OR = {
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 150 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_attack_court }
				capital_scope = { save_event_target_as = attack_court }
			}
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			random_playable_ruler = {
				limit = {
					demesne_size = 1
					OR = {
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 200 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_attack_court }
				capital_scope = { save_event_target_as = attack_court }
			}
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			random_playable_ruler = {
				limit = {
					demesne_size = 1
					OR = {
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 250 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_attack_court }
				capital_scope = { save_event_target_as = attack_court }
			}
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			random_playable_ruler = {
				limit = {
					demesne_size = 1
					OR = {
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 300 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_attack_court }
				capital_scope = { save_event_target_as = attack_court }
			}
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			random_playable_ruler = {
				limit = {
					demesne_size = 1
					OR = {
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 350 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_attack_court }
				capital_scope = { save_event_target_as = attack_court }
			}
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			random_playable_ruler = {
				limit = {
					demesne_size = 1
					OR = {
						reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
						reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
					}
					capital_scope = {
						event_target:adventurer_target = {
							capital_scope = {
								NOT = { distance = { where = PREVPREV value = 400 } }
							}
						}
					}
				}
				ROOT = { set_character_flag = found_attack_court }
				capital_scope = { save_event_target_as = attack_court }
			}
		}
		if = {
			limit = { NOT = { has_character_flag = found_attack_court } }
			location = { save_event_target_as = attack_court }
		}
		clr_character_flag = found_attack_court
		
		# spawn armies
		event_target:attack_court = {
			ROOT = {
				remove_character_modifier = do_not_disturb
				set_character_flag = claimant_adventurer
				# base troops
				random_list = {
					30 = {
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							leader = THIS
							match_character = event_target:adventurer_target
							match_mult = 0.6
							match_min = 1000
							match_max = 15000
							attrition = 0.25
							earmark = claimant_adventure
							cannot_inherit = yes
							reinforces = yes
						}
					}
					40 = {
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							leader = THIS
							match_character = event_target:adventurer_target
							match_mult = 0.525
							match_min = 1000
							match_max = 15000
							attrition = 0.25
							earmark = claimant_adventure
							cannot_inherit = yes
							reinforces = yes
						}
					}
					30 = {
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							leader = THIS
							match_character = event_target:adventurer_target
							match_mult = 0.45
							match_min = 1000
							match_max = 15000
							attrition = 0.25
							earmark = claimant_adventure
							cannot_inherit = yes
							reinforces = yes
						}
					}
				}
				# troops bought with wealth
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				emf_adventurer_buy_troops_effect = yes
				# diplomacy/leadership troops
				if = {
					limit = { diplomacy = 12 }
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						match_character = event_target:adventurer_target
						match_mult = 0.05
						match_min = 100
						match_max = 2000
						attrition = 0.25
						earmark = claimant_adventure
						merge = yes
						cannot_inherit = yes
						reinforces = yes
					}
				}
				if = {
					limit = { diplomacy = 14 }
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						match_character = event_target:adventurer_target
						match_mult = 0.05
						match_min = 100
						match_max = 2000
						attrition = 0.25
						earmark = claimant_adventure
						merge = yes
						cannot_inherit = yes
						reinforces = yes
					}
				}
				if = {
					limit = { diplomacy = 16 }
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						match_character = event_target:adventurer_target
						match_mult = 0.075
						match_min = 100
						match_max = 2000
						attrition = 0.25
						earmark = claimant_adventure
						merge = yes
						cannot_inherit = yes
						reinforces = yes
					}
				}
				if = {
					limit = { diplomacy = 18 }
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						match_character = event_target:adventurer_target
						match_mult = 0.075
						match_min = 100
						match_max = 2000
						attrition = 0.25
						earmark = claimant_adventure
						merge = yes
						cannot_inherit = yes
						reinforces = yes
					}
				}
				if = {
					limit = { diplomacy = 20 }
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						match_character = event_target:adventurer_target
						match_mult = 0.075
						match_min = 100
						match_max = 2000
						attrition = 0.25
						earmark = claimant_adventure
						merge = yes
						cannot_inherit = yes
						reinforces = yes
					}
				}
				if = {
					limit = { 
						diplomacy = 10
						martial = 10
						OR = {
							is_smart_trigger = yes
							trait = brilliant_strategist
						}
					}
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						match_character = event_target:adventurer_target
						match_mult = 0.125
						match_min = 300
						match_max = 5000
						attrition = 0.25
						earmark = claimant_adventure
						merge = yes
						cannot_inherit = yes
						reinforces = yes
					}
				}
			}
		}
		
		# create a fleet, just to be sure
		spawn_fleet = {
			province = closest # closest sea zone
			owner = ROOT
			disband_on_peace = yes
			merge = yes
			troops = {
				galleys = { 100 100 }
			}
			earmark = claimant_adventure
		}

		# begin war, choosing a claim to use in descending order of tier
		random_claim = {
			limit = {
				tier = EMPEROR
				holder_scope = {
					character = event_target:adventurer_target
					NAND = {
						government = nomadic_government
						primary_title = { title = PREVPREV }
					}
				}
			}
			log = "INFO: [Root.GetBestName] (ID: [Root.GetID]) starts claimaint adventure war for [This.GetID] ([This.GetFullName])"
			holder_scope = {
				reverse_war = {
					target = ROOT
					casus_belli = claim
					thirdparty_title = PREV
					infamy = 0
				}
				emf_adventurer_started_war_effect = yes
			}
			break = yes
		}
		random_claim = {
			limit = {
				tier = KING
				holder_scope = {
					character = event_target:adventurer_target
					NAND = {
						government = nomadic_government
						clan_title = { title = PREVPREV }
					}
				}
			}
			log = "INFO: [Root.GetBestName] (ID: [Root.GetID]) starts claimaint adventure war for [This.GetID] ([This.GetFullName])"
			holder_scope = {
				reverse_war = {
					target = ROOT
					casus_belli = claim
					thirdparty_title = PREV
					infamy = 0
				}
				emf_adventurer_started_war_effect = yes
			}
			break = yes
		}
		random_claim = {
			limit = {
				tier = DUKE
				holder_scope = { character = event_target:adventurer_target }
			}
			log = "INFO: [Root.GetBestName] (ID: [Root.GetID]) starts claimaint adventure war for [This.GetID] ([This.GetFullName])"
			holder_scope = {
				reverse_war = {
					target = ROOT
					casus_belli = claim
					thirdparty_title = PREV
					infamy = 0
				}
				emf_adventurer_started_war_effect = yes
			}
			break = yes
		}
		
		log = "WARNING: [Root.GetBestName] (ID: [Root.GetID]) did not, after all, have an approprite claim to use for [Root.GetHerHis] claimant adventurer war -- removing adventurer status"
		
		emf_adventurer_find_friendly_court_effect = yes
		
		# remove all adventurer statuses
		log = "---> adventurer will retire to the court of [new_court_home.GetTitledName] ([new_court_home.PrimaryTitle.GetID] / ID: [new_court_home.GetID])"
		clr_character_flag = claimant_adventurer
		emf_adventurer_abandon_adventure_effect = yes
	}
}

### DUCHY ADVENTURES
#
# Disabled for now, as I don't have time to create all of these regions used by CK2Plus for both SWMH and vanilla maps, and
# even substituting the vanilla duchy adventurer / other adventurer code back in here may (or may not) be super-easy, as for
# whatever reason the claimant-adventurer-rewritten stuff is in the TOG DLC namespace, and I'd need to be careful about splicing
# the two-- just to keep the relatively dysfunctional vanilla duchy adventurers. Some other day, perhaps.
