namespace = emf_mongol

#######################################
# NEW MONGOL EVENTS
#######################################

### MAINTENANCE EVENTS

# Apply flags at game start
character_event = {
	id = emf_mongol.100
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		year = 1181
		NOT = { year = 1242 }
	}
	
	immediate = {
		any_character = {
			limit = {
				dynasty = 11100 # Genghis Khan's dynasty
				is_female = no
			}
			if = {
				limit = {
					OR = {
						character = 125502
						father_even_if_dead = { character = 125502 }
						father_even_if_dead = { father_even_if_dead = { character = 125502 } }
					}
				}
				set_character_flag = line_of_jochi
			}
			if = {
				limit = {
					OR = {
						character = 93062
						father_even_if_dead = { character = 93062 }
						father_even_if_dead = { father_even_if_dead = { character = 93062 } }
					}
				}
				set_character_flag = line_of_chagatai
			}
			if = {
				limit = {
					OR = {
						character = 172005
						father_even_if_dead = { character = 172005 }
						father_even_if_dead = { father_even_if_dead = { character = 172005 } }
					}
				}
				set_character_flag = line_of_ogodei
			}
			if = {
				limit = {
					OR = {
						character = 125520
						father_even_if_dead = { character = 125520 }
						father_even_if_dead = { father_even_if_dead = { character = 125520 } }
					}
				}
				set_character_flag = line_of_tolui
			}
		}
	}
}

# Maintaining the lines of Genghis's sons
character_event = {
	id = emf_mongol.101
	
	hide_window = yes
	is_triggered_only = yes
	
	culture = mongol
	
	trigger = {
		dynasty = 11100
		num_of_children = 1
		OR = {
			has_character_flag = line_of_jochi
			has_character_flag = line_of_chagatai
			has_character_flag = line_of_ogodei
			has_character_flag = line_of_tolui
		}
	}
	
	immediate = {
		any_child = {
			limit = {
				is_female = no
				NOR = {
					trait = bastard
					has_character_flag = line_of_jochi
					has_character_flag = line_of_chagatai
					has_character_flag = line_of_ogodei
					has_character_flag = line_of_tolui
				}
			}
			if = {
				limit = { ROOT = { has_character_flag = line_of_jochi } }
				set_character_flag = line_of_jochi
			}
			if = {
				limit = { ROOT = { has_character_flag = line_of_chagatai } }
				set_character_flag = line_of_chagatai
			}
			if = {
				limit = { ROOT = { has_character_flag = line_of_ogodei } }
				set_character_flag = line_of_ogodei
			}
			if = {
				limit = { ROOT = { has_character_flag = line_of_tolui } }
				set_character_flag = line_of_tolui
			}
		}
	}
}

# Establish new dynasty
character_event = {
	id = emf_mongol.102
	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		any_child_even_if_dead = {
			limit = { dynasty = ROOT }
			character_event = { id = emf.mongol.102 }
		}
		dynasty = event_target:new_dynasty_head
	}
}

### MONGOL EMPIRE SPLITS UP

# Khan dies with a large enough empire to split up among sons/brothers
narrative_event = {
	id = emf_mongol.200
	title = EVTNAME_emf_mongol_200
	desc = EVTDESC_emf_mongol_200
	picture = GFX_evt_mongols
	
	is_triggered_only = yes
	major = yes
	
	ai = yes
	culture = mongol
	only_playable = yes
	only_independent = yes
	
	trigger = {
		has_landed_title = e_mongol_empire
		num_of_count_titles_in_realm = 75
		
		# Has at least twenty provinces for Golden Horde
		any_realm_province = {
			count = 20
			emf_golden_holde_province = yes
		}
		
		# Has at least twenty provinces for Il-Khanate
		any_realm_province = {
			count = 20
			emf_il_khanate_province = yes
		}
		
		# Has at least three valid heirs
		any_dynasty_member = {
			count = 3
			emf_valid_mongol_heir_for_ROOT = yes
		}
	}

	immediate = {
		# First attempt to give titles to historical people
		# Starting with Jochi & descendants
		if = {
			limit = { has_character_flag = is_temujin }
			random_dynasty_member = {
				limit = {
					has_character_flag = line_of_jochi
					emf_valid_mongol_heir_for_ROOT = yes
					NOT = {
						any_dynasty_member = {
							has_character_flag = line_of_jochi
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					has_character_flag = line_of_tolui
					emf_valid_mongol_heir_for_ROOT = yes
					NOT = {
						any_dynasty_member = {
							has_character_flag = line_of_tolui
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					has_character_flag = line_of_chagatai
					emf_valid_mongol_heir_for_ROOT = yes
					NOT = {
						any_dynasty_member = {
							has_character_flag = line_of_chagatai
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:first_mongol_heir = { is_alive = yes } } }
			current_heir = {
				if = {
					limit = {
						NOR = {
							trait = craven
							trait = content
							trait = humble
							is_infertile_trigger = yes
							is_dumb_trigger = yes
							is_weak_trigger = yes
							has_severe_disability_trigger = yes
						}
						NOR = {
							character = event_target:second_mongol_heir
							character = event_target:third_mongol_heir
						}
					}
					save_event_target_as = first_mongol_heir
				}
			}
		}
		if = {
			limit = { NOT = { event_target:first_mongol_heir = { is_alive = yes } } }
			random_dynasty_member = {
				limit = {
					NOT = { event_target:first_mongol_heir = { is_alive = yes } }
					ROOT = { NOT = { has_character_flag = line_of_jochi } }
					has_character_flag = line_of_jochi
					emf_valid_mongol_heir_for_ROOT = yes
					NOT = {
						any_dynasty_member = {
							has_character_flag = line_of_jochi
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:second_mongol_heir = { is_alive = yes } } }
			random_dynasty_member = {
				limit = {
					ROOT = { NOT = { has_character_flag = line_of_tolui } }
					has_character_flag = line_of_tolui
					emf_valid_mongol_heir_for_ROOT = yes
					NOT = {
						any_dynasty_member = {
							has_character_flag = line_of_tolui
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:third_mongol_heir = { is_alive = yes } } }
			random_dynasty_member = {
				limit = {
					ROOT = { NOT = { has_character_flag = line_of_chagatai } }
					has_character_flag = line_of_chagatai
					emf_valid_mongol_heir_for_ROOT = yes
					NOT = {
						any_dynasty_member = {
							has_character_flag = line_of_chagatai
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
		}
		
		# Otherwise assign areas
		if = {
			limit = { NOT = { event_target:first_mongol_heir = { is_alive = yes } } }
			# Give Golden Horde to someone who's already a king in that region
			random_dynasty_member = {
				limit = {
					tier = KING
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_golden_holde_province = yes }
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:second_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = KING
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_golden_holde_province = yes }
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:second_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:first_mongol_heir = { is_alive = yes } }
					tier = KING
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_golden_holde_province = yes }
					NOR = {
						character = event_target:second_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = KING
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_golden_holde_province = yes }
							NOR = {
								character = event_target:second_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:first_mongol_heir = { is_alive = yes } } }
			# Give Golden Horde to someone who's already a duke in that region
			random_dynasty_member = {
				limit = {
					tier = DUKE
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_golden_holde_province = yes }
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:second_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = DUKE
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_golden_holde_province = yes }
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:second_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:first_mongol_heir = { is_alive = yes } }
					tier = DUKE
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_golden_holde_province = yes }
					NOR = {
						character = event_target:second_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = DUKE
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_golden_holde_province = yes }
							NOR = {
								character = event_target:second_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:first_mongol_heir = { is_alive = yes } } }
			# Otherwise give Golden Horde to eldest available heir
			random_dynasty_member = {
				limit = {
					NOT = { event_target:first_mongol_heir = { is_alive = yes } }
					emf_valid_mongol_heir_for_ROOT = yes
					NOR = {
						character = event_target:second_mongol_heir
						character = event_target:third_mongol_heir
						emf_child_or_heir_grandchild_of_ROOT = yes
						any_dynasty_member = {
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:second_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:first_mongol_heir = { is_alive = yes } }
					emf_valid_mongol_heir_for_ROOT = yes
					NOR = {
						character = event_target:second_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							NOR = {
								character = event_target:second_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = first_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:second_mongol_heir = { is_alive = yes } } }
			# Give Il-Khanate to someone who's already a king in that region
			random_dynasty_member = {
				limit = {
					tier = KING
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_il_khanate_province = yes }
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = KING
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_il_khanate_province = yes }
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:second_mongol_heir = { is_alive = yes } }
					tier = KING
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_il_khanate_province = yes }
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = KING
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_il_khanate_province = yes }
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:second_mongol_heir = { is_alive = yes } } }
			# Give Il-Khanate to someone who's already a duke in that region
			random_dynasty_member = {
				limit = {
					tier = DUKE
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_il_khanate_province = yes }
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = DUKE
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_il_khanate_province = yes }
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:second_mongol_heir = { is_alive = yes } }
					tier = DUKE
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { emf_il_khanate_province = yes }
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							tier = DUKE
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { emf_il_khanate_province = yes }
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:second_mongol_heir = { is_alive = yes } } }
			# Otherwise give Il-Khanate to heir or eldest available heir
			current_heir = {
				if = {
					limit = {
						NOR = {
							character = event_target:first_mongol_heir
							character = event_target:third_mongol_heir
						}
					}
					save_event_target_as = second_mongol_heir
				}
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:second_mongol_heir = { is_alive = yes } }
					emf_valid_mongol_heir_for_ROOT = yes
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:second_mongol_heir = { is_alive = yes } }
					emf_valid_mongol_heir_for_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:third_mongol_heir
						any_dynasty_member = {
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:third_mongol_heir
							}
						}
					}
				}
				save_event_target_as = second_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:third_mongol_heir = { is_alive = yes } } }
			# Give Chagatai to someone who's already a king in that region
			random_dynasty_member = {
				limit = {
					tier = KING
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { region = emf_region_mongol_east }
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:second_mongol_heir
						any_dynasty_member = {
							tier = KING
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { region = emf_region_mongol_east }
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:second_mongol_heir
							}
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:third_mongol_heir = { is_alive = yes } }
					tier = KING
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { region = emf_region_mongol_east }
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:second_mongol_heir
						any_dynasty_member = {
							tier = KING
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { region = emf_region_mongol_east }
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:second_mongol_heir
							}
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:third_mongol_heir = { is_alive = yes } } }
			# Give Chagatai to someone who's already a duke in that region
			random_dynasty_member = {
				limit = {
					tier = DUKE
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { region = emf_region_mongol_east }
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:second_mongol_heir
						any_dynasty_member = {
							tier = DUKE
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { region = emf_region_mongol_east }
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:second_mongol_heir
							}
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:third_mongol_heir = { is_alive = yes } }
					tier = DUKE
					emf_valid_mongol_heir_for_ROOT = yes
					capital_scope = { region = emf_region_mongol_east }
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:second_mongol_heir
						any_dynasty_member = {
							tier = DUKE
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							capital_scope = { region = emf_region_mongol_east }
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:second_mongol_heir
							}
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
		}
		if = {
			limit = { NOT = { event_target:third_mongol_heir = { is_alive = yes } } }
			# Otherwise give Chagatai to heir or eldest available heir
			current_heir = {
				if = {
					limit = {
						NOR = {
							character = event_target:first_mongol_heir
							character = event_target:second_mongol_heir
						}
					}
					save_event_target_as = third_mongol_heir
				}
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:third_mongol_heir = { is_alive = yes } }
					emf_valid_mongol_heir_for_ROOT = yes
					emf_child_or_heir_grandchild_of_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:second_mongol_heir
						any_dynasty_member = {
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							emf_child_or_heir_grandchild_of_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:second_mongol_heir
							}
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
			random_dynasty_member = {
				limit = {
					NOT = { event_target:third_mongol_heir = { is_alive = yes } }
					emf_valid_mongol_heir_for_ROOT = yes
					NOR = {
						character = event_target:first_mongol_heir
						character = event_target:second_mongol_heir
						any_dynasty_member = {
							is_older_than = PREV
							emf_valid_mongol_heir_for_ROOT = yes
							NOR = {
								character = event_target:first_mongol_heir
								character = event_target:second_mongol_heir
							}
						}
					}
				}
				save_event_target_as = third_mongol_heir
			}
		}
		
		# Stop any wars and disband the initial mongol forces
		any_war = {
			limit = {
				OR = {
					attacker = { character = ROOT }
					defender = { character = ROOT }
				}
			}
			end_war = invalid
		}
		disband_event_forces = horde_invasion
		
		# Fire the follow-up event
		current_heir = { character_event = { id = emf_mongol.201 days = 1 } }
	}
	
	option = {
		name = EVTOPTA_emf_mongol_200
		trigger = { character = ROOT }
	}
	option = {
		name = EVTOPTB_emf_mongol_200
		trigger = {
			NOT = { character = ROOT }
			OR = {
				culture = mongol
				same_realm = ROOT
			}
		}
	}
	option = {
		name = EVTOPTC_emf_mongol_200
		trigger = {
			NOR = {
				character = ROOT
				culture = mongol
				same_realm = ROOT
			}
		}
	}
}

# Bounce event to assign territories
character_event = {
	id = emf_mongol.201
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		e_golden_horde = { capital_scope = { county = { save_event_target_as = golden_horde_capital } } }
		e_il-khanate = { capital_scope = { county = { save_event_target_as = il_khanate_capital } } }
		e_chagatai = { capital_scope = { county = { save_event_target_as = chagatai_capital } } }
		
		# Heirs get new dynasties
		event_target:first_mongol_heir = { emf_create_mongol_dynasty = yes }
		event_target:second_mongol_heir = { emf_create_mongol_dynasty = yes }
		event_target:third_mongol_heir = { emf_create_mongol_dynasty = yes }
		
		# Ensure first heir gets a county in Golden Horde
		if = {
			limit = {
				event_target:first_mongol_heir = {
					NOT = { any_demesne_title = { location = { emf_golden_holde_province = yes } } }
				}
			}
			event_target:golden_horde_capital = {
				if = {
					limit = { owner_under_ROOT = yes }
					grant_title = event_target:first_mongol_heir
				}
			}
		}
		if = {
			limit = {
				event_target:first_mongol_heir = {
					NOT = { any_demesne_title = { location = { emf_golden_holde_province = yes } } }
				}
			}
			random_realm_title = {
				limit = {
					tier = COUNT
					location = { emf_golden_holde_province = yes }
					holder_scope = { character = ROOT }
				}
				grant_title = event_target:first_mongol_heir
			}
		}
		if = {
			limit = {
				event_target:first_mongol_heir = {
					NOT = { any_demesne_title = { location = { emf_golden_holde_province = yes } } }
				}
			}
			random_realm_title = {
				limit = {
					tier = COUNT
					location = { emf_golden_holde_province = yes }
					owner_under_ROOT = yes
				}
				grant_title = event_target:first_mongol_heir
			}
		}
	
		# Ensure second heir gets a county in Il-Khanate
		if = {
			limit = {
				event_target:second_mongol_heir = {
					NOT = { any_demesne_title = { location = { emf_il_khanate_province = yes } } }
				}
			}
			random_realm_title = {
				limit = {
					title = event_target:il_khanate_capital
					owner_under_ROOT = yes
				}
				grant_title = event_target:second_mongol_heir
			}
		}
		if = {
			limit = {
				event_target:second_mongol_heir = {
					NOT = { any_demesne_title = { location = { emf_il_khanate_province = yes } } }
				}
			}
			random_realm_title = {
				limit = {
					tier = COUNT
					location = { emf_il_khanate_province = yes }
					holder_scope = { character = ROOT }
				}
				grant_title = event_target:second_mongol_heir
			}
		}
		if = {
			limit = {
				event_target:second_mongol_heir = {
					NOT = { any_demesne_title = { location = { emf_il_khanate_province = yes } } }
				}
			}
			random_realm_title = {
				limit = {
					tier = COUNT
					location = { emf_il_khanate_province = yes }
					owner_under_ROOT = yes
				}
				grant_title = event_target:second_mongol_heir
			}
		}
		
		# Ensure third heir gets a county in Chagatai
		if = {
			limit = {
				event_target:third_mongol_heir = {
					NOT = { any_demesne_title = { location = { region = emf_region_mongol_east } } }
				}
			}
			random_realm_title = {
				limit = {
					title = event_target:chagatai_capital
					owner_under_ROOT = yes
				}
				grant_title = event_target:third_mongol_heir
			}
		}
		if = {
			limit = {
				event_target:third_mongol_heir = {
					NOT = { any_demesne_title = { location = { region = emf_region_mongol_east } } }
				}
			}
			random_realm_title = {
				limit = {
					tier = COUNT
					location = { region = emf_region_mongol_east }
					holder_scope = { character = ROOT }
				}
				grant_title = event_target:third_mongol_heir
			}
		}
		if = {
			limit = {
				event_target:third_mongol_heir = {
					NOT = { any_demesne_title = { location = { region = emf_region_mongol_east } } }
				}
			}
			random_realm_title = {
				limit = {
					tier = COUNT
					location = { region = emf_region_mongol_east }
					owner_under_ROOT = yes
				}
				grant_title = event_target:third_mongol_heir
			}
		}
	
		# Heirs that have lands in another's territory should give them up
		event_target:first_mongol_heir = {
			emf_grant_il_khanate_titles = yes
			emf_grant_chagatai_titles = yes
		}
		event_target:second_mongol_heir = {
			emf_grant_golden_horde_titles = yes
			emf_grant_chagatai_titles = yes
		}
		event_target:third_mongol_heir = {
			emf_grant_golden_horde_titles = yes
			emf_grant_il_khanate_titles = yes
		}
	
		# Create the new horde titles
		activate_title = { title = e_golden_horde status = yes }
		e_golden_horde = {
			copy_title_laws = e_mongol_empire
			grant_title = event_target:first_mongol_heir
			make_primary_title = yes
		}
		event_target:first_mongol_heir = {
			if = {
				limit = { has_dlc = "Horse Lords" }
				set_government_type = nomadic_government
				steal_population_scaled = { target = ROOT percentage = 0.50 }
			}
			if = {
				limit = { NOT = { has_dlc = "Horse Lords" } }
				set_government_type = tribal_government
			}
		}

		activate_title = { title = e_il-khanate status = yes }
		e_il-khanate = {
			copy_title_laws = e_mongol_empire
			grant_title = event_target:second_mongol_heir
			make_primary_title = yes
		}
		event_target:second_mongol_heir = {
			if = {
				limit = { has_dlc = "Horse Lords" }
				set_government_type = nomadic_government
				steal_population_scaled = { target = ROOT percentage = 0.80 }
			}
			if = {
				limit = { NOT = { has_dlc = "Horse Lords" } }
				set_government_type = tribal_government
			}
		}

		activate_title = { title = e_chagatai status = yes }
		e_chagatai = {
			copy_title_laws = e_mongol_empire
			grant_title = event_target:third_mongol_heir
			make_primary_title = yes
		}
		event_target:third_mongol_heir = {
			if = {
				limit = { has_dlc = "Horse Lords" }
				set_government_type = nomadic_government
				steal_population_scaled = { target = ROOT percentage = 1.00 }
			}
			if = {
				limit = { NOT = { has_dlc = "Horse Lords" } }
				set_government_type = tribal_government
			}
			if = {
				limit = { NOT = { dynasty = 7380 } }
				e_chagatai = {
					set_name= MOGHUL
					adjective= MOGHUL_ADJ
				}
			}
		}
	
		# Divvy up the vassals
		any_vassal = {
			limit = { higher_tier_than = BARON }
			character_event = { id = emf_mongol.202 }
		}
		
		# Any generals and close relatives will be asked to serve a son
		any_courtier = {
			limit = {
				culture = FROM
				OR = {
					is_close_relative = FROM
					martial = 12
				}
				NOT = { character = event_target:first_mongol_heir }
				NOT = { character = event_target:second_mongol_heir }
				NOT = { character = event_target:third_mongol_heir }
			}
			character_event = { id = emf_mongol.203 }
		}

		# If the main heir is not one of the three mongol heirs, give up non-empire tier titles now
		if = {
			limit = {
				NOT = { character = event_target:first_mongol_heir }
				NOT = { character = event_target:second_mongol_heir }
				NOT = { character = event_target:third_mongol_heir }
			}
			emf_grant_golden_horde_titles = yes
			emf_grant_il_khanate_titles = yes
			emf_grant_chagatai_titles = yes
		}
		
		# Send events to heirs
		event_target:first_mongol_heir = { character_event = { id = emf_mongol.204 } }
		event_target:second_mongol_heir = { character_event = { id = emf_mongol.204 } }
		event_target:third_mongol_heir = { character_event = { id = emf_mongol.204 } }

		e_mongol_empire = {
			unsafe_destroy_landed_title = THIS
			activate_title = { title = THIS status = no }
		}
		
		if = {
			limit = {
				NOT = { character = event_target:first_mongol_heir }
				NOT = { character = event_target:second_mongol_heir }
				NOT = { character = event_target:third_mongol_heir }
			}
			character_event = { id = emf_mongol.203 }
		}
	}
}

# Mongol vassals receive notification of liege change
character_event = {
	id = emf_mongol.202
	picture = GFX_evt_mongols
	
	desc = {
		text = EVTDESC_emf_mongol_202_GHD
		trigger = { capital_scope = { emf_golden_holde_province = yes } }
	}
	desc = {
		text = EVTDESC_emf_mongol_202_IKH
		trigger = { capital_scope = { emf_il_khanate_province = yes } }
	}
	desc = {
		text = EVTDESC_emf_mongol_202_CHA
		trigger = { capital_scope = { region = emf_region_mongol_east } }
	}
	
	is_triggered_only = yes
	hide_from = yes
	
	option = {
		name = EVTOPTA_emf_mongol_202_GHD
		trigger = { capital_scope = { emf_golden_holde_province = yes } }
		if = {
			limit = {
				FROM = {
					NOT = { is_liege_of = ROOT }
					OR = {
						character = event_target:first_mongol_heir
						any_liege = { character = event_target:first_mongol_heir }
					}
				}
			}
			set_defacto_liege = FROM
		}
		if = {
			limit = {
				FROM = {
					NOR = {
						character = event_target:first_mongol_heir
						any_liege = { character = event_target:first_mongol_heir }
					}
				}
			}
			set_defacto_liege = event_target:first_mongol_heir
		}
		if = {
			limit = { ai = yes }
			opinion = { who = event_target:first_mongol_heir modifier = opinion_loyal_vassal years = 10 }
		}
		any_claim = {
			limit = { capital_scope = { emf_il_khanate_province = yes } }
			remove_claim = ROOT
		}
		any_claim = {
			limit = { capital_scope = { region = emf_region_mongol_east } }
			remove_claim = ROOT
		}
		hidden_tooltip = {
			any_courtier = {
				limit = { is_ruler = no }
				any_claim = {
					limit = { capital_scope = { emf_il_khanate_province = yes } }
					remove_claim = PREV
				}
				any_claim = {
					limit = { capital_scope = { region = emf_region_mongol_east } }
					remove_claim = PREV
				}
			}
			any_vassal = {
				limit = { tier = BARON }
				any_claim = {
					limit = { capital_scope = { emf_il_khanate_province = yes } }
					remove_claim = PREV
				}
				any_claim = {
					limit = { capital_scope = { region = emf_region_mongol_east } }
					remove_claim = PREV
				}
			}
		}
	}
	option = {
		name = EVTOPTA_emf_mongol_202_IKH
		trigger = { capital_scope = { emf_il_khanate_province = yes } }
		if = {
			limit = {
				FROM = {
					NOT = { is_liege_of = ROOT }
					OR = {
						character = event_target:second_mongol_heir
						any_liege = { character = event_target:second_mongol_heir }
					}
				}
			}
			set_defacto_liege = FROM
		}
		if = {
			limit = {
				FROM = {
					NOR = {
						character = event_target:second_mongol_heir
						any_liege = { character = event_target:second_mongol_heir }
					}
				}
			}
			set_defacto_liege = event_target:second_mongol_heir
		}
		if = {
			limit = { ai = yes }
			opinion = { who = event_target:second_mongol_heir modifier = opinion_loyal_vassal years = 10 }
		}
		any_claim = {
			limit = { capital_scope = { emf_golden_holde_province = yes } }
			remove_claim = ROOT
		}
		any_claim = {
			limit = { capital_scope = { region = emf_region_mongol_east } }
			remove_claim = ROOT
		}
		hidden_tooltip = {
			any_courtier = {
				limit = { is_ruler = no }
				any_claim = {
					limit = { capital_scope = { emf_golden_holde_province = yes } }
					remove_claim = PREV
				}
				any_claim = {
					limit = { capital_scope = { region = emf_region_mongol_east } }
					remove_claim = PREV
				}
			}
			any_vassal = {
				limit = { tier = BARON }
				any_claim = {
					limit = { capital_scope = { emf_golden_holde_province = yes } }
					remove_claim = PREV
				}
				any_claim = {
					limit = { capital_scope = { region = emf_region_mongol_east } }
					remove_claim = PREV
				}
			}
		}
	}
	option = {
		name = EVTOPTA_emf_mongol_202_CHA
		trigger = { capital_scope = { region = emf_region_mongol_east } }
		if = {
			limit = {
				FROM = {
					NOT = { is_liege_of = ROOT }
					OR = {
						character = event_target:third_mongol_heir
						any_liege = { character = event_target:third_mongol_heir }
					}
				}
			}
			set_defacto_liege = FROM
		}
		if = {
			limit = {
				FROM = {
					NOR = {
						character = event_target:third_mongol_heir
						any_liege = { character = event_target:third_mongol_heir }
					}
				}
			}
			set_defacto_liege = event_target:third_mongol_heir
		}
		if = {
			limit = { ai = yes }
			opinion = { who = event_target:third_mongol_heir modifier = opinion_loyal_vassal years = 10 }
		}
		any_claim = {
			limit = { capital_scope = { emf_golden_holde_province = yes } }
			remove_claim = ROOT
		}
		any_claim = {
			limit = { capital_scope = { emf_il_khanate_province = yes } }
			remove_claim = ROOT
		}
		hidden_tooltip = {
			any_courtier = {
				limit = { is_ruler = no }
				any_claim = {
					limit = { capital_scope = { emf_golden_holde_province = yes } }
					remove_claim = PREV
				}
				any_claim = {
					limit = { capital_scope = { emf_il_khanate_province = yes } }
					remove_claim = PREV
				}
			}
			any_vassal = {
				limit = { tier = BARON }
				any_claim = {
					limit = { capital_scope = { emf_golden_holde_province = yes } }
					remove_claim = PREV
				}
				any_claim = {
					limit = { capital_scope = { emf_il_khanate_province = yes } }
					remove_claim = PREV
				}
			}
		}
	}
	after = {
		any_vassal = {
			limit = { higher_tier_than = BARON }
			character_event = { id = emf_mongol.202 }
		}		
	}
}

# Courtiers are given the option to serve one of the heirs
character_event = {
	id = emf_mongol.203
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_adult = yes
		is_ruler = no
		prisoner = no
		OR = {
			is_female = no
			is_married_matrilineally = yes
		}
	}
	
	immediate = {
		random_list = {
			200 = {
				modifier = {
					factor = 0.1
					opinion_diff = { first = second_mongol_heir second = first_mongol_heir value = 10 as_if_liege = yes }
				}
				modifier = {
					factor = 0.1
					opinion_diff = { first = third_mongol_heir second = first_mongol_heir value = 10 as_if_liege = yes }
				}
				move_character = event_target:first_mongol_heir
				opinion = { who = event_target:first_mongol_heir modifier = opinion_loyal_vassal years = 10 }
			}
			150 = {
				modifier = {
					factor = 0.1
					opinion_diff = { first = first_mongol_heir second = second_mongol_heir value = 10 as_if_liege = yes }
				}
				modifier = {
					factor = 0.1
					opinion_diff = { first = third_mongol_heir second = second_mongol_heir value = 10 as_if_liege = yes }
				}
				move_character = event_target:second_mongol_heir
				opinion = { who = event_target:second_mongol_heir modifier = opinion_loyal_vassal years = 10 }
			}
			100 = {
				modifier = {
					factor = 0.1
					opinion_diff = { first = first_mongol_heir second = third_mongol_heir value = 10 as_if_liege = yes }
				}
				modifier = {
					factor = 0.1
					opinion_diff = { first = second_mongol_heir second = third_mongol_heir value = 10 as_if_liege = yes }
				}
				move_character = event_target:third_mongol_heir
				opinion = { who = event_target:third_mongol_heir modifier = opinion_loyal_vassal years = 10 }
			}
		}
		
	}
}

# New mongol heirs are informed
character_event = {
	id = emf_mongol.204
	desc = EVTDESC_emf_mongol_204
	picture = GFX_evt_tengri_throneroom_oldgods
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_emf_mongol_204
		trigger = { has_landed_title = e_golden_horde }
		custom_tooltip = { text = ESTABLISH_CADET_BRANCH }
		any_claim = {
			limit = { capital_scope = { emf_il_khanate_province = yes } }
			remove_claim = ROOT
		}
		any_claim = {
			limit = { capital_scope = { region = emf_region_mongol_east } }
			remove_claim = ROOT
		}
		emf_create_courtiers_for_ROOT = yes
		capital_scope = { save_event_target_as = emf_target_province }
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
	}
	option = {
		name = EVTOPTA_emf_mongol_204
		trigger = { has_landed_title = e_il-khanate }
		custom_tooltip = { text = ESTABLISH_CADET_BRANCH }
		any_claim = {
			limit = { capital_scope = { emf_golden_holde_province = yes } }
			remove_claim = ROOT
		}
		any_claim = {
			limit = { capital_scope = { region = emf_region_mongol_east } }
			remove_claim = ROOT
		}
		emf_create_courtiers_for_ROOT = yes
		capital_scope = { save_event_target_as = emf_target_province }
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
	}
	option = {
		name = EVTOPTA_emf_mongol_204
		trigger = { has_landed_title = e_chagatai }
		custom_tooltip = { text = ESTABLISH_CADET_BRANCH }
		any_claim = {
			limit = { capital_scope = { emf_il_khanate_province = yes } }
			remove_claim = ROOT
		}
		any_claim = {
			limit = { capital_scope = { emf_golden_holde_province = yes } }
			remove_claim = ROOT
		}
		emf_create_courtiers_for_ROOT = yes
		capital_scope = { save_event_target_as = emf_target_province }
		emf_empires_spawn_mongol_unit_effect = yes
		emf_empires_spawn_mongol_unit_effect = yes
	}
}