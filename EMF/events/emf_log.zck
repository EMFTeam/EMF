
namespace = emf_log

character_event {
	id = emf_log.100
	hide_window = yes
	is_triggered_only = yes

	has_global_flag = emf_log_buildings

	immediate {
		log = "DEBUG: emf_log.100: building started construction in [From.GetID], a [From.EMF_GetHoldingType] settlement in province #[From.Location.GetID]"
	}
}

character_event {
	id = emf_log.101
	hide_window = yes
	is_triggered_only = yes

	religion = hip_religion
	has_global_flag = emf_log_buildings

	trigger { has_landed_title = e_hip }

	immediate {
		any_landed_title { tier == COUNT } do {
			any_de_jure_vassal_title { $local_prov_buildings += num_of_buildings }
			log = "DEBUG: emf_log.101: province building total for [This.GetID]/#[This.Location.GetID]: [local_prov_buildings.GetValue]"
			$local_prov_buildings = 0
		}
	}
}

character_event {
	id = emf_log.110
	hide_window = yes
	is_triggered_only = yes

	has_global_flag = emf_log_siege_completion

	immediate {
		if { FROM { is_occupied = yes } } then {
			log = "DEBUG: emf_log.110: holding occupied: [From.GetID], a [From.EMF_GetHoldingType] settlement in [From.Location.County.GetID]/#[From.Location.GetID]"
		}
		else {
			log = "DEBUG: emf_log.110: holding sacked: [From.GetID], a [From.EMF_GetHoldingType] settlement in [From.Location.County.GetID]/#[From.Location.GetID]"
		}
	}
}

character_event {
	id = emf_log.120
	hide_window = yes
	is_triggered_only = yes

	religion = hip_religion
	has_global_flag = emf_log_ruler_stats

	trigger { has_landed_title = e_hip }

	immediate {
		any_independent_ruler { tier == EMPEROR religion_group = christian } do {
			$local_n_emperor_christian += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_emperor_christian += 1 }
		}
		any_independent_ruler { tier == EMPEROR religion_group = muslim } do {
			$local_n_emperor_muslim += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_emperor_muslim += 1 }
		}
		any_independent_ruler { tier == EMPEROR NOR { religion_group = christian religion_group = muslim } } do {
			$local_n_emperor_other += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_emperor_other += 1 }
		}
		any_playable_ruler { real_tier == KING religion_group = christian } do {
			$local_n_king_christian += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_king_christian += 1 }
		}
		any_playable_ruler { real_tier == KING religion_group = muslim } do {
			$local_n_king_muslim += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_king_muslim += 1 }
		}
		any_playable_ruler { real_tier == KING NOR { religion_group = christian religion_group = muslim } } do {
			$local_n_king_other += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_king_other += 1 }
		}
		any_playable_ruler { real_tier == DUKE religion_group = christian } do {
			$local_n_duke_christian += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_duke_christian += 1 }
		}
		any_playable_ruler { real_tier == DUKE religion_group = muslim } do {
			$local_n_duke_muslim += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_duke_muslim += 1 }
		}
		any_playable_ruler { real_tier == DUKE NOR { religion_group = christian religion_group = muslim } } do {
			$local_n_duke_other += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_duke_other += 1 }
		}
		any_playable_ruler { real_tier == COUNT religion_group = christian } do {
			$local_n_count_christian += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_count_christian += 1 }
		}
		any_playable_ruler { real_tier == COUNT religion_group = muslim } do {
			$local_n_count_muslim += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_count_muslim += 1 }
		}
		any_playable_ruler { real_tier == COUNT NOR { religion_group = christian religion_group = muslim } } do {
			$local_n_count_other += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_count_other += 1 }
		}
		any_playable_ruler { real_tier == BARON religion_group = christian } do {
			$local_n_baron_christian += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_baron_christian += 1 }
		}
		any_playable_ruler { real_tier == BARON religion_group = muslim } do {
			$local_n_baron_muslim += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_baron_muslim += 1 }
		}
		any_playable_ruler { real_tier == BARON NOR { religion_group = christian religion_group = muslim } } do {
			$local_n_baron_other += 1
			if { has_dynasty_flag = emf_is_historical } then { $local_n_hist_baron_other += 1 }
		}

		log = "DEBUG: emf_log.120: [local_n_emperor_christian.GetValue] christian emperors, of which [local_n_hist_emperor_christian.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_emperor_muslim.GetValue] muslim emperors, of which [local_n_hist_emperor_muslim.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_emperor_other.GetValue] other emperors, of which [local_n_hist_emperor_other.GetValue] are members of historical dynasties"

		log = "DEBUG: emf_log.120: [local_n_king_christian.GetValue] christian kings, of which [local_n_hist_king_christian.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_king_muslim.GetValue] muslim kings, of which [local_n_hist_king_muslim.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_king_other.GetValue] other kings, of which [local_n_hist_king_other.GetValue] are members of historical dynasties"

		log = "DEBUG: emf_log.120: [local_n_duke_christian.GetValue] christian dukes, of which [local_n_hist_duke_christian.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_duke_muslim.GetValue] muslim dukes, of which [local_n_hist_duke_muslim.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_duke_other.GetValue] other dukes, of which [local_n_hist_duke_other.GetValue] are members of historical dynasties"

		log = "DEBUG: emf_log.120: [local_n_count_christian.GetValue] christian counts, of which [local_n_hist_count_christian.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_count_muslim.GetValue] muslim counts, of which [local_n_hist_count_muslim.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_count_other.GetValue] other counts, of which [local_n_hist_count_other.GetValue] are members of historical dynasties"

		log = "DEBUG: emf_log.120: [local_n_baron_christian.GetValue] christian barons, of which [local_n_hist_baron_christian.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_baron_muslim.GetValue] muslim barons, of which [local_n_hist_baron_muslim.GetValue] are members of historical dynasties"
		log = "DEBUG: emf_log.120: [local_n_baron_other.GetValue] other barons, of which [local_n_hist_baron_other.GetValue] are members of historical dynasties"
	}
}


character_event {
	id = emf_log.140
	hide_window = yes
	is_triggered_only = yes

	religion = hip_religion
	has_global_flag = emf_log_province_stats

	trigger { has_landed_title = e_hip }

	immediate {
		any_province { has_owner = yes } do {
			$local_n_empty_holdings = num_of_empty_holdings
			$local_n_max_settlements = num_of_max_settlements
			$local_n_settlements = num_of_settlements
			$local_tax = total_tax_value
			any_province_holding { holding_type = castle } do { $local_n_castle += 1 $local_castle_tax += holding_tax_value }
			any_province_holding { holding_type = temple } do { $local_n_temple += 1 $local_temple_tax += holding_tax_value }
			any_province_holding { holding_type = city   } do { $local_n_city   += 1 $local_city_tax   += holding_tax_value }
			any_province_holding { holding_type = tribal } do { $local_n_tribal += 1 $local_tribal_tax += holding_tax_value }
			any_province_holding { holding_type = nomad  } do { $local_n_nomad  += 1 $local_nomad_tax  += holding_tax_value }
			log = "DEBUG: emf_log.140: [This.County.GetID]/#[This.GetID]: num_of_empty_holdings=[local_n_empty_holdings.GetValue], num_of_max_settlements=[local_n_max_settlements.GetValue], num_of_settlements=[local_n_settlements.GetValue], total_tax_value=[local_tax.GetValue], holding type count and current tax value: {castle: [local_n_castle.GetValue]/[local_castle_tax.GetValue], temple: [local_n_temple.GetValue]/[local_temple_tax.GetValue], city: [local_n_city.GetValue]/[local_city_tax.GetValue], tribal: [local_n_tribal.GetValue]/[local_tribal_tax.GetValue], nomad: [local_n_nomad.GetValue]/[local_nomad_tax.GetValue]}"
		}
	}
}
