# -*- ck2 -*-
# Generated from ZCK source code; compiler version: v0.1.1

namespace = emf_log
character_event = {
	id = emf_log.100
	hide_window = yes
	is_triggered_only = yes
	has_global_flag = emf_log_buildings
	immediate = {
		log = "DEBUG: emf_log.100: building started construction in [From.GetID], a [From.EMF_GetHoldingType] settlement in province #[From.Location.GetID]"
	}
}
character_event = {
	id = emf_log.101
	hide_window = yes
	is_triggered_only = yes
	religion = hip_religion
	has_global_flag = emf_log_buildings
	trigger = {
		has_landed_title = e_hip
	}
	immediate = {
		any_landed_title = {
			limit = {
				tier = COUNT
			}
			any_de_jure_vassal_title = {
				export_to_variable = {
					which = local_zck_0
					value = num_of_buildings
				}
				change_variable = {
					which = local_prov_buildings
					which = local_zck_0
				}
			}
			log = "DEBUG: emf_log.101: province building total for [This.GetID]/#[This.Location.GetID]: [local_prov_buildings.GetValue]"
			set_variable = {
				which = local_prov_buildings
				value = 0
			}
		}
	}
}
character_event = {
	id = emf_log.110
	hide_window = yes
	is_triggered_only = yes
	has_global_flag = emf_log_siege_completion
	immediate = {
		if = {
			limit = {
				FROM = {
					is_occupied = yes
				}
			}
			log = "DEBUG: emf_log.110: holding occupied: [From.GetID], a [From.EMF_GetHoldingType] settlement in [From.Location.County.GetID]/#[From.Location.GetID]"
		}
		else = {
			log = "DEBUG: emf_log.110: holding sacked: [From.GetID], a [From.EMF_GetHoldingType] settlement in [From.Location.County.GetID]/#[From.Location.GetID]"
		}
	}
}
character_event = {
	id = emf_log.140
	hide_window = yes
	is_triggered_only = yes
	religion = hip_religion
	has_global_flag = emf_log_province_stats
	trigger = {
		always = no
		has_landed_title = e_hip
	}
	immediate = {
		any_province = {
			limit = {
				has_owner = yes
			}
			export_to_variable = {
				which = local_n_empty_holdings
				value = num_of_empty_holdings
			}
			export_to_variable = {
				which = local_n_max_settlements
				value = num_of_max_settlements
			}
			export_to_variable = {
				which = local_n_settlements
				value = num_of_settlements
			}
			export_to_variable = {
				which = local_tax
				value = total_tax_value
			}
			any_province_holding = {
				limit = {
					holding_type = castle
				}
				change_variable = {
					which = local_n_castle
					value = 1
				}
				export_to_variable = {
					which = local_zck_1
					value = holding_tax_value
				}
				change_variable = {
					which = local_castle_tax
					which = local_zck_1
				}
			}
			any_province_holding = {
				limit = {
					holding_type = temple
				}
				change_variable = {
					which = local_n_temple
					value = 1
				}
				export_to_variable = {
					which = local_zck_2
					value = holding_tax_value
				}
				change_variable = {
					which = local_temple_tax
					which = local_zck_2
				}
			}
			any_province_holding = {
				limit = {
					holding_type = city
				}
				change_variable = {
					which = local_n_city
					value = 1
				}
				export_to_variable = {
					which = local_zck_3
					value = holding_tax_value
				}
				change_variable = {
					which = local_city_tax
					which = local_zck_3
				}
			}
			any_province_holding = {
				limit = {
					holding_type = tribal
				}
				change_variable = {
					which = local_n_tribal
					value = 1
				}
				export_to_variable = {
					which = local_zck_4
					value = holding_tax_value
				}
				change_variable = {
					which = local_tribal_tax
					which = local_zck_4
				}
			}
			any_province_holding = {
				limit = {
					holding_type = nomad
				}
				change_variable = {
					which = local_n_nomad
					value = 1
				}
				export_to_variable = {
					which = local_zck_5
					value = holding_tax_value
				}
				change_variable = {
					which = local_nomad_tax
					which = local_zck_5
				}
			}
		}
	}
}
