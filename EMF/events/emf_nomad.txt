
namespace = emf_nomad


character_event = {
	id = emf_nomad.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = n_convert value = 0 }
		if = {
			limit = { population_and_manpower = 5000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 10000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 15000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 20000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 25000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 30000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 35000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 40000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 45000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 50000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 55000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 60000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 65000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 70000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 75000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 80000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 85000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 90000 }
			change_variable = { which = n_convert value = 1 }
		}
		if = {
			limit = { population_and_manpower = 95000 }
			change_variable = { which = n_convert value = 1 }
		}
	}
}


character_event = {
    id = emf_nomad.1
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        # Settle new capital ...

        capital_scope = {
            religion = ROOT
            culture = ROOT
            set_province_flag = emf_nomad_settled
        }

        # Settle up to `n_convert` provinces with our religion/culture via
        # "cluster-blobbing" technique, starting at new capital ...

        character_event = { id = emf_nomad.2 }

        # Cleanup ...

        any_realm_province = {
            clr_province_flag = emf_nomad_settled
        }

        set_variable = { which = n_convert value = 0 }
    }
}


character_event = {
	id = emf_nomad.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		check_variable = { which = n_convert value = 0.1 }
	}

	option = {
		name = OK

		random_realm_province = {
            limit = {
                has_province_flag = emf_nomad_settled
                any_neighbor_province = {
                    nand = {
                        religion = ROOT
                        culture = ROOT
                    }
                    any_province_holding = {
                        not = { holding_type = nomad }
                    }
                    owner = {
                        or = {
                            character = ROOT
                            is_liege_or_above = ROOT
                        }
                    }
                }
            }

            # Mark any already same-religion/culture neighbors as settled,
            # but don't count them towards conversion total.
            any_neighbor_province = {
                limit = {
                    religion = ROOT
                    culture = ROOT
                    any_province_holding = {
                        not = { holding_type = nomad }
                    }
                    owner = {
                        or = {
                            character = ROOT
                            is_liege_or_above = ROOT
                        }
                    }
                }
                set_province_flag = emf_nomad_settled
            }

            # Select a random eligible neighbor province to settle
            random_neighbor_province = {
                limit = {
                    nand = {
                        religion = ROOT
                        culture = ROOT
                    }
                    any_province_holding = {
                        not = { holding_type = nomad }
                    }
                    owner = {
                        or = {
                            character = ROOT
                            is_liege_or_above = ROOT
                        }
                    }
                }
                religion = ROOT
                culture = ROOT
                set_province_flag = emf_nomad_settled
                ROOT = {
                    change_variable = { which = n_convert value = -1 }
                    character_event = { id = emf_nomad.2 } # Recurse
                    break = yes # <-- Very important
                }
            }
        }

        # If we reach this point, we couldn't find any conversion targets next to
        # already-settled provinces, so we should branch-out and find a new seed
        # province from which to continue trying to cluster randomly.

        # First, let's prefer new seeds that have the potential to grow to at least
        # a 2-cluster (it's too easy to select a province with, say, just a temple
        # in the middle of nomadic lands)

        random_realm_province = {
            limit = {
                nand = {
                    religion = ROOT
                    culture = ROOT
                }
                any_province_holding = {
                    not = { holding_type = nomad }
                }
                any_neighbor_province = {
                    nand = {
                        religion = ROOT
                        culture = ROOT
                    }
                    any_province_holding = {
                        not = { holding_type = nomad }
                    }
                    owner = {
                        or = {
                            character = ROOT
                            is_liege_or_above = ROOT
                        }
                    }
                }
            }
            religion = ROOT
            culture = ROOT
            set_province_flag = emf_nomad_settled
            ROOT = {
                change_variable = { which = n_convert value = -1 }
                character_event = { id = emf_nomad.2 } # Recurse
                break = yes # <-- Very important
            }
        }

        # If we reach this point, we first failed to grow the current cluster, then
        # we failed to seed a province that had the potential to be a 2-cluster, so
        # now we're just going to try converting any random non-nomadic province.

        random_realm_province = {
            limit = {
                any_province_holding = {
                    not = { holding_type = nomad }
                }
                nand = {
                    religion = ROOT
                    culture = ROOT
                }
            }
            religion = ROOT
            culture = ROOT
            set_province_flag = emf_nomad_settled
            ROOT = {
                change_variable = { which = n_convert value = -1 }
                character_event = { id = emf_nomad.2 } # Recurse
            }
        }
	}
}
