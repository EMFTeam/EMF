
namespace = emf_faction


character_event = { # Check for stray war traits/TOMs <Debug MTTH on ALL characters>
	id = emf_faction.1000
	
	hide_window = yes

	trigger = {
		NOT = { has_character_flag = pf_error }
		OR = {
			AND = { # Stray rebel state
				OR = {
					trait = rebel
					has_any_opinion_modifier = revolting_against
				}
				OR = {
					is_ruler = no
					pf_in_revolt_trigger = no
				}
			}
			AND = {
				trait = loyalist
				OR = {
					NOT = { has_opinion_modifier = { who = LIEGE modifier = pf_loyal_toward } }
					NOT = { reverse_has_opinion_modifier = { who = LIEGE modifier = pf_loyal_to_me } }
				}
			}
			AND = {
				trait = neutral
				OR = {
					NOT = { has_opinion_modifier = { who = LIEGE modifier = pf_neutral_toward } }
					NOT = { reverse_has_opinion_modifier = { who = LIEGE modifier = pf_neutral_to_me } }
				}
			}
			AND = {
				OR = {
					trait = neutral
					trait = loyalist
					has_any_opinion_modifier = pf_loyal_toward
					has_any_opinion_modifier = pf_neutral_toward
				}
				liege = {
					OR = {
						character = PREV
						NOT = {
							any_war = {
								defender = { character = PREVPREV }
								using_cb = cb_faction_overthrow_ruler
							}
						}
					}
				}
			}
			AND = { # Stray liege state
				NOT = {
					any_war = {
						defender = { character = ROOT }
						using_cb = cb_faction_overthrow_ruler
					}
				}
				OR = {
					has_any_opinion_modifier = revolting_against_me
					has_any_opinion_modifier = pf_loyal_to_me
					has_any_opinion_modifier = pf_neutral_to_me
					pf_war_flag_trigger = yes
				}
			}
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	immediate = {
		set_character_flag = pf_error
		log = "ERROR: stray civil war state (checked periodically, so more info needed); dump follows:"
		pf_log_state_effect = yes
	}
}


letter_event = { # Court
	id = emf_faction.1010
	desc = emf_faction.1010.desc

	is_triggered_only = yes

	option = {
		name = emf_faction.1010.opt.a # Standard revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = {
		name = emf_faction.1010.opt.b # Aggro revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				add_character_modifier = { name = emf_faction_rebel_antichrist duration = 60 }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = { name = CANCEL }
}


letter_event = { # Prosperity
	id = emf_faction.1011
	desc = emf_faction.1010.desc

	is_triggered_only = yes

	option = {    
		name = emf_faction.1010.opt.a # Standard revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = {
		name = emf_faction.1010.opt.b # Aggro revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				add_character_modifier = { name = emf_faction_rebel_antichrist duration = 60 }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = { name = CANCEL }
}


letter_event = { # Glory
	id = emf_faction.1012
	desc = emf_faction.1010.desc

	is_triggered_only = yes

	option = {
		name = emf_faction.1010.opt.a # Standard revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = {
		name = emf_faction.1010.opt.b # Aggro revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				add_character_modifier = { name = emf_faction_rebel_antichrist duration = 60 }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = { name = CANCEL }
}


letter_event = { # Tradition
	id = emf_faction.1013
	desc = emf_faction.1010.desc

	is_triggered_only = yes

	option = {
		name = emf_faction.1010.opt.a # Standard revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = {
		name = emf_faction.1010.opt.b # Aggro revolt
		FROM = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				add_character_modifier = { name = emf_faction_rebel_antichrist duration = 60 }
				hidden_tooltip = { set_variable = { which = faction_votes value = 1 } }
				character_event = { id = PlusFaction.344 }
			}
		}
	}
	option = { name = CANCEL }
}


##### ONE-OFF TESTING ######

character_event = {
	id = emf_faction.1020
	desc = placeholder_g
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes

	immediate = {
		job_chancellor = { location = { owner = { save_event_target_as = receiver } } }
	}

	option = {
		name = OK
		trigger = {
			event_target:receiver = {
				trait = rebel
			}
		}
		e_persia = {
			grant_title_no_opinion = event_target:receiver
		}
	}
	option = {
		name = CANCEL
	}
}


character_event = {
	id = emf_faction.1030
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		always = no
		FROMFROM = {
			is_dying = no
		}
	}
	
	immediate = {
		log = "DEBUG: abdication detected: [FromFrom.GetTitledName] (ID: [FromFrom.GetID]) -> [This.GetTitledFirstName] of the [This.PrimaryTitle.GetFullBaseName] (ID: [This.GetID]):"
		log = "<<<<<"
		FROM = {
			log = "transferred title: [This.GetFullBaseName]"
		}
		if = {
			limit = { war = yes }
			log = "war = yes"
		}
		any_war = {
			limit = {
				defender = { character = ROOT }
			}
			attacker = {
				log = "defending against: [This.GetTitledFirstName] of the [This.PrimaryTitle.GetFullBaseName] (ID: [This.GetID])"
			}
		}
		any_war = {
			limit = {
				attacker = { character = ROOT }
			}
			attacker = {
				log = "offensive against: [This.GetTitledFirstName] of the [This.PrimaryTitle.GetFullBaseName] (ID: [This.GetID])"
			}
		}
		if = {
			limit = { in_revolt = yes }
			log = "in_revolt = yes"
		}
		liege_before_war = {
			log = "liege_before_war: [This.GetTitledFirstName] of the [This.PrimaryTitle.GetFullBaseName] (ID: [This.GetID])"
		}
		liege = {
			log = "liege: [This.GetTitledFirstName] of the [This.PrimaryTitle.GetFullBaseName] (ID: [This.GetID])"
		}
		log = ">>>>>"
	}
}
