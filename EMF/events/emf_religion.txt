# -*- ck2.events -*-

namespace = emf_religion

# Religion Events
# Future home of schism events, (possibly) Shiite school traits, and other things

# Raider Trait Gained
character_event = {
	id = emf_religion.0
	desc = emf_religion.0.desc
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	min_age = 16
	capable_only = yes
	prisoner = no

	trigger = {
		NOR = {
			trait = raider
			trait = viking
			trait = pirate
			trait = ravager
			trait = seaking
			trait = sea_queen
		}
		NOR = {
			any_owned_bloodline = {
				has_bloodline_flag = bloodline_viking
				bloodline_is_active_for = PREV
			}
			emf_seafaring_religion = yes
		}
	}

	option = {
		name = emf_religion.0.a
		add_trait = raider
	}
}


# emf_religion.1 -- on_new_holder (creation) for holy orders to ensure they are setup correctly
character_event = {
	id = emf_religion.1

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		FROM = { holy_order = yes }
		NOT = { FROMFROM = { always = yes } }
	}

	immediate = {
		# Ensure independent [NOTE: might not want this for all holy_order=yes titles, but currently we do.]
		if = {
			limit = { independent = no }
			set_defacto_liege = ROOT
			emf_liege_change = yes
		}
		set_government_type = order_government
		emf_create_courtiers = yes
		# Award religious authority
		if = {
			limit = { NOT = { religion_authority = 0.75 } }
			religion_authority = { modifier = religious_order_formed }
		}
		# Ensure wealth
		if = {
			limit = { NOT = { wealth = 500 } }
			clear_wealth = yes
			wealth = 500
		}
	}
}

# emf_religion.2 -- Assignment of syncretic traits on_birth, on_conversion, on new characters spawning, etc.
character_event = {
	id = emf_religion.2

	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		religion_scope = {
			OR = {
				has_religion_feature = religion_syncretic_christian
				has_religion_feature = religion_syncretic_muslim
				has_religion_feature = religion_syncretic_zoroastrian
				has_religion_feature = religion_syncretic_indian
			}
		}
	}
	
	immediate = {
		if = {
			limit = { has_religion_feature = religion_syncretic_christian }
			add_trait = syncretic_christian
		}
		if = {
			limit = { has_religion_feature = religion_syncretic_muslim }
			add_trait = syncretic_muslim
		}
		if = {
			limit = { has_religion_feature = religion_syncretic_zoroastrian }
			add_trait = syncretic_zoroastrian
		}
		if = {
			limit = { has_religion_feature = religion_syncretic_indian }
			add_trait = syncretic_indian
		}
	}
}

# emf_religion.3 -- Activation of Jewish Great Holy Wars, after Christians and Muslims
narrative_event = {
	id = emf_religion.3
	title = EVTNAME_emf_religion_3
	desc = EVTDESC_emf_religion_3
	picture = GFX_evt_synagogue
	border = GFX_event_narrative_frame_religion

	major = yes

	show_ROOT = yes
	hide_new = yes

	only_playable = yes
	min_age = 16
	religion_group = jewish_group

	trigger = {
		NOT = {
			has_alternate_start_parameter = { key = religion_names value = random }
		}
		controls_religion = yes

		NOT = { has_global_flag = jewish_ghws_unlocked }

		OR = {
			has_global_flag = muslim_jihads_unlocked
			has_global_flag = christian_crusades_unlocked
		}
	}

	mean_time_to_happen = {
		months = 120
		modifier = {
			factor = 0
			has_global_flag = emf_debug_fast_ghw_unlock
		}
	}

	immediate = {
		set_global_flag = jewish_ghws_unlocked
	}

	option = {
		name = EVTOPTA_emf_religion_3
		trigger = {
			religion_group = jewish_group
		}
	}

	option = {
		name = EVTOPTB_emf_religion_3
		trigger = {
			NOT = { religion_group = jewish_group }
		}
	}
}

# emf_religion.4 -- Activation of Mazdan Great Holy Wars, after Christians and Muslims
narrative_event = {
	id = emf_religion.4
	title = EVTNAME_emf_religion_4
	desc = EVTDESC_emf_religion_4
	picture = GFX_evt_zoroaster
	border = GFX_event_narrative_frame_religion

	major = yes

	show_ROOT = yes
	hide_new = yes

	only_playable = yes
	min_age = 16
	religion_group = zoroastrian_group

	trigger = {
		NOT = {
			has_alternate_start_parameter = { key = religion_names value = random }
		}
		controls_religion = yes

		NOT = { has_global_flag = zoroastrian_ghws_unlocked }

		OR = {
			has_global_flag = muslim_jihads_unlocked
			has_global_flag = christian_crusades_unlocked
		}
	}

	mean_time_to_happen = {
		months = 120
		modifier = {
			factor = 0
			has_global_flag = emf_debug_fast_ghw_unlock
		}
	}

	immediate = {
		set_global_flag = zoroastrian_ghws_unlocked
	}

	option = {
		name = EVTOPTA_emf_religion_4
		trigger = {
			religion_group = zoroastrian_group
		}
	}

	option = {
		name = EVTOPTB_emf_religion_4
		trigger = {
			NOT = { religion_group = zoroastrian_group }
		}
	}
}

# emf_religion.5 -- Set GHW flags for alternate start worlds in existing saves
character_event = {
	id = emf_religion.5

	is_triggered_only = yes
	hide_window = yes
	
	religion = hip_religion
	
	trigger = {
		has_landed_title = e_hip
		is_alternate_start = yes
		has_alternate_start_parameter = { key = religion_names value = random }
		has_global_flag = ghw_activated
	}
	
	immediate = {
		set_global_flag = jewish_ghws_unlocked
		set_global_flag = zoroastrian_ghws_unlocked
	}
}

# emf_religion.6 -- Fix Pagan Reformation God names on loading of a saved game (because changed god lists are saved improperly as of 3.3.0)
character_event = {
	id = emf_religion.6

	is_triggered_only = yes
	hide_window = yes
	
	religion = hip_religion
	
	trigger = {
		has_landed_title = e_hip
		is_save_game = yes
		OR = {
			has_global_flag = norse_reformation
			has_global_flag = tengri_reformation
			has_global_flag = baltic_reformation
			has_global_flag = finnish_reformation
			has_global_flag = aztec_reformation
			has_global_flag = slavic_reformation
			has_global_flag = west_african_reformation
			has_global_flag = zun_reformation
			has_global_flag = bon_reformation
			has_global_flag = hellenic_reformation
		}
	}
	
	immediate = {
		if = {
			limit = { has_global_flag = norse_reformation }
			norse_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_norse_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = norse_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:norse_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = norse_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = norse_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:norse_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = tengri_reformation }
			tengri_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_tengri_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = tengri_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:tengri_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = tengri_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = tengri_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:tengri_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = baltic_reformation }
			baltic_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_baltic_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = baltic_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:baltic_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = baltic_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = baltic_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:baltic_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = finnish_reformation }
			finnish_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_finnish_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = finnish_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:finnish_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = finnish_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = finnish_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:finnish_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = aztec_reformation }
			aztec_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_aztec_reformed_dummy = {
						religion_head = {
							save_event_target_as = aztec_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:aztec_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = aztec_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = aztec_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:aztec_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = slavic_reformation }
			slavic_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_slavic_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = slavic_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:slavic_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = slavic_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = slavic_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:slavic_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = west_african_reformation }
			west_african_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_west_african_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = west_african_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:west_african_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = west_african_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = west_african_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:west_african_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = zun_reformation }
			zun_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_zun_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = zun_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:zun_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = zun_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = zun_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:zun_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = bon_reformation }
			bon_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_bon_reformed_dummy = {
						religion_head = {
							save_event_target_as = bon_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:bon_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = bon_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = bon_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:bon_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
		if = {
			limit = { has_global_flag = hellenic_reformation }
			hellenic_pagan_reformed = {
				# For older saves without a reformer persistent event target saved
				if = {
					limit = { NOT = { persistent_event_target:reformer = { always = yes } } }
					event_target:emf_global_hellenic_pagan_reformed_dummy = {
						religion_head = {
							save_event_target_as = hellenic_reformer
						}
					}
					if = {
						limit = { NOT = { event_target:hellenic_reformer = { always = yes } } }
						random_playable_ruler = {
							limit = {
								religion = hellenic_pagan_reformed
							}
							preferred_limit = {
								tier = EMPEROR
								ai = no
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
								ai = no
							}
							preferred_limit = {
								tier = KING
							}
							preferred_limit = {
								tier = DUKE
								ai = no
							}
							preferred_limit = {
								tier = DUKE
							}
							preferred_limit = {
								ai = no
							}
							save_event_target_as = hellenic_reformer
						}
					}
					save_persistent_event_target = { name = reformer scope = event_target:hellenic_reformer }
				}
				reformation_god_names_changes_effect = yes
			}
		}
	}
}
