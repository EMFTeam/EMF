# -*- ck2.events -*-

namespace = emf_adventurer
#reserved: emf_adventurer.3000 to emf_adventurer.3099

#######################################
# MAGYAR EVENTS
# Written by Rylock
#######################################

### MAGYAR MIGRATION TO CARPATHIA

# Magyar Migration Event - Start
character_event = {
	id = emf_adventurer.3000

	hide_window = yes
	
	culture = hungarian
	religion = tengri_pagan
	only_playable = yes
	only_independent = yes
	capable_only = yes
	prisoner = no
	min_age = 16
	
	trigger = {
		ai = yes
		war = no
		in_revolt = no
		OR = {
			is_nomadic = yes
			is_tribal = yes
		}
		OR = {
			NOT = { num_of_count_titles_in_realm = 7 }
			year = 895
		}
		any_realm_province = { region = emf_region_etelkoz }
		NOR = {
			has_global_flag = emf_magyar_migration_started
			any_realm_title = { de_jure_liege_or_above = k_hungary }
			num_of_count_titles_in_realm = 12
		}
		any_independent_ruler = {
			in_revolt = no
			any_realm_title = {
				tier = COUNT
				de_jure_liege_or_above = k_hungary
				is_occupied = no
				count = 3
			}
			any_realm_province = {
				county = { is_occupied = no }
				region = emf_region_lower_carpathia
			}
			NOR = {
				reverse_has_truce = ROOT
				is_allied_with = ROOT
				has_non_aggression_pact_with = ROOT
				pays_tribute_to = ROOT
			}
		}
	}
	
	mean_time_to_happen = {
		months = 6
		modifier = {
			factor = 0.5
			year = 900
		}
		modifier = {
			factor = 0.1
			year = 905
		}
		modifier = {
			factor = 0.1
			NOT = { num_of_count_titles_in_realm = 7 }
		}
		modifier = {
			factor = 0.01
			NOT = { num_of_count_titles_in_realm = 5 }
		}
	}
	
	immediate = {
		set_global_flag = emf_magyar_migration_started
		capital_scope = {
			ROOT = {
				spawn_unit = {
					province = PREV
					owner = THIS
					troops = {
						horse_archers = { 1350 1350 }
						light_cavalry = { 800 800 }
					}
					attrition = 0.25
					earmark = magyar_migration_troops
				}
				spawn_unit = {
					province = PREV
					owner = THIS
					troops = {
						horse_archers = { 1350 1350 }
						light_cavalry = { 800 800 }
					}
					attrition = 0.25
					earmark = magyar_migration_troops
				}
				spawn_unit = {
					province = PREV
					owner = THIS
					troops = {
						horse_archers = { 1350 1350 }
						light_cavalry = { 800 800 }
					}
					attrition = 0.25
					earmark = magyar_migration_troops
				}
				spawn_unit = {
					province = PREV
					owner = THIS
					troops = {
						horse_archers = { 1350 1350 }
						light_cavalry = { 800 800 }
					}
					attrition = 0.25
					earmark = magyar_migration_troops
				}
				spawn_unit = {
					province = PREV
					owner = THIS
					troops = {
						horse_archers = { 1350 1350 }
						light_cavalry = { 800 800 }
					}
					attrition = 0.25
					earmark = magyar_migration_troops
				}
				spawn_unit = {
					province = PREV
					owner = THIS
					troops = {
						horse_archers = { 1350 1350 }
						light_cavalry = { 800 800 }
					}
					attrition = 0.25
					earmark = magyar_migration_troops
				}
			}
		}

		# Pick largest valid target in Hungary
		random_independent_ruler = {
			limit = {
				in_revolt = no
				any_realm_title = {
					tier = COUNT
					de_jure_liege_or_above = k_hungary
					is_occupied = no
					count = 7
				}
				any_realm_province = {
					county = { is_occupied = no }
					region = emf_region_lower_carpathia
				}
				NOR = {
					reverse_has_truce = ROOT
					is_allied_with = ROOT
					has_non_aggression_pact_with = ROOT
					pays_tribute_to = ROOT
				}
			}
			character_event = { id = emf_adventurer.3001 }
			break = yes
		}
		random_independent_ruler = {
			limit = {
				in_revolt = no
				any_realm_title = {
					tier = COUNT
					de_jure_liege_or_above = k_hungary
					is_occupied = no
					count = 5
				}
				any_realm_province = {
					county = { is_occupied = no }
					region = emf_region_lower_carpathia
				}
				NOR = {
					reverse_has_truce = ROOT
					is_allied_with = ROOT
					has_non_aggression_pact_with = ROOT
					pays_tribute_to = ROOT
				}
			}
			character_event = { id = emf_adventurer.3001 }
			break = yes
		}
		random_independent_ruler = {
			limit = {
				in_revolt = no
				any_realm_title = {
					tier = COUNT
					de_jure_liege_or_above = k_hungary
					is_occupied = no
					count = 3
				}
				any_realm_province = {
					county = { is_occupied = no }
					region = emf_region_lower_carpathia
				}
				NOR = {
					reverse_has_truce = ROOT
					is_allied_with = ROOT
					has_non_aggression_pact_with = ROOT
					pays_tribute_to = ROOT
				}
			}
			character_event = { id = emf_adventurer.3001 }
		}
	}
}

# Target realm must decide whether to oppose the migration
character_event = {
	id = emf_adventurer.3001
	desc = EVTDESC_emf_adventurer_3001
	picture = GFX_evt_magyars
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_emf_adventurer_3001 # Let them be
		trigger = {
			OR = {
				NOT = { capital_scope = { kingdom = { title = k_hungary } } }
				ai = no
			}
		}
		k_hungary = {
			FROM = {
				gain_settlements_under_title = {
					title = PREV
					enemy = ROOT
					is_crusade = yes
					type = invasion
				}
			}
		}
		hidden_tooltip = {
			FROM = {
				character_event = { id = emf_adventurer.3002 } # Begin migration
			}
		}
	}
	option = {
		name = EVTOPTB_emf_adventurer_3001 # Fight them!
		trigger = {
			OR = {
				capital_scope = { kingdom = { title = k_hungary } }
				ai = no
			}
		}
		reverse_war = {
			casus_belli = emf_magyar_invasion
			target = FROM
			thirdparty_title = k_hungary
			infamy = 0
		}
	}
}

# Migration takes place
# NOTE: this is fired either from the event (if the target agrees to allow the migration to happen peacefully)
# or from the on_success condition in the emf_magyar_invasion cb
character_event = {
	id = emf_adventurer.3002
	desc = EVTDESC_emf_adventurer_3002
	picture = GFX_evt_magyars
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = emf_magyar_migration_completed
		any_playable_ruler = {
			limit = {
				NOT = { character = ROOT }
				is_within_diplo_range = ROOT
			}
			narrative_event = { id = emf_adventurer.3005 }
		}
	}
	
	option = {
		name = EVTOPTA_emf_adventurer_3002
		trigger = { is_nomadic = yes }
		custom_tooltip = { text = WILL_MIGRATE_TO_HUNGARY }
		hidden_tooltip = {
			# All non-nomadic (and player) vassals of Count+ tier go free
			any_vassal = {
				limit = {
					OR = {
						is_nomadic = no
						ai = no
					}
					is_playable = yes
				}
				set_defacto_liege = THIS
			}
			
			# Deal with nomadic vassals
			any_vassal = {
				limit = { is_nomadic = yes }
				# Give them some extra event troops
				capital_scope = {
					PREV = {
						spawn_unit = {
							province = PREV
							owner = THIS
							troops = {
								horse_archers = { 500 500 }
								light_cavalry = { 250 250 }
							}
							attrition = 0.25
							earmark = magyar_migration_troops
						}
					}
				}
				# Release their own vassals
				any_vassal = {
					limit = { higher_tier_than = BARON }
					set_defacto_liege = THIS
				}
				# Mark them to not use the regular unlanded on_action event
				set_character_flag = vassal_khan
				# Gain all their provinces
				any_demesne_title = {
					limit = { tier = COUNT }
					grant_title = ROOT
				}
			}
			
			# Hungarian and Khazar provinces in the Etelkoz are lost
			any_realm_province = {
				limit = {
					kingdom = { NOT = { title = k_hungary } }
				}
				# Build a tribal holding if it's empty
				if = {
					limit = { NOT = { num_of_settlements  = 1 } }
					build_holding = { type = tribal }
				}
				# Mark any existing settlements so they don't get destroyed
				any_province_holding = { set_title_flag = do_not_destroy }
				# Find a neighboring province of a different culture, if one is available
				random_neighbor_province = {
					limit = { NOT = { culture = hungarian } }
					save_event_target_as = neighbor_province
				}
				if = {
					limit = { NOT = { event_target:neighbor_province = { always = yes } } }
					ROOT = { save_event_target_as = neighbor_province }
				}
				# Now create a peasant leader of the new culture/religion
				county = {
					create_character = {
						random_traits = yes
						dynasty = RANDOM
						religion = event_target:neighbor_province
						culture = event_target:neighbor_province
						female = no
						age = 25
						trait = peasant_leader
					}
					new_character = {
						save_event_target_as = new_province_owner
						grant_title = PREV
						set_government_type = tribal_government
						set_defacto_liege = THIS
					}
				}
				# Then remove any new tribal holdings which have been built via the process
				any_province_holding = {
					limit = { NOT = { has_title_flag = do_not_destroy } }
					destroy_settlement = THIS
				}
				any_province_holding = {
					limit = { has_title_flag = do_not_destroy }
					clr_title_flag = do_not_destroy
				}
				# Then apply culture/religion change
				culture = event_target:neighbor_province
				religion = event_target:neighbor_province
			}
			
			# Refill levies of newly-acquired provinces
			character_event = { id = emf_crusades.1 days = 1 }
			any_demesne_title = {
				limit = { tier = BARON }
				set_title_flag = refill_levy
			}
		}
	}
	option = {
		name = EVTOPTA_emf_adventurer_3002
		trigger = { is_tribal = yes }
		custom_tooltip = { text = WILL_MIGRATE_TO_HUNGARY }
		hidden_tooltip = {
			# All non-Hungarian or player vassals in the realm go free
			any_playable_ruler = {
				limit = {
					same_realm = ROOT
					OR = {
						NOT = { culture = hungarian }
						ai = no
					}
				}
				set_defacto_liege = THIS
			}
			
			# Deal with hungarian vassals in the realm
			any_playable_ruler = {
				limit = {
					same_realm = ROOT
					culture = hungarian
				}
				opinion = {
					who = ROOT
					modifier = opinion_support_migration
					years = 20
				}
				# Move their courtiers to the liege's court
				any_courtier = {
					limit = {
						is_ruler = no
						OR = {
							is_close_relative = PREV
							dynasty = PREV
							martial = 10
						}
					}
					move_character = ROOT
				}
				# Mark them so they prompt to get land later
				set_character_flag = vassal_khan
				# Destroy any titles of Duke+
				any_demesne_title = {
					limit = { higher_tier_than = COUNT }
					unsafe_destroy_landed_title = THIS
				}
				# Gain all their remaining titles
				any_demesne_title = {
					grant_title = ROOT
				}
				# Move them to the liege's court
				move_character = ROOT
			}
			
			# Hungarian and Khazar provinces in the Etelkoz are lost
			any_realm_province = {
				limit = {
					kingdom = { NOT = { title = k_hungary } }
				}
				# Build a tribal holding if it's empty
				if = {
					limit = { NOT = { num_of_settlements  = 1 } }
					build_holding = { type = tribal }
				}
				# Mark any existing settlements so they don't get destroyed
				any_province_holding = { set_title_flag = do_not_destroy }
				# Find a neighboring province of a different culture, if one is available
				if = {
					limit = { NOT = { culture = hungarian } }
					save_event_target_as = neighbor_province
				}
				if = {
					limit = { NOT = { event_target:neighbor_province = { always = yes } } }
					random_neighbor_province = {
						limit = { NOT = { culture = hungarian } }
						save_event_target_as = neighbor_province
					}
				}
				if = {
					limit = { NOT = { event_target:neighbor_province = { always = yes } } }
					ROOT = { save_event_target_as = neighbor_province }
				}
				# Now create a peasant leader of the new culture/religion
				county = {
					create_character = {
						random_traits = yes
						dynasty = RANDOM
						religion = event_target:neighbor_province
						culture = event_target:neighbor_province
						female = no
						age = 25
						trait = peasant_leader
					}
					new_character = {
						save_event_target_as = new_province_owner
						grant_title = PREV
						set_government_type = tribal_government
						set_defacto_liege = THIS
					}
				}
				# Then remove any new tribal holdings which have been built via the process
				any_province_holding = {
					limit = { NOT = { has_title_flag = do_not_destroy } }
					destroy_settlement = THIS
				}
				any_province_holding = {
					limit = { has_title_flag = do_not_destroy }
					clr_title_flag = do_not_destroy
				}
				# Then apply culture/religion change
				culture = event_target:neighbor_province
				religion = event_target:neighbor_province
			}
			
			# Refill levies of newly-acquired provinces
			character_event = { id = emf_crusades.1 days = 1 }
			any_demesne_title = {
				limit = { tier = BARON }
				set_title_flag = refill_levy
			}
		}
	}
}

# Magyar nomad vassals preparing for migration
character_event = {
	id = emf_adventurer.3003
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_game_started = yes
		is_alive = yes
		is_dying = no
		is_nomadic = yes
		prisoner = no
		NOT = { trait = incapable }
		has_character_flag = vassal_khan
	}
	
	immediate = {
		clan_title = {
			capital_scope = {
				save_event_target_as = last_province
				
				holder_scope = {
					top_liege = {
						save_event_target_as = former_liege
						clan_title = { save_event_target_as = liege_clan }
						reverse_opinion = {
							modifier = forbidden_raid_target
							who = ROOT
							months = 2400
						}
					}
				}
			}
			clan_opinion = {
				who = event_target:liege_clan
				modifier = opinion_support_migration
				years = 20
			}
		}

		set_defacto_liege = THIS
			
		clan_title = {
			set_title_adventurer = { title = THIS status = yes }
			set_title_landless = { title = THIS status = yes }
			set_defacto_liege = THIS
		}
		
		any_army = {
			set_can_toggle_looting = yes
			set_looting = yes
			set_can_toggle_looting = no
		}
		
		if = {
			limit = { NOT = { unused_manpower = 250 } }
			manpower = 250
		}
		
		character_event = { id = HL.132 } # Convert unused manpower into raiding troops
		character_event = { id = emf_adventurer.3004 days = 1 } # Re-vassalize to ruler after one day
	}
}

# Re-vassalize to the Magyar ruler after one day
character_event = {
	id = emf_adventurer.3004
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		clan_title = { set_title_adventurer = { title = THIS status = no } }
		any_demesne_title = {
			limit = { tier = EMPEROR }
			unsafe_destroy_landed_title = THIS
		}
		set_defacto_liege = event_target:former_liege
	}
}

# Notice to the rest of the world that the migration has occurred
narrative_event = {
	id = emf_adventurer.3005
	title = EVTNAME_emf_adventurer_3005
	desc = EVTDESC_emf_adventurer_3005
	picture = GFX_evt_magyars
	
	is_triggered_only = yes
	
	option = {
		name = I_SEE
	}
}

### POST-MIGRATION EVENTS

# Unlanded Magyar noble passes on vassal_khan flag
character_event = {
	id = emf_adventurer.3010
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_character_flag = vassal_khan
		NOT = { num_of_count_titles = 1 }
	}
	
	immediate = {
		if = {
			limit = {
				is_ruler = yes
				is_nomadic = yes
			}
			current_heir = {
				if = {
					limit = { NOT = { is_liege_of = ROOT } }
					set_character_flag = vassal_khan
				}
			}
			break = yes
		}
		random_child = {
			limit = {
				is_ruler = no
				is_female = no
				dynasty = ROOT
				same_realm = ROOT
				NOT = {
					any_sibling = {
						is_female = no
						dynasty = ROOT
						is_older_than = PREV
					}
				}
			}
			set_character_flag = vassal_khan
		}
	}
}

# Unlanded Magyar noble is imprisoned by liege
character_event = {
	id = emf_adventurer.3011
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_character_flag = vassal_khan
		FROM = { is_liege_of = ROOT }
	}

	immediate = {
		clr_character_flag = vassal_khan
		if = {
			limit = {
				is_nomadic = yes
				NOT = { num_of_count_titles = 1 }
			}
			set_character_flag = raiding_adventurer
			set_defacto_liege = THIS
			hidden_tooltip = {
				clan_title = {
					set_title_adventurer = { title = THIS status = yes }
					set_title_landless = { title = THIS status = yes }
					set_defacto_liege = THIS
				}
				character_event = { id = HL.110 days = 1095 } # Ping to see if he's ready to settle, repeating every 3 years.
			}
		}
	}
}

# Unlanded Magyar noble requests land from their liege
character_event = {
	id = emf_adventurer.3012
	
	hide_window = yes
	
	has_character_flag = vassal_khan
	culture = hungarian
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		NOT = { num_of_count_titles = 1 }
		liege = {
			war = no
			culture = ROOT
			religion = ROOT
			any_demesne_title = {
				tier = COUNT
				count = 4
			}
			any_demesne_title = {
				tier = COUNT
				can_be_given_away = yes
				NOT = { title = c_pest }
				NOT = { location = { is_capital = yes } }
			}
			NOT = { has_character_flag = vassal_khan_request }
		}
	}
	
	mean_time_to_happen = {
		months = 3
		modifier = {
			factor = 0.1
			liege = { ai = yes }
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 0.5
			trait = proud
		}
		modifier = {
			factor = 2
			trait = content
		}
		modifier = {
			factor = 2
			trait = humble
		}		
	}
	
	immediate = {
		liege = {
			set_character_flag = vassal_khan_request
			random_demesne_title = {
				limit = {
					tier = COUNT
					can_be_given_away = yes
					NOT = { title = c_pest }
					NOT = { location = { is_capital = yes } }
				}
				save_event_target_as = requested_title
			}
			letter_event = { id = emf_adventurer.3013 }
		}
	}
}

# Liege considers whether to grant the request
letter_event = {
	id = emf_adventurer.3013
	desc = EVTDESC_emf_adventurer_3013
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_emf_adventurer_3013 # Agree
		clr_character_flag = vassal_khan_request
		event_target:requested_title = {
			grant_title = FROM
			any_direct_de_jure_vassal_title = {
				limit = { holder = ROOT }
				grant_title = FROM
			}
		}
		FROM = {
			opinion = { who = ROOT modifier = opinion_grateful multiplier = 2 years = 10 }
			hidden_tooltip = {
				if = {
					limit = { is_nomadic = no }
					any_spouse = {
						limit = { is_ruler = no }
						move_character = PREV
					}
					any_child = {
						limit = {
							is_adult = yes
							is_ruler = no
						}
						move_character = PREV
					}
				}
			}
		}
	}
	option = {
		name = EVTOPTB_emf_adventurer_3013 # Refuse
		trigger = { ai = no }
		clr_character_flag = vassal_khan_request
		prestige = -100
		add_rival = FROM
		primary_title = { add_pressed_claim = FROM }
		FROM = {
			clr_character_flag = vassal_khan
			if = {
				limit = { is_nomadic = yes }
				set_character_flag = raiding_adventurer
				set_defacto_liege = THIS
				hidden_tooltip = {
					clan_title = {
						set_title_adventurer = { title = THIS status = yes }
						set_title_landless = { title = THIS status = yes }
						set_defacto_liege = THIS
					}
					character_event = { id = HL.110 days = 1095 } # Ping to see if he's ready to settle, repeating every 3 years.
				}
			}
		}
	}
}

# Avar province converts to Hungarian
province_event = {
	id = emf_adventurer.3014
	desc = EVTDESC_emf_adventurer_3014
	picture = GFX_evt_magyars2
	
	trigger = {
		culture = avar
		county = { is_occupied = no }
		owner = {
			culture = hungarian
			top_liege = { culture = PREV }
		}
		has_global_flag = emf_magyar_migration_completed
		NOT = { has_province_flag = hungarian_conversion }
	}
	
	mean_time_to_happen = {
		years = 10
		modifier = {
			factor = 0.1
			is_capital = yes
			owner = { independent = yes }
		}
		modifier = {
			factor = 0.5
			any_neighbor_province = { culture = hungarian }
		}
		modifier = {
			factor = 0.5
			has_global_flag = emf_conquest_hungary_completed
		}
	}
	
	option = {
		name = EXCELLENT
		set_province_flag = hungarian_conversion
		culture = hungarian
		owner = {
			if = {
				limit = { culture = avar }
				culture = hungarian
			}
			hidden_tooltip = {
				any_courtier = {
					limit = {
						is_ruler = no
						culture = avar
					}
					culture = hungarian
				}
			}
		}
		county = {
			any_direct_de_jure_vassal_title = {
				limit = { owner = { culture = avar } }
				owner = {
					culture = hungarian
					hidden_tooltip = {
						any_courtier = {
							limit = {
								is_ruler = no
								culture = avar
							}
							culture = hungarian
						}
					}
				}
			}
		}
	}
}

# Magyar ruler raises a force of raiders
character_event = {
	id = emf_adventurer.3016
	
	hide_window = yes
	
	culture = hungarian
	religion = tengri_pagan
	only_playable = yes
	capable_only = yes
	only_men = yes
	prisoner = no
	min_age = 16
	
	trigger = {
		ai = yes
		martial = 10
		is_theocracy = no
		is_republic = no
		war = no
		liege = { war = no }
		any_demesne_title = {
			tier = COUNT
			kingdom = { title = k_hungary }
		}
		top_liege = { culture = ROOT }
		has_global_flag = emf_magyar_migration_completed
		OR = {
			NOT = { has_character_flag = tribal_organize_raid_troops }
			had_character_flag = { flag = tribal_organize_raid_troops days = 3650 }
		}
	}
	
	mean_time_to_happen = {
		months = 120
		modifier = {
			factor = 2
			tier = COUNT
		}
		modifier = {
			factor = 0.8
			martial = 11
		}
		modifier = {
			factor = 0.75
			martial = 12
		}
		modifier = {
			factor = 0.75
			martial = 13
		}
		modifier = {
			factor = 0.8
			martial = 14
		}
		modifier = {
			factor = 0.9
			martial = 15
		}
		modifier = {
			factor = 0.9
			martial = 16
		}
		modifier = {
			factor = 0.9
			martial = 17
		}
		modifier = {
			factor = 0.95
			martial = 18
		}
		modifier = {
			factor = 0.95
			martial = 19
		}
		modifier = {
			factor = 0.95
			martial = 20
		}
		modifier = {
			factor = 0.95
			martial = 21
		}
		modifier = {
			factor = 0.95
			martial = 22
		}
		modifier = {
			factor = 0.95
			martial = 23
		}
		modifier = {
			factor = 0.95
			martial = 24
		}
		modifier = {
			factor = 0.95
			martial = 25
		}
		modifier = {
			factor = 0.965
			martial = 26
		}
		modifier = {
			factor = 0.965
			martial = 27
		}
		modifier = {
			factor = 0.965
			martial = 28
		}
		modifier = {
			factor = 0.965
			martial = 29
		}
		modifier = {
			factor = 0.965
			martial = 30
		}
	}
	
	immediate = {
		capital_scope = {
			ROOT = {
				spawn_unit = {
					province = PREV
					home = PREV
					owner = THIS
					match_character = THIS
					match_mult = 0.025
					match_min = 100
					match_max = 3000
					attrition = 1.0
					cannot_inherit = yes
					earmark = tribal_organize_raid
					is_looter = yes
					can_toggle_looting = no
				}
				spawn_unit = {
					province = PREV
					home = PREV
					owner = THIS
					match_character = THIS
					match_mult = 0.025
					match_min = 100
					match_max = 3000
					attrition = 1.0
					cannot_inherit = yes
					earmark = tribal_organize_raid
					is_looter = yes
					can_toggle_looting = no
				}
				spawn_unit = {
					province = PREV
					home = PREV
					owner = THIS
					match_character = THIS
					match_mult = 0.025
					match_min = 100
					match_max = 3000
					attrition = 1.0
					cannot_inherit = yes
					earmark = tribal_organize_raid
					is_looter = yes
					can_toggle_looting = no
				}
			}
		}
		clr_character_flag = tribal_organize_raid_troops
		set_character_flag = tribal_organize_raid_troops
		character_event = { id = 20223 days = 30 }
	}
}

### SETTLING IN CARPATHIA

# Magyars have conquered enough of Hungary
character_event = {
	id = emf_adventurer.3020
	desc = EVTDESC_emf_adventurer_3020
	picture = GFX_evt_magyars
	
	culture = hungarian
	only_playable = yes
	only_independent = yes
	capable_only = yes
	prisoner = no
	min_age = 16
	
	trigger = {
		war = no
		completely_controls_region = emf_region_carpathia
		capital_scope = { kingdom = { title = k_hungary } }
		has_global_flag = emf_magyar_migration_completed
		NOT = { has_global_flag = emf_conquest_hungary_completed }
	}
	
	option = {
		name = EXCELLENT
		set_global_flag = emf_conquest_hungary_completed
		disband_event_forces = magyar_migration_troops
		prestige = 500
		if = {
			limit = {
				ai = yes
				is_nomadic = yes
			}
			character_event = { id = emf_adventurer.3021 }
		}
	}
}

# AI Magyar nomads will settle as tribal at this point
character_event = {
	id = emf_adventurer.3021
	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		# Change culture and religion of capital province and possibly more provinces depending on nomad population_and_manpower
		capital_scope = {
			culture = ROOT
			religion = ROOT
		}
		# Change name of Avaria to Hungary if relevant.
		set_global_flag = avar_khaganate_renamed
		if = {
			limit = { NOT = { is_title_active = k_hungary } }
			activate_title = { title = k_hungary status = yes }
		}
		# Create the Kingdom of Hungary
		k_hungary = {
			reset_coa = THIS
			set_name = ""
			adjective = ""
			grant_title = {
				target = ROOT
				type = created
			}
		}
		# Usurp any king-tier titles belonging to vassals
		any_vassal = {
			limit = { is_nomadic = no }
			any_demesne_title = {
				limit = {
					higher_tier_than = DUKE
					temporary = no
				}
				usurp_title = ROOT
			}
		}
		# Convert all clans to tribal government
		any_vassal = {
			limit = { is_nomadic = yes }
			set_government_type = tribal_government
			capital_scope = {
				culture = PREV
				religion = PREV
			}
		}
		# Usurp capital's duchy, if owned by someone in the realm
		capital_scope = {
			duchy = {
				if = {
					limit = {
						owner = {
							same_realm = ROOT
							NOT = { character = ROOT }
						}
					}
					usurp_title = ROOT
				}
			}
		}
		# Convert to tribal government
		set_government_type = tribal_government
		primary_title = {
			add_law = tribal_organization_0
			add_law = centralization_0
		}
		set_character_flag = emf_context_nomadic_to_tribal
		# Notify players
		any_playable_ruler = {
			limit = {
				NOT = { character = ROOT }
				ai = no
			}
			narrative_event = { id = HL.2 }
		}
	}
}

# Feudal Hungarian king prompted to become Christian
narrative_event = {
	id = emf_adventurer.3022
	title = EVTNAME_emf_adventurer_3022
	desc = EVTDESC_emf_adventurer_3022
	picture = GFX_evt_magyars2
	
	major = yes
	
	culture = hungarian
	religion = tengri_pagan
	only_playable = yes
	only_independent = yes
	capable_only = yes
	prisoner = no
	min_age = 16

	trigger = {
		ai = yes
		is_feudal = yes
		has_landed_title = k_hungary
		has_global_flag = emf_conquest_hungary_completed
		NOR = {
			trait = zealous
			k_hungary = { has_title_flag = ai_converted_catholic }
		}	
	}
	
	mean_time_to_happen = {
		months = 12
	}
	
	immediate = {
		piety = 250
		set_character_flag = king_converted
		religion_authority = { modifier = ruler_converted_from }
		religion = catholic
		religion_authority = { modifier = ruler_converted_to }
		any_courtier = {
			limit = {
				OR = {
					dynasty = ROOT
					is_close_relative = ROOT
				}
				is_ruler = no
			}
			religion = ROOT
		}	
	}
	
	option = {
		name = EVTOPTA_emf_adventurer_3022
		trigger = { religion_group = christian }
	}
	option = {
		name = EVTOPTB_emf_adventurer_3022
		trigger = { NOT = { religion_group = christian } }
	}
}

	

