# -*- ck2.events -*-

namespace=HF

###########################
# Child of Destiny Events #
###########################

character_event = { # Extra chance for player children to become Children of Destiny
	id = HF.199
	hide_window = yes
	is_triggered_only = yes
	only_playable = yes
	ai = no
	max_age = 8

	trigger = {
		has_dlc = "Holy Fury"
		has_game_rule = {
			name = child_of_destiny
			value = on
		}
		NOR = {
			was_conceived_a_bastard = yes
			trait = bastard
			trait = legit_bastard
		}
		OR = {
			is_tribal = yes
			is_feudal = yes
			is_nomadic = yes
		}
		NOR = {
			any_owned_bloodline = { # Must not already have a Child of Destiny bloodline
				has_bloodline_flag = bloodline_ambition
			}
			is_ill = yes
			is_inaccessible_or_incapable_trigger = yes
			has_negative_congenital_trigger = yes
			AND = { # Should be able to legally inherit
				is_female = yes
				OR = {
					has_religion_feature = religion_patriarchal
					liege = {
						has_law = agnatic_succession
					}
					AND = { # Non-randomized muslims usually prohibit women from ruling
						religion_group = muslim
						NOT = {
							has_alternate_start_parameter = { key = religion_names value = random }
						}
					}
				}
			}
			AND = { # Should be able to legally inherit
				is_female = no
				OR = {
					has_religion_feature = religion_matriarchal
					liege = {
						has_law = enatic_succession
					}
				}
			}
			any_dynasty_member = { # Only one per dynasty at any one time
				has_character_flag = is_child_of_destiny
			}
		}
	}

	immediate = {
		save_event_target_as = child_of_destiny
		set_character_flag = is_child_of_destiny
		set_character_flag = ai_flag_refuse_concubinage
		set_character_flag = no_court_invites
		father = {
			narrative_event = { id = HF.201 days = 15 }
		}
		mother = {
			narrative_event = { id = HF.201 days = 15 }
		}
		child_of_destiny_journey_start_effect = yes
		health = 1

		character_event = { id = HF.306 }

		if = {
			limit = {
				has_global_flag = cod_test_events
			}
			any_player = {
				character_event = { id = HF.307 }
			}
		}

		change_variable = { which = global_children_of_destiny_childhood_pulse_player value = 1 }
	}

	weight_multiplier = {
		days = 1

		modifier = { # Having a super-parent boosts the chance
			factor = 3
			OR = {
				father_even_if_dead = {
					has_top_tier_education_trait_trigger = yes
					is_attractive_trigger = yes
					has_pleasant_personality_trigger = yes
				}
				mother_even_if_dead = {
					has_top_tier_education_trait_trigger = yes
					is_attractive_trigger = yes
					has_pleasant_personality_trigger = yes
				}
			}
		}
		modifier = {
			factor = 3
			trait = strong
		}
		modifier = {
			factor = 3
			OR = {
				trait = genius
				trait = quick
			}
		}
		modifier = {
			factor = 3
			trait = fair
		}
		modifier = {
			factor = 0.25
			any_owned_bloodline = { # Let's try to avoid stacking created bloodlines
				has_bloodline_flag = created_bloodline
			}
		}
		modifier = {
			factor = 5000
			has_global_flag = cod_test_values_spawns
		}
	}
}

character_event = { # Child becomes Child of Destiny
	id = HF.200

	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_dlc = "Holy Fury"
		has_game_rule = {
			name = child_of_destiny
			value = on
		}
		NOR = {
			was_conceived_a_bastard = yes
			trait = bastard
			trait = legit_bastard
			is_primary_heir = yes
		}
		OR = {
			father = {
				is_liege_of = ROOT
				higher_tier_than = BARON
			}
			mother = {
				is_liege_of = ROOT
				higher_tier_than = BARON
			}
		}
		OR = {
			is_tribal = yes
			is_feudal = yes
			is_nomadic = yes
		}
		NOR = {
			any_owned_bloodline = { # Let's not stack created bloodlines
				has_bloodline_flag = created_bloodline
			}
			is_ill = yes
			is_inaccessible_or_incapable_trigger = yes
			has_negative_congenital_trigger = yes
			AND = { # Should be able to legally inherit
				is_female = yes
				OR = {
					has_religion_feature = religion_patriarchal
					liege = {
						has_law = agnatic_succession
					}
					AND = { # Non-randomized muslims usually prohibit women from ruling
						religion_group = muslim
						NOT = {
							has_alternate_start_parameter = { key = religion_names value = random }
						}
					}
				}
			}
			AND = { # Should be able to legally inherit
				is_female = no
				OR = {
					has_religion_feature = religion_matriarchal
					liege = {
						has_law = enatic_succession
					}
				}
			}
			any_dynasty_member = { # Only one per dynasty at any one time
				has_character_flag = is_child_of_destiny
			}
		}
	}

	immediate = {
		save_event_target_as = child_of_destiny
		set_character_flag = is_child_of_destiny
		set_character_flag = ai_flag_refuse_concubinage
		set_character_flag = no_court_invites
		father = {
			narrative_event = { id = HF.201 days = 15 }
		}
		mother = {
			narrative_event = { id = HF.201 days = 15 }
		}
		child_of_destiny_journey_start_effect = yes
		health = 1

		change_variable = { which = global_children_of_destiny_on_birth value = 1 }
		set_global_flag = child_of_destiny_@ROOT
		if = {
			limit = {
				OR = {
					father = { ai = no }
					mother = { ai = no }
				}
			}
			change_variable = { which = global_children_of_destiny_on_birth_player value = 1 }
		}

		if = {
			limit = {
				has_global_flag = cod_test_events
			}
			any_player = {
				character_event = { id = HF.307 }
			}
		}
	}

	weight_multiplier = {
		days = 1

		modifier = {
			factor = 10
			OR = {
				father = {
					ai = no
				}
				mother = {
					ai = no
				}
			}
		}
		modifier = { # Having a super-parent boosts the chance
			factor = 3
			OR = {
				father_even_if_dead = {
					has_top_tier_education_trait_trigger = yes
					is_attractive_trigger = yes
					has_pleasant_personality_trigger = yes
				}
				mother_even_if_dead = {
					has_top_tier_education_trait_trigger = yes
					is_attractive_trigger = yes
					has_pleasant_personality_trigger = yes
				}
			}
		}
		modifier = {
			factor = 3
			trait = strong
		}
		modifier = {
			factor = 3
			OR = {
				trait = genius
				trait = quick
			}
		}
		modifier = {
			factor = 3
			trait = fair
		}
		modifier = {
			factor = 5
			total_years_played = 150
			NOT = { check_variable = { which = global_children_of_destiny_bloodlines_founded value = 1 } }
		}
		modifier = {
			factor = 2
			total_years_played = 200
			NOT = { check_variable = { which = global_children_of_destiny_bloodlines_founded value = 1 } }
		}
		modifier = {
			factor = 2
			total_years_played = 250
			NOT = { check_variable = { which = global_children_of_destiny_bloodlines_founded value = 1 } }
		}
		modifier = {
			factor = 5000
			has_global_flag = cod_test_values_spawns
		}
	}
}

narrative_event = { # Parents notified of the ominous birth
	id = HF.201
	title = HF_201_TITLE
	desc = HF_201_DESC
	picture = GFX_evt_birth
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = HF_201_OPTA
	}
}

character_event = { # Child of Destiny journey randomization tombola
	id = HF.210

	hide_window = yes

	is_triggered_only = yes

	has_character_flag = is_child_of_destiny

	immediate = {
		save_event_target_as = child_of_destiny
		if = {
			limit = { # Perhaps it was not destined after all...
				is_incapable = yes
			}
			clr_character_flag = is_child_of_destiny
		}
		else = {
			random_list = { # Main 'journey' events
				########
				# BABY #
				########
				10 = { # Snake in the Crib
					modifier = {
						factor = 0
						age = 6
					}
					modifier = {
						factor = 0
						prisoner = yes
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_snek
					}
					character_event = { id = HF.211 }
				}
				10 = { # Accidently drink poison and survive
					modifier = {
						factor = 0
						age = 6
					}
					modifier = {
						factor = 0
						liege = {
							job_spymaster = {
								is_inaccessible_or_incapable_trigger = yes
							}
						}
					}
					modifier = {
						factor = 0
						prisoner = yes
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_poison
					}
					character_event = { id = HF.215 }
				}
				###############
				# YOUNG CHILD #
				###############
				10 = { # Vision from highgod
					modifier = {
						factor = 0
						NOT = { age = 6 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						NOT = {
							any_realm_character = {
								is_priest = yes
								religion = event_target:child_of_destiny
								NOT = { is_inaccessible_or_incapable_trigger = yes }
							}
						}
					}
					modifier = {
						factor = 0
						NOT = {
							any_realm_province = {
								any_province_holding = {
									holding_type = temple
									holder_scope = {
										religion = event_target:child_of_destiny
									}
								}
							}
						}
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_highgod_vision
					}
					character_event = { id = HF.217 }
				}
				10 = { # Meeting with Great Warrior
					modifier = {
						factor = 0
						NOT = { age = 6 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_warrior
					}
					character_event = { id = HF.219 }
				}
				10 = { # Meeting with Wandering Wise Man
					modifier = {
						factor = 0
						NOT = { age = 6 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_wise_man
					}
					character_event = { id = HF.221 }
				}
				10 = { # Attempted murder!
					modifier = {
						factor = 0
						NOT = { age = 6 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_attempted_murder
					}
					character_event = { id = HF.225 }
				}
				10 = { # Encounter Wild Beast
					modifier = {
						factor = 0
						NOT = { age = 10 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						liege = {
							job_marshal = {
								is_inaccessible_or_incapable_trigger = yes
							}
						}
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_wild_beast
					}
					character_event = { id = HF.228 }
				}
				##############
				# ADOLESCENT #
				##############
				10 = { # Swarmed by admirers
					modifier = {
						factor = 0
						NOT = { age = 12 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						has_ugly_trait_trigger = yes
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_admirers
					}
					character_event = { id = HF.223 }
				}
				10 = { # Gain 'Posse'
					modifier = {
						factor = 0
						NOT = { age = 12 }
					}
					modifier = {
						factor = 0
						is_adult = yes
					}
					modifier = {
						factor = 0
						NOT = {
							top_liege = {
								any_realm_character = {
									count = 3
									age = 10
									is_adult = no
									ai = yes
									same_sex = event_target:child_of_destiny
									NOR = {
										is_inaccessible_or_incapable_trigger = yes
										is_friend = event_target:child_of_destiny
									}
								}
							}
						}
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_posse
					}
					character_event = { id = HF.235 }
				}
				#########
				# ADULT #
				#########
				10 = { # Player Destiny - choose!
					modifier = {
						factor = 0
						NOT = { age = 20 }
					}
					modifier = {
						factor = 0
						ai = yes # Only if player
					}
					modifier = {
						factor = 0
						higher_tier_than = DUKE
					}
					modifier = {
						factor = 0
						war = yes
					}
					modifier = {
						factor = 0
						in_revolt = yes
					}
					modifier = {
						factor = 0
						any_liege = {
							in_revolt = yes
						}
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						NOT = {
							any_independent_ruler = {
								ai = yes
								is_tributary = no
								is_landed = yes
								independent = yes
								NOT = { is_vassal_or_below = event_target:child_of_destiny }
								realm_size = 25
								event_target:child_of_destiny = {
									NOR = {
										obedient = PREV
										non_interference = PREV
										has_non_aggression_pact_with = PREV
									}
								}
							}
						}
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_made_player_choice
					}
					character_event = { id = HF.231 }
				}
				10 = { # Gain a lover
					modifier = {
						factor = 0
						NOT = { is_adult = yes }
					}
					modifier = {
						factor = 0
						num_of_lovers = 2
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						NOT = {
							top_liege = {
								any_realm_character = {
									possibly_romantically_interested_in_each_other_trigger = yes
									is_unattractive_trigger = no
									is_adult = yes
									ai = yes
									NOR = {
										is_inaccessible_or_incapable_trigger = yes
										is_rival = event_target:child_of_destiny
										is_lover = event_target:child_of_destiny
										is_infertile_trigger = yes
										practical_age = 40
										character = event_target:child_of_destiny
									}
								}
							}
						}
					}
					character_event = { id = HF.227 }
				}
				10 = { # Gain a friend
					modifier = {
						factor = 0
						NOT = { is_adult = yes }
					}
					modifier = {
						factor = 0
						num_of_friends = 5
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						NOT = {
							top_liege = {
								any_realm_character = {
									is_adult = yes
									ai = yes
									NOR = {
										event_target:child_of_destiny = {
											any_liege = {
												character = PREVPREV
											}
										}
										is_inaccessible_or_incapable_trigger = yes
										family = event_target:child_of_destiny
										is_rival = event_target:child_of_destiny
										is_lover = event_target:child_of_destiny
										is_friend = event_target:child_of_destiny
										character = event_target:child_of_destiny
									}
								}
							}
						}
					}
					character_event = { id = HF.240 }
				}
				10 = { # Overcome hardship (depressed, stressed)
					modifier = {
						factor = 0
						NOT = { is_adult = yes }
					}
					modifier = {
						factor = 0
						prisoner = yes
					}
					modifier = {
						factor = 0
						NOR = {
							trait = stressed
							trait = depressed
						}
					}
					character_event = { id = HF.234 }
				}
				10 = { # Goes on an adventure
					modifier = {
						factor = 0
						NOT = { age = 20 }
					}
					modifier = {
						factor = 0
						ai = no
					}
					modifier = {
						factor = 0
						higher_tier_than = DUKE
					}
					modifier = {
						factor = 0
						has_character_flag = child_of_destiny_adventure
					}
					modifier = {
						factor = 0
						OR = {
							is_inaccessible_trigger = yes
							prisoner = yes
						}
					}
					modifier = {
						factor = 0
						has_game_rule = {
							name = adventurers
							value = none
						}
					}
					modifier = {
						factor = 0
						NOT = {
							any_independent_ruler = { # There must be a valid target
								ai = yes
								is_tributary = no
								is_landed = yes
								independent = yes
								NOT = { is_vassal_or_below = event_target:child_of_destiny }
								realm_size = 25
								event_target:child_of_destiny = {
									NOR = {
										obedient = PREV
										non_interference = PREV
										has_non_aggression_pact_with = PREV
										top_liege = {
											distance_from_realm = { who = PREVPREV value = 1200 }
										}
									}
								}
							}
						}
					}
					character_event = { id = HF.290 }
				}
				###########
				# Any Age #
				###########
				10 = { # Prison Escape (not for babies though)
					modifier = {
						factor = 0
						NOT = { age = 6 }
					}
					modifier = {
						factor = 0
						prisoner = no
					}
					modifier = {
						factor = 0
						NOT = {
							host = {
								any_realm_character = {
									is_landed = no
									is_patrician = no
									is_adult = yes
									NOR = {
										is_inaccessible_or_incapable_trigger = yes
										is_rival = event_target:child_of_destiny
										is_married = yes
										is_consort = yes
									}
								}
							}
						}
					}
					character_event = { id = HF.237 }
				}

				fallback = {
					child_of_destiny_journey_resume_effect = yes
				}
			}
		}
	}
}

character_event = { # Snake in Crib
	id = HF.211
	desc = HF_211_DESC
	picture = GFX_evt_birth

	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_snek
	}

	option = { # Strangle the snake
		name = HF_211_OPTA

		random_list = {
			95 = { # Success
				add_character_modifier = {
					modifier = strangled_snake
					duration = -1
				}
				father = { character_event = { id = HF.212 } }
				mother = { character_event = { id = HF.212 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.212 } }
				}
			}
			5 = {
				death = {
					death_reason = death_accident_snakes
				}
				father = { character_event = { id = HF.214 } }
				mother = { character_event = { id = HF.214 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.214 } }
				}
			}
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # Befriend the snake
		name = HF_211_OPTB

		random_list = {
			95 = { # Success
				add_character_modifier = {
					modifier = friend_of_snakes
					duration = -1
				}
				father = { character_event = { id = HF.213 } }
				mother = { character_event = { id = HF.213 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.213 } }
				}
			}
			5 = {
				death = {
					death_reason = death_accident_snakes
				}
				father = { character_event = { id = HF.214 } }
				mother = { character_event = { id = HF.214 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.214 } }
				}
			}
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Snake in Crib, Baby strangles snake
	id = HF.212
	desc = HF_212_DESC
	picture = GFX_evt_birth
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_OPT_MORE_GUARDS
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_OPT_NOT_MY_CHILD
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Notification - Snake in Crib, Baby befriends snake
	id = HF.213
	desc = HF_213_DESC
	picture = GFX_evt_birth
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_OPT_MORE_GUARDS
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_OPT_NOT_MY_CHILD
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Notification - Snake in Crib, Baby dies
	id = HF.214
	desc = HF_214_DESC
	picture = GFX_evt_birth
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_OPT_MY_CHILD
		trigger = {
			is_parent_of = FROM
		}
		tooltip = {
			event_target:child_of_destiny = {
				death = {
					death_reason = death_accident_snakes
				}
			}
		}
	}
	option = {
		name = HF_OPT_NOT_MY_CHILD
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		tooltip = {
			event_target:child_of_destiny = {
				death = {
					death_reason = death_accident_snakes
				}
			}
		}
	}
}

character_event = { # Drink Poison
	id = HF.215
	desc = HF_215_DESC
	picture = GFX_evt_council
	portrait = event_target:spymaster_target
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_poison
		liege = {
			job_spymaster = {
				save_event_target_as = spymaster_target
			}
		}
	}

	option = { # I feel strong
		name = HF_215_OPTA

		add_character_modifier = {
			modifier = child_of_mithridates
			duration = -1
		}

		father = { character_event = { id = HF.216 } }
		mother = { character_event = { id = HF.216 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.216 } }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # I feel strange
		name = HF_215_OPTB

		add_character_modifier = {
			modifier = strange_mind
			duration = -1
		}

		father = { character_event = { id = HF.216 } }
		mother = { character_event = { id = HF.216 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.216 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = spymaster_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Drinking poison
	id = HF.216
	desc = HF_216_DESC
	picture = GFX_evt_council
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_216_OPTA
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_216_OPTB
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Vision from Highgod
	id = HF.217
	desc = HF_217_DESC
	picture = GFX_evt_bishop
	border = GFX_event_normal_frame_religion
	portrait = event_target:priest_target

	hide_new = yes

	is_triggered_only = yes

	immediate = {
		set_character_flag = child_of_destiny_highgod_vision
		random_realm_character = {
			limit = {
				is_priest = yes
				religion = event_target:child_of_destiny
				NOT = { is_inaccessible_or_incapable_trigger = yes }
			}
			preferred_limit = {
				OR = {
					trait = zealous
					trait = theologian
				}
			}
			save_event_target_as = priest_target
		}
		random_realm_province = {
			limit = {
				any_province_holding = {
					holding_type = temple
					holder_scope = {
						religion = event_target:child_of_destiny
					}
				}
			}
			random_province_holding = {
				limit = {
					holding_type = temple
					holder_scope = {
						religion = event_target:child_of_destiny
					}
				}
				save_event_target_as = temple_target
			}
		}
	}

	option = { # Perhaps I, too, will be a god one day?
		name = HF_217_OPTA

		add_trait = cynical
		add_trait = inspiring_leader

		add_character_modifier = {
			modifier = aspiring_for_godhood
			duration = -1
		}

		if = {
			limit = {
				NOR = {
					religion_group = indian_group
					religion_group = pagan_group
					religion_group = zoroastrian_group
				}
			}
			add_character_modifier = {
				name = annoyed_religious
				years = 10
			}
		}

		father = { character_event = { id = HF.218 } }
		mother = { character_event = { id = HF.218 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.218 } }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # I must honor highgod's teachings
		name = HF_217_OPTB

		add_trait = zealous
		add_trait = holy_warrior

		add_character_modifier = {
			modifier = devoted_to_highgod
			duration = -1
		}

		set_character_flag = ai_flag_refuse_conversion

		father = { character_event = { id = HF.218 } }
		mother = { character_event = { id = HF.218 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.218 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = priest_target
		clear_event_target = temple_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Vision from highgod
	id = HF.218
	desc = HF_218_DESC
	picture = GFX_evt_bishop
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_218_OPTA
		show_portrait = event_target:priest_target
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_218_OPTB
		show_portrait = event_target:priest_target
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Meet Warrior
	id = HF.219
	desc = HF_219_DESC
	picture = GFX_evt_child_sword
	portrait = event_target:great_warrior_target
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_warrior
		if = {
			limit = {
				any_realm_character = {
					has_education_martial_trigger = yes
					ai = yes
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_parent_of = event_target:child_of_destiny
						is_liege_of = event_target:child_of_destiny
					}
					martial = 14
				}
			}
			random_realm_character = {
				limit = {
					has_education_martial_trigger = yes
					ai = yes
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_parent_of = event_target:child_of_destiny
						is_liege_of = event_target:child_of_destiny
					}
					martial = 14
				}
				save_event_target_as = great_warrior_target
			}
		}
		else = {
			spawn_fantastic_commander_effect = yes
			new_character = {
				save_event_target_as = great_warrior_target
			}
		}
	}

	option = { # I was eager to learn about personal combat
		name = HF_219_OPTA

		add_character_modifier = {
			modifier = tenacious_duelist
			duration = -1
		}

		add_trait = robust
		add_trait = wroth

		add_friend = event_target:great_warrior_target

		father = { character_event = { id = HF.220 } }
		mother = { character_event = { id = HF.220 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.220 } }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # I was eager to learn about strategy
		name = HF_219_OPTB

		add_character_modifier = {
			modifier = clever_planner
			duration = -1
		}

		add_trait = robust
		add_trait = patient

		add_friend = event_target:great_warrior_target

		father = { character_event = { id = HF.220 } }
		mother = { character_event = { id = HF.220 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.220 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = invited_character
		clear_event_target = great_warrior_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Meet Warrior
	id = HF.220
	desc = HF_220_DESC
	picture = GFX_evt_child_sword
	portrait = event_target:child_of_destiny
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_220_OPTA
		show_portrait = event_target:great_warrior_target
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_220_OPTB
		show_portrait = event_target:great_warrior_target
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Meet Wandering Wise Man
	id = HF.221
	desc = HF_221_DESC
	picture = GFX_evt_child_reading
	portrait = event_target:wise_man_target
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_wise_man
		if = {
			limit = {
				any_realm_character = {
					has_character_flag = physician_wandering_genius
					ai = yes
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_parent_of = event_target:child_of_destiny
						is_liege_of = event_target:child_of_destiny
					}
				}
			}
			random_realm_character = {
				limit = {
					has_character_flag = physician_wandering_genius
					ai = yes
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_parent_of = event_target:child_of_destiny
						is_liege_of = event_target:child_of_destiny
					}
				}
				save_event_target_as = wise_man_target
			}
		}
		else = {
			create_character = {
				religion = event_target:child_of_destiny
				dynasty = none
				age = 43
				random_traits = yes
				female = no
				attributes = {
					learning = 12
				}
				health = 6
				trait = mastermind_theologian
				trait = genius
				trait = adventurer
				trait = one_eyed
				trait = celibate
				flag = is_court_physician
				flag = physician_wandering_genius
				flag = ai_flag_refuse_conversion
			}
			new_character = {
				emf_dna_set_flags_for_high_health = yes
				set_character_flag = no_court_invites
				remove_trait = dull
				remove_trait = lustful
				give_nickname = nick_the_wise
				if = {
					limit = {
						religion_group = muslim
					}
					remove_trait = scholar
					add_trait = mutazilite
				}
				save_event_target_as = wise_man_target
				# EMF: a better version of culture = random
				random_province = {
					limit = { has_owner = yes }
					event_target:wise_man_target = {
						if = {
							limit = { NOT = { culture = PREV } }
							culture = PREV
							set_graphical_culture = PREV
						}
					}
				}
				emf_new_character_priest = yes
			}
		}
	}

	option = { # I learned how to inspire
		name = HF_221_OPTA

		add_character_modifier = {
			modifier = inspiring_presence
			duration = -1
		}

		add_trait = gregarious
		add_trait = diligent

		add_friend = event_target:wise_man_target

		father = { character_event = { id = HF.222 } }
		mother = { character_event = { id = HF.222 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.222 } }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # I learned how to rule
		name = HF_221_OPTB

		add_character_modifier = {
			modifier = motivated_ruler
			duration = -1
		}

		add_trait = temperate
		add_trait = just

		add_friend = event_target:wise_man_target

		father = { character_event = { id = HF.222 } }
		mother = { character_event = { id = HF.222 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.222 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = wise_man_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Meet Wandering Wise Man
	id = HF.222
	desc = HF_222_DESC
	picture = GFX_evt_child_reading
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_222_OPTA
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_222_OPTB
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Swarmed by Admirers
	id = HF.223
	desc = HF_223_DESC
	picture = GFX_evt_child_talking
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_admirers
		top_liege = {
			random_realm_character = {
				limit = {
					age = 12
					is_adult = no
					ai = yes
					is_incapable = no
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						trait = homosexual
						trait = celibate
						trait = eunuch
					}
					OR = { # This feeds into an event where sex partners are selected and which does process close relatives who would be OK with incest despite their religion
						NOT = { is_close_relative = event_target:child_of_destiny }
						emf_divine_blood_true_religion = yes
					}
					is_opposite_sex = event_target:child_of_destiny
				}
				save_event_target_as = admirer_1
			}
			random_realm_character = {
				limit = {
					age = 12
					is_adult = no
					ai = yes
					is_incapable = no
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						trait = homosexual
						trait = celibate
						trait = eunuch
					}
					OR = { # This feeds into an event where sex partners are selected and which does process close relatives who would be OK with incest despite their religion
						NOT = { is_close_relative = event_target:child_of_destiny }
						emf_divine_blood_true_religion = yes
					}
					is_opposite_sex = event_target:child_of_destiny
					NOT = { character = event_target:admirer_1 }
				}
				save_event_target_as = admirer_2
			}
			random_realm_character = {
				limit = {
					age = 12
					is_adult = no
					ai = yes
					is_incapable = no
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						trait = homosexual
						trait = celibate
						trait = eunuch
					}
					OR = { # This feeds into an event where sex partners are selected and which does process close relatives who would be OK with incest despite their religion
						NOT = { is_close_relative = event_target:child_of_destiny }
						emf_divine_blood_true_religion = yes
					}
					is_opposite_sex = event_target:child_of_destiny
					NOT = { character = event_target:admirer_1 }
					NOT = { character = event_target:admirer_2 }
				}
				save_event_target_as = admirer_3
			}
			random_realm_character = {
				limit = {
					age = 12
					is_adult = no
					ai = yes
					is_incapable = no
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						trait = celibate
						trait = eunuch
					}
					OR = { # This feeds into an event where sex partners are selected and which does process close relatives who would be OK with incest despite their religion
						NOT = { is_close_relative = event_target:child_of_destiny }
						emf_divine_blood_true_religion = yes
					}
					same_sex = event_target:child_of_destiny
					trait = homosexual
					NOT = { character = event_target:admirer_1 }
					NOT = { character = event_target:admirer_2 }
					NOT = { character = event_target:admirer_3 }
				}
				save_event_target_as = homosexual_admirer_1
			}
			random_realm_character = {
				limit = {
					age = 12
					is_adult = no
					ai = yes
					is_incapable = no
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						trait = celibate
						trait = eunuch
					}
					OR = { # This feeds into an event where sex partners are selected and which does process close relatives who would be OK with incest despite their religion
						NOT = { is_close_relative = event_target:child_of_destiny }
						emf_divine_blood_true_religion = yes
					}
					same_sex = event_target:child_of_destiny
					trait = homosexual
					NOT = { character = event_target:admirer_1 }
					NOT = { character = event_target:admirer_2 }
					NOT = { character = event_target:admirer_3 }
					NOT = { character = event_target:homosexual_admirer_1 }
				}
				save_event_target_as = homosexual_admirer_2
			}
		}
	}

	option = { # I understand why they love me, I *am* magnificent!
		name = HF_223_OPTA

		add_character_modifier = {
			modifier = irresistible
			duration = -1
		}

		add_trait = lustful

		event_target:admirer_1 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}
		event_target:admirer_2 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}
		event_target:admirer_3 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}

		father = { character_event = { id = HF.224 } }
		mother = { character_event = { id = HF.224 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.224 } }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # I was never one to limit my options...
		name = HF_223_OPTB

		add_character_modifier = {
			modifier = irresistible
			duration = -1
		}

		add_trait = lustful
		add_trait = homosexual


		event_target:admirer_1 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}
		event_target:admirer_2 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}
		event_target:homosexual_admirer_1 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}
		event_target:homosexual_admirer_2 = {
			show_scope_change = no
			opinion = {
				modifier = teenage_infatuation
				who = event_target:child_of_destiny
				years = 20
			}
		}

		father = { character_event = { id = HF.224 } }
		mother = { character_event = { id = HF.224 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.224 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = admirer_1
		clear_event_target = admirer_2
		clear_event_target = admirer_3
		clear_event_target = homosexual_admirer_1
		clear_event_target = homosexual_admirer_2
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Swarmed by Admirers
	id = HF.224
	desc = HF_224_DESC
	picture = GFX_evt_child_talking
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_224_OPTA
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_224_OPTB
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Attempted Murder
	id = HF.225
	desc = HF_225_DESC
	picture = GFX_evt_shadow
	portrait = event_target:attempted_murderer
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_attempted_murder
		top_liege = {
			if = {
				limit = {
					any_realm_character = {
						is_devil_worshiper_trigger = yes
						is_adult = yes
						ai = yes
						NOR = {
							is_inaccessible_or_incapable_trigger = yes
							is_parent_of = event_target:child_of_destiny
							is_liege_of = event_target:child_of_destiny
						}
					}
				}
				random_realm_character = {
					limit = {
						is_devil_worshiper_trigger = yes
						is_adult = yes
						ai = yes
						NOR = {
							is_inaccessible_or_incapable_trigger = yes
							is_parent_of = event_target:child_of_destiny
							is_liege_of = event_target:child_of_destiny
						}
					}
					save_event_target_as = attempted_murderer
					add_blood_splatter_effect = yes
				}
			}
			else_if = {
				limit = {
					any_realm_character = {
						OR = {
							trait = lunatic
							trait = possessed
						}
						is_adult = yes
						ai = yes
						NOR = {
							is_inaccessible_or_incapable_trigger = yes
							is_parent_of = event_target:child_of_destiny
							is_liege_of = event_target:child_of_destiny
						}
					}
				}
				random_realm_character = {
					limit = {
						OR = {
							trait = lunatic
							trait = possessed
						}
						is_adult = yes
						ai = yes
						NOR = {
							is_inaccessible_or_incapable_trigger = yes
							is_parent_of = event_target:child_of_destiny
							is_liege_of = event_target:child_of_destiny
						}
					}
					save_event_target_as = attempted_murderer
					add_blood_splatter_effect = yes
				}
			}
			else = {
				create_character = {
					religion = event_target:child_of_destiny
					culture = event_target:child_of_destiny
					dynasty = none
					age = 33
					random_traits = yes
					female = 50
					trait = lunatic
					trait = possessed
					trait = ugly
				}
				new_character = {
					add_scarred_high_effect = yes
					save_event_target_as = attempted_murderer
					add_blood_splatter_effect = yes
					emf_new_character_noble = yes
				}
			}
		}
	}

	option = { # I must always keep a close eye on those around me
		name = HF_225_OPTA

		event_target:attempted_murderer = {
			show_scope_change = no
			death = { death_reason = death_duel killer = event_target:child_of_destiny }
		}

		add_character_modifier = {
			modifier = lightning_reflexes
			duration = -1
		}

		add_trait = paranoid

		father = { character_event = { id = HF.226 } }
		mother = { character_event = { id = HF.226 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.226 } }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # This is proof that Evilgod holds no sway over me
		name = HF_225_OPTB

		event_target:attempted_murderer = {
			show_scope_change = no
			death = { death_reason = death_duel killer = event_target:child_of_destiny }
		}

		add_character_modifier = {
			modifier = protected_from_evil
			duration = -1
		}

		add_trait = humble

		father = { character_event = { id = HF.226 } }
		mother = { character_event = { id = HF.226 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.226 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = attempted_murderer
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Attempted Murder
	id = HF.226
	desc = HF_226_DESC
	picture = GFX_evt_shadow
	portrait = event_target:attempted_murderer
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_226_OPTA
		show_portrait = event_target:attempted_murderer
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_226_OPTB
		show_portrait = event_target:attempted_murderer
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Gain a lover
	id = HF.227
	desc = HF_227_DESC
	picture = GFX_evt_lovers
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		if = {
			limit = {
				top_liege = {
					any_realm_character = {
						possibly_romantically_interested_in_each_other_trigger = yes
						is_unattractive_trigger = no
						is_adult = yes
						ai = yes
						NOR = {
							is_inaccessible_or_incapable_trigger = yes
							is_rival = event_target:child_of_destiny
							is_lover = event_target:child_of_destiny
							is_infertile_trigger = yes
							practical_age = 40
							character = event_target:child_of_destiny
						}
					}
				}
			}
			top_liege = {
				random_realm_character = {
					limit = {
						possibly_romantically_interested_in_each_other_trigger = yes
						is_unattractive_trigger = no
						is_adult = yes
						ai = yes
						NOR = {
							is_inaccessible_or_incapable_trigger = yes
							is_rival = event_target:child_of_destiny
							is_lover = event_target:child_of_destiny
							is_infertile_trigger = yes
							practical_age = 40
							character = event_target:child_of_destiny
						}
					}
					preferred_limit = {
						trait = fair
						has_opinion_modifier = { who = event_target:child_of_destiny modifier = teenage_infatuation }
						NOT = { practical_age = 30 }
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						trait = fair
						NOT = { practical_age = 30 }
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						is_attractive_trigger = yes
						has_opinion_modifier = { who = event_target:child_of_destiny modifier = teenage_infatuation }
						NOT = { practical_age = 30 }
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						is_attractive_trigger = yes
						NOT = { practical_age = 30 }
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						has_opinion_modifier = { who = event_target:child_of_destiny modifier = teenage_infatuation }
						NOT = { practical_age = 30 }
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						NOT = { practical_age = 30 }
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						is_attractive_trigger = yes
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						is_married = no
						is_consort = no
					}
					preferred_limit = {
						is_attractive_trigger = yes
					}
					save_event_target_as = sex_partner
				}
			}
		}
	}

	option = {
		name = HF_227_OPTA
		show_portrait = event_target:attempted_murderer
		add_lover = event_target:sex_partner
		hidden_effect = {
			unprotected_sex_effect_event_target = yes
		}
	}

	option = {
		name = HF_227_OPTB

		ai_chance = {
        	factor = 0
        }
	}

	after = { # Back to the journey tombola!
		clear_event_target = sex_partner
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Encounter Wild Beast
	id = HF.228
	desc = HF_228_DESC
	picture = GFX_evt_child_play
	portrait = event_target:marshal_target

	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_wild_beast
		liege = {
			job_marshal = {
				save_event_target_as = marshal_target
			}
		}
	}

	option = { # Fight the beast!
		name = HF_228_OPTA

		random_list = {
			95 = { # Success
				add_character_modifier = {
					modifier = slain_legendary_beast
					duration = -1
				}
				add_trait = brave
				father = { character_event = { id = HF.229 } }
				mother = { character_event = { id = HF.229 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.229 } }
				}
			}
			5 = {
				death = {
					death_reason = death_accident_generic_beast
				}
				father = { character_event = { id = HF.230 } }
				mother = { character_event = { id = HF.230 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.230 } }
				}
			}
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # Outsmart the beast
		name = HF_228_OPTB

		random_list = {
			95 = { # Success
				add_character_modifier = {
					modifier = outsmarted_legendary_beast
					duration = -1
				}
				add_trait = deceitful
				father = { character_event = { id = HF.229 } }
				mother = { character_event = { id = HF.229 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.229 } }
				}
			}
			5 = {
				death = {
					death_reason = death_accident_generic_beast
				}
				father = { character_event = { id = HF.230 } }
				mother = { character_event = { id = HF.230 } }
				if = {
					limit = {
						liege = {
							NOR = {
								is_parent_of = event_target:child_of_destiny
								character = event_target:child_of_destiny
							}
						}
					}
					liege = { character_event = { id = HF.230 } }
				}
			}
		}

		ai_chance = {
        	factor = 10
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = marshal_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Child defeats wild beast
	id = HF.229
	desc = HF_229_DESC
	picture = GFX_evt_child_play
	is_triggered_only = yes
	ai = no
	portrait = event_target:marshal_target

	hide_new = yes

	option = {
		name = HF_229_OPTA
		show_portrait = event_target:child_of_destiny
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_229_OPTB
		show_portrait = event_target:child_of_destiny
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Notification - Child is killed by wild beast
	id = HF.230
	desc = HF_230_DESC
	picture = GFX_evt_child_play
	is_triggered_only = yes
	ai = no
	portrait = event_target:marshal_target

	hide_new = yes

	option = {
		name = HF_OPT_MY_CHILD
		show_portrait = event_target:child_of_destiny
		trigger = {
			is_parent_of = FROM
		}
		tooltip = {
			event_target:child_of_destiny = {
				death = {
					death_reason = death_accident_generic_beast
				}
			}
		}
	}
	option = {
		name = HF_OPT_NOT_MY_CHILD
		show_portrait = event_target:child_of_destiny
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		tooltip = {
			event_target:child_of_destiny = {
				death = {
					death_reason = death_accident_generic_beast
				}
			}
		}
	}
}

character_event = { # Player - Choose Destiny, inwards or outwards
	id = HF.231

	desc = {
		trigger = {
			independent = no
		}
		text = HF_231_DESC
    }
	desc = {
		trigger = {
			independent = yes
		}
		text = HF_231_ALT_DESC
    }

	picture = GFX_evt_throne_room
	portrait = event_target:great_warrior_target
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_made_player_choice
		top_liege = {
			save_event_target_as = top_liege_match_target
		}
		if = {
			limit = {
				any_independent_ruler = {
					ai = yes
					is_tributary = no
					is_landed = yes
					independent = yes
					NOT = { is_vassal_or_below = event_target:child_of_destiny }
					realm_size = 25
					event_target:child_of_destiny = {
						NOR = {
							obedient = PREV
							non_interference = PREV
							has_non_aggression_pact_with = PREV
						}
					}
				}
			}
		}
		random_independent_ruler = {
			limit = {
				ai = yes
				is_tributary = no
				is_landed = yes
				independent = yes
				NOT = { is_vassal_or_below = event_target:child_of_destiny }
				realm_size = 25
				event_target:child_of_destiny = {
					NOR = {
						obedient = PREV
						non_interference = PREV
						has_non_aggression_pact_with = PREV
					}
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
			}
			save_event_target_as = target_invasion_character
		}
	}

	option = { # Looking Inwards
		name = HF_231_OPTA

		trigger = {
			independent = no
		}

		custom_tooltip = {
			text = may_found_bloodline_tt
		}

		any_liege = {
			show_scope_change = no
			if = {
				limit = {
					event_target:child_of_destiny = {
						NOT = { higher_tier_than = DUKE }
					}
				}
				any_demesne_title = {
					show_scope_change = no
					limit = {
						higher_tier_than = COUNT
					}
					add_claim = event_target:child_of_destiny
				}
			}
			else = {
				any_demesne_title = {
					show_scope_change = no
					limit = {
						higher_tier_than = DUKE
					}
					add_claim = event_target:child_of_destiny
				}
			}
			add_rival = event_target:child_of_destiny
		}

		capital_scope = {
			show_scope_change = no
			event_target:child_of_destiny = {
			show_scope_change = no
				custom_tooltip = {
					text = army_of_destiny_tt
					hidden_effect = {
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							match_character = event_target:top_liege_match_target
							match_mult = 0.66
							match_min = 1000
							match_max = 10000
							reinforces = yes
							reinforce_rate_multiplier = 0.25
							merge = yes
							attrition = 0.25
							cannot_inherit = yes
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							match_character = event_target:top_liege_match_target
							match_mult = 0.66
							match_min = 1000
							match_max = 10000
							reinforces = yes
							reinforce_rate_multiplier = 0.25
							merge = yes
							attrition = 0.25
							cannot_inherit = yes
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							match_character = event_target:top_liege_match_target
							match_mult = 0.66
							match_min = 1000
							match_max = 10000
							reinforces = yes
							reinforce_rate_multiplier = 0.25
							merge = yes
							attrition = 0.25
							cannot_inherit = yes
						}
						spawn_fleet = {
							province = closest # closest sea zone
							owner = THIS
							cannot_inherit = yes
							troops = {
								galleys = { 150 150 }
							}
						}
					}
				}
			}
		}

		custom_tooltip = {
			text = no_inheritance_troops_tt
		}

		father = { character_event = { id = HF.232 } }
		mother = { character_event = { id = HF.232 } }
		any_liege = {
			limit = {
				NOR = {
					is_parent_of = event_target:child_of_destiny
					character = event_target:child_of_destiny
				}
			}
			character_event = { id = HF.232 }
		}

		ai_chance = {
        	factor = 90
        }
	}
	option = { # Looking outwards
		name = HF_231_OPTB
		show_portrait = event_target:target_invasion_character

		trigger = {
			event_target:target_invasion_character = {
				is_alive = yes
			}
		}

		custom_tooltip = {
			text = may_found_bloodline_tt
		}
		custom_tooltip = {
			text = disinherit_you_tt
			hidden_effect = {
				add_trait = disinherited
			}
		}

		set_character_flag = child_of_destiny_outwards_focus

		capital_scope = {
			show_scope_change = no
			event_target:child_of_destiny = {
				show_scope_change = no
				custom_tooltip = {
					text = army_of_destiny_tt
					hidden_effect = {
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							match_character = event_target:target_invasion_character
							match_mult = 0.66
							match_min = 1000
							match_max = 10000
							reinforces = yes
							reinforce_rate_multiplier = 0.25
							merge = yes
							attrition = 0.25
							cannot_inherit = yes
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							match_character = event_target:target_invasion_character
							match_mult = 0.66
							match_min = 1000
							match_max = 10000
							reinforces = yes
							reinforce_rate_multiplier = 0.25
							merge = yes
							attrition = 0.25
							cannot_inherit = yes
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = THIS
							match_character = event_target:target_invasion_character
							match_mult = 0.66
							match_min = 1000
							match_max = 10000
							reinforces = yes
							reinforce_rate_multiplier = 0.25
							merge = yes
							attrition = 0.25
							cannot_inherit = yes
						}
						spawn_fleet = {
							province = closest # closest sea zone
							owner = THIS
							cannot_inherit = yes
							troops = {
								galleys = { 150 150 }
							}
						}
					}
				}
			}
		}

		custom_tooltip = {
			text = no_inheritance_troops_tt
		}

		event_target:target_invasion_character = {
			show_scope_change = no
			capital_scope = {
				show_scope_change = no
				event_target:child_of_destiny = {
					show_scope_change = no
					unsafe_war = {
						target = PREVPREV
						casus_belli = kingdom_adventure
						thirdparty_title = PREV
						tier = KING
					}
				}
			}
		}

		father = { character_event = { id = HF.233 } }
		mother = { character_event = { id = HF.233 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.233 } }
		}

		ai_chance = {
        	factor = 10
        }
	}
	option = { # Delay
		name = HF_231_OPTC
		clr_character_flag = child_of_destiny_made_player_choice
		ai_chance = {
        	factor = 0
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = target_invasion_character
		clear_event_target = top_liege_match_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Looking Inward
	id = HF.232
	desc = HF_232_DESC
	picture = GFX_evt_throne_room
	is_triggered_only = yes

	hide_new = yes

	option = {
		name = HF_232_OPTA
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = child_claims_realm_tt
		}
		tooltip = {
			event_target:child_of_destiny = {
				show_scope_change = no
				any_liege = {
					show_scope_change = no
					add_rival = event_target:child_of_destiny
				}
			}
		}
	}
	option = {
		name = HF_232_OPTB
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = child_claims_realm_tt
		}
		tooltip = {
			event_target:child_of_destiny = {
				show_scope_change = no
				any_liege = {
					show_scope_change = no
					add_rival = event_target:child_of_destiny
				}
			}
		}
	}
}

character_event = { # Notification - Looking Outward
	id = HF.233
	desc = HF_233_DESC
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_233_OPTA
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = child_adventures_tt
		}
	}
	option = {
		name = HF_233_OPTB
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = child_adventures_tt
		}
	}
}

character_event = { # Overcome Hardship
	id = HF.234
	desc = HF_234_DESC
	picture = GFX_evt_recovery
	is_triggered_only = yes

	hide_new = yes

	immediate = {

	}

	option = {
		name = HF_234_OPTA
		if = {
			limit = {
				trait = stressed
			}
			remove_trait = stressed
		}
		if = {
			limit = {
				trait = depressed
			}
			remove_trait = depressed
		}
	}

	after = { # Back to the journey tombola!
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Gain a Posse
	id = HF.235
	desc = HF_235_DESC
	picture = GFX_evt_child_talking
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		set_character_flag = child_of_destiny_posse
		top_liege = {
			random_realm_character = {
				limit = {
					age = 10
					is_adult = no
					ai = yes
					same_sex = event_target:child_of_destiny
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_friend = event_target:child_of_destiny
					}
				}
				save_event_target_as = posse_1
			}
			random_realm_character = {
				limit = {
					age = 10
					is_adult = no
					ai = yes
					same_sex = event_target:child_of_destiny
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_friend = event_target:child_of_destiny
					}
					NOT = { character = event_target:posse_1 }
				}
				save_event_target_as = posse_2
			}
			random_realm_character = {
				limit = {
					age = 10
					is_adult = no
					ai = yes
					same_sex = event_target:child_of_destiny
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_friend = event_target:child_of_destiny
					}
					NOT = { character = event_target:posse_1 }
					NOT = { character = event_target:posse_2 }
				}
				save_event_target_as = posse_3
			}
		}
	}

	option = { # They shall praise my name!
		name = HF_235_OPTA

		add_character_modifier = {
			modifier = charismatic_leader
			duration = -1
		}

		add_trait = proud

		event_target:posse_1 = {
			show_scope_change = no
			add_friend = event_target:child_of_destiny
			opinion = {
				modifier = opinion_loyal_servant
				who = event_target:child_of_destiny
				years = 100
			}
		}
		event_target:posse_2 = {
			show_scope_change = no
			add_friend = event_target:child_of_destiny
			opinion = {
				modifier = opinion_loyal_servant
				who = event_target:child_of_destiny
				years = 100
			}
		}
		event_target:posse_3 = {
			show_scope_change = no
			add_friend = event_target:child_of_destiny
			opinion = {
				modifier = opinion_loyal_servant
				who = event_target:child_of_destiny
				years = 100
			}
		}

		father = { character_event = { id = HF.236 } }
		mother = { character_event = { id = HF.236 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.236 } }
		}

		ai_chance = {
        	factor = 50
        }
	}
	option = { # They shall die for me!
		name = HF_235_OPTB

		add_character_modifier = {
			modifier = ruthless_commander
			duration = -1
		}

		add_trait = cruel

		event_target:posse_1 = {
			show_scope_change = no
			add_friend = event_target:child_of_destiny
			opinion = {
				modifier = opinion_loyal_servant
				who = event_target:child_of_destiny
				years = 100
			}
		}
		event_target:posse_2 = {
			show_scope_change = no
			add_friend = event_target:child_of_destiny
			opinion = {
				modifier = opinion_loyal_servant
				who = event_target:child_of_destiny
				years = 100
			}
		}
		event_target:posse_3 = {
			show_scope_change = no
			add_friend = event_target:child_of_destiny
			opinion = {
				modifier = opinion_loyal_servant
				who = event_target:child_of_destiny
				years = 100
			}
		}

		father = { character_event = { id = HF.236 } }
		mother = { character_event = { id = HF.236 } }
		liege = {
			if = {
				limit = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
				character_event = { id = HF.236 }
			}
		}

		ai_chance = {
        	factor = 50
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = posse_1
		clear_event_target = posse_2
		clear_event_target = posse_3
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Gain a Posse
	id = HF.236
	desc = HF_236_DESC
	picture = GFX_evt_child_talking
	is_triggered_only = yes
	ai = no

	hide_new = yes

	option = {
		name = HF_236_OPTA
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_236_OPTB
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Escape from Prison
	id = HF.237
	desc = HF_237_DESC
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes

	portrait = event_target:jailer_target

	hide_new = yes

	trigger = {
		prisoner = yes
	}

	immediate = {
		host = {
			save_event_target_as = jailer_target
			random_realm_character = {
				limit = {
					is_ruler = no
					is_adult = yes
					NOR = {
						is_inaccessible_or_incapable_trigger = yes
						is_rival = event_target:child_of_destiny
						is_married = yes
						is_consort = yes
					}
				}
				preferred_limit = {
					is_rival = event_target:jailer_target
					NOR = {
						dynasty = event_target:jailer_target
						is_friend = event_target:jailer_target
						liege = { ai = yes }
					}
				}
				preferred_limit = {
					NOR = {
						dynasty = event_target:jailer_target
						is_friend = event_target:jailer_target
						liege = { ai = yes }
					}
				}
				preferred_limit = {
					is_rival = event_target:jailer_target
					NOR = {
						dynasty = event_target:jailer_target
						is_friend = event_target:jailer_target
					}
				}
				preferred_limit = {
					NOR = {
						dynasty = event_target:jailer_target
						is_friend = event_target:jailer_target
					}
				}
				save_event_target_as = savior_target
			}
		}
	}

	option = { # Escape!
		name = HF_237_OPTA

		show_portrait = event_target:savior_target
		prisoner = no
		add_friend = event_target:savior_target
		if = {
			limit = {
				event_target:child_of_destiny = {
					is_landed = yes
				}
			}
			event_target:savior_target = {
				show_scope_change = no
				move_character = event_target:child_of_destiny
			}
		}

		event_target:jailer_target = {
			character_event = { id = HF.238 }
		}
		if = {
			limit = {
				father = {
					NOT = {
						character = event_target:jailer_target
					}
				}
			}
			father = { character_event = { id = HF.239 } }
		}
		if = {
			limit = {
				mother = {
					NOT = {
						character = event_target:jailer_target
					}
				}
			}
			mother = { character_event = { id = HF.239 } }
		}
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
						character = event_target:jailer_target
					}
				}
			}
			liege = { character_event = { id = HF.236 } }
		}
	}
	option = { # I will bide my time.
		name = HF_237_OPTB

		ai_chance = {
        	factor = 0
        }
	}
	after = { # Back to the journey tombola!
		clear_event_target = jailer_target
		clear_event_target = savior_target
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Jailer gets to know of escape
	id = HF.238
	desc = HF_238_DESC
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes
	ai = no
	portrait = event_target:child_of_destiny

	hide_new = yes

	option = {
		name = HF_238_OPTA
		show_portrait = event_target:savior_target
		tooltip = {
			event_target:child_of_destiny = {
				show_scope_change = no
				prisoner = no
			}
		}
	}
}

character_event = { # Notification - Child Escapes Prison
	id = HF.239
	desc = HF_239_DESC
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes
	ai = no
	portrait = event_target:child_of_destiny

	hide_new = yes

	option = {
		name = HF_239_OPTA
		show_portrait = event_target:savior_target
		tooltip = {
			event_target:child_of_destiny = {
				show_scope_change = no
				prisoner = no
			}
		}
	}
}

character_event = { # Gain a friend
	id = HF.240
	desc = HF_240_DESC
	picture = GFX_evt_courtiers_talking
	is_triggered_only = yes

	hide_new = yes

	immediate = {
		if = {
			limit = {
				top_liege = {
					any_realm_character = {
						count = 3
						is_adult = yes
						ai = yes
						NOR = {
							event_target:child_of_destiny = {
								any_liege = {
									character = PREVPREV
								}
							}
							is_inaccessible_or_incapable_trigger = yes
							family = event_target:child_of_destiny
							is_rival = event_target:child_of_destiny
							is_lover = event_target:child_of_destiny
							is_friend = event_target:child_of_destiny
							character = event_target:child_of_destiny
						}
					}
				}
			}
			top_liege = {
				random_realm_character = { # A Powerful Ruler
					limit = {
						is_adult = yes
						ai = yes
						NOR = {
							event_target:child_of_destiny = {
								any_liege = {
									character = PREVPREV
								}
							}
							is_inaccessible_or_incapable_trigger = yes
							family = event_target:child_of_destiny
							is_rival = event_target:child_of_destiny
							is_lover = event_target:child_of_destiny
							is_friend = event_target:child_of_destiny
							character = event_target:child_of_destiny
						}
					}
					preferred_limit = {
						higher_real_tier_than = DUKE
					}
					preferred_limit = {
						higher_real_tier_than = COUNT
					}
					preferred_limit = {
						is_landed = yes
					}
					save_event_target_as = friend_target_1
				}
				random_realm_character = { # Someone who can help me further my goals
					limit = {
						is_adult = yes
						ai = yes
						NOR = {
							event_target:child_of_destiny = {
								any_liege = {
									character = PREVPREV
								}
							}
							is_inaccessible_or_incapable_trigger = yes
							family = event_target:child_of_destiny
							is_rival = event_target:child_of_destiny
							is_lover = event_target:child_of_destiny
							is_friend = event_target:child_of_destiny
							character = event_target:child_of_destiny
							character = event_target:friend_target_1
						}
					}
					preferred_limit = {
						has_job_title = job_spymaster
						liege = {
							event_target:child_of_destiny = {
								liege = {
									character = PREVPREV
								}
							}
						}
					}
					preferred_limit = {
						has_job_title = job_spymaster
						liege = {
							event_target:child_of_destiny = {
								any_liege = {
									character = PREVPREV
								}
							}
						}
					}
					preferred_limit = {
						has_job_title = job_spymaster
						liege = {
							character = event_target:child_of_destiny
						}
					}
					save_event_target_as = friend_target_2
				}

				random_realm_character = { # A competent character
					limit = {
						is_adult = yes
						ai = yes
						NOR = {
							event_target:child_of_destiny = {
								any_liege = {
									character = PREVPREV
								}
							}
							is_inaccessible_or_incapable_trigger = yes
							family = event_target:child_of_destiny
							is_rival = event_target:child_of_destiny
							is_lover = event_target:child_of_destiny
							is_friend = event_target:child_of_destiny
							character = event_target:child_of_destiny
							character = event_target:friend_target_1
							character = event_target:friend_target_2
						}
					}
					preferred_limit = {
						is_landed = no
						is_patrician = no
						martial = 12
						diplomacy = 12
						learning = 12
						intrigue = 12
						stewardship = 12
					}
					preferred_limit = {
						is_landed = no
						is_patrician = no
						calc_true_if = {
							amount = 4
							martial = 12
							diplomacy = 12
							learning = 12
							intrigue = 12
							stewardship = 12
						}
					}
					preferred_limit = {
						is_landed = no
						is_patrician = no
						calc_true_if = {
							amount = 3
							martial = 12
							diplomacy = 12
							learning = 12
							intrigue = 12
							stewardship = 12
						}
					}
					preferred_limit = {
						martial = 12
						diplomacy = 12
						learning = 12
						intrigue = 12
						stewardship = 12
					}
					preferred_limit = {
						calc_true_if = {
							amount = 4
							martial = 12
							diplomacy = 12
							learning = 12
							intrigue = 12
							stewardship = 12
						}
					}
					preferred_limit = {
						calc_true_if = {
							amount = 3
							martial = 12
							diplomacy = 12
							learning = 12
							intrigue = 12
							stewardship = 12
						}
					}
					save_event_target_as = friend_target_3
				}
			}
		}
	}

	option = {
		name = HF_240_OPTA
		trigger = {
			event_target:friend_target_1 = {
				OR = {
					is_landed = yes
					is_playable = yes
				}
			}
		}
		show_portrait = event_target:friend_target_1
		add_friend = event_target:friend_target_1
	}
	option = {
		name = HF_240_OPTB
		show_portrait = event_target:friend_target_2
		add_friend = event_target:friend_target_2
		event_target:friend_target_2 = {
			if = {
				limit = {
					is_landed = no
					is_patrician = no
					is_playable = no
					NOT = {
						liege = {
							character = event_target:child_of_destiny
						}
					}
				}
				move_character = event_target:child_of_destiny
			}
		}
	}
	option = {
		name = HF_240_OPTC
		show_portrait = event_target:friend_target_3
		add_friend = event_target:friend_target_3
		event_target:friend_target_3 = {
			if = {
				limit = {
					is_landed = no
					is_patrician = no
					is_playable = no
					NOT = {
						liege = {
							character = event_target:child_of_destiny
						}
					}
				}
				move_character = event_target:child_of_destiny
			}
		}
	}

	option = {
		name = HF_240_OPTD

		ai_chance = {
        	factor = 0
        }
	}

	after = { # Back to the journey tombola!
		clear_event_target = friend_target_1
		clear_event_target = friend_target_2
		clear_event_target = friend_target_3
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Child of Destiny launches Adventure
	id = HF.290
	hide_window = yes
	is_triggered_only = yes

	hide_new = yes

	trigger = {
		has_character_flag = is_child_of_destiny
	}

	immediate = {
		set_character_flag = child_of_destiny_adventure
		save_event_target_as = child_of_destiny
		random_independent_ruler = {
			limit = {
				ai = yes
				is_tributary = no
				is_landed = yes
				independent = yes
				NOT = { is_vassal_or_below = event_target:child_of_destiny }
				realm_size = 25
				event_target:child_of_destiny = {
					NOR = {
						obedient = PREV
						non_interference = PREV
						has_non_aggression_pact_with = PREV
						top_liege = {
							distance_from_realm = { who = PREVPREV value = 1200 }
						}
					}
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 1000 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 1000 }
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 150 }
				NOT = {
					distance_from_realm = { who = PREV value = 1100 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 150 }
				NOT = {
					distance_from_realm = { who = PREV value = 1100 }
				}
				is_nomadic = no
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 800 }
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 1000 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 200 }
				NOT = {
					distance_from_realm = { who = PREV value = 1000 }
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 150 }
				NOT = {
					distance_from_realm = { who = PREV value = 1100 }
				}
				NOT = {
					any_player = {
						same_realm = PREV
					}
				}
			}
			preferred_limit = {
				distance_from_realm = { who = PREV value = 150 }
				NOT = {
					distance_from_realm = { who = PREV value = 1100 }
				}
			}
			save_event_target_as = target_character
		}
		if = {
			limit = {
				is_landed = yes
				independent = no
			}
			liege = { save_event_target_as = liege_title_target }
			any_demesne_title = {
				grant_title = event_target:liege_title_target
			}
			any_vassal = {
				set_defacto_liege = event_target:liege_title_target
			}
		}
		else_if = {
			limit = {
				is_landed = yes
				independent = yes
			}
			emf_willfully_abdicate = yes
		}
		liege = {
			capital_scope = {
				event_target:target_character = {
					random_realm_province = {
						event_target:child_of_destiny = {
							set_defacto_liege = event_target:child_of_destiny
							create_title = {
								tier = DUKE
								landless = yes
								temporary = yes
								adventurer = yes
								culture = event_target:child_of_destiny
								name = "CLAIMANT_ADVENTURE"
								holder = event_target:child_of_destiny
							}

							set_character_flag = duchy_adventurer

							spawn_unit = {
								province = PREVPREVPREV
								home = PREVPREVPREV
								owner = THIS
								match_character = PREVPREV
								match_mult = 0.66
								match_min = 1000
								match_max = 10000
								reinforces = yes
								reinforce_rate_multiplier = 0.25
								merge = yes
								attrition = 0.25
								cannot_inherit = yes
							}
							spawn_unit = {
								province = PREVPREVPREV
								home = PREVPREVPREV
								owner = THIS
								match_character = PREVPREV
								match_mult = 0.66
								match_min = 1000
								match_max = 10000
								reinforces = yes
								reinforce_rate_multiplier = 0.25
								merge = yes
								attrition = 0.25
								cannot_inherit = yes
							}
							spawn_unit = {
								province = PREVPREVPREV
								home = PREVPREVPREV
								owner = THIS
								match_character = PREVPREV
								match_mult = 0.66
								match_min = 1000
								match_max = 10000
								reinforces = yes
								reinforce_rate_multiplier = 0.25
								merge = yes
								attrition = 0.25
								cannot_inherit = yes
							}
							spawn_fleet = {
								province = closest # closest sea zone
								owner = THIS
								cannot_inherit = yes
								troops =
								{
									galleys = { 150 150 }
								}
							}
							unsafe_war = {
								target = PREVPREV
								casus_belli = kingdom_adventure
								thirdparty_title = PREV
								tier = KING
							}
						}
					}
				}
			}
		}

		if = { # If the war starts
			limit = {
				any_war = {
					using_cb = kingdom_adventure
				}
			}
			# Create some fantastic commander characters
			spawn_fantastic_commander_effect = yes
			spawn_fantastic_commander_effect = yes
			spawn_fantastic_commander_effect = yes

			add_trait = disinherited

			# Notify Parents
			father = { character_event = { id = HF.291 } }
			mother = { character_event = { id = HF.291 } }
			if = {
				limit = {
					liege = {
						NOR = {
							is_parent_of = event_target:child_of_destiny
							character = event_target:child_of_destiny
						}
					}
				}
				liege = { character_event = { id = HF.291 } }
			}
		}
		else_if = { # If the entire thing somehow fails, remove the flag and try again
			limit = {
				NOT = {
					any_war = {
						using_cb = kingdom_adventure
					}
				}
			}
			clr_character_flag = child_of_destiny_adventure
		}
	}

	after = { # Back to the journey tombola!
		child_of_destiny_journey_resume_effect = yes
	}
}

character_event = { # Notification - Launched Adventure
	id = HF.291
	desc = HF_291_DESC
	picture = GFX_evt_large_army
	is_triggered_only = yes
	ai = no
	portrait = event_target:child_of_destiny

	hide_new = yes

	option = {
		name = HF_291_OPTA
		show_portrait = event_target:target_character
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = disinherit_tt
		}
	}
	option = {
		name = HF_291_OPTB
		show_portrait = event_target:target_character
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = disinherit_tt
		}
	}
}

character_event = { # Child of Destiny reaches adulthood
	id = HF.300
	desc = HF_300_DESC
	picture = GFX_evt_throne_room
	is_triggered_only = yes

	trigger = {
		has_character_flag = is_child_of_destiny
	}

	immediate = {
		save_event_target_as = child_of_destiny
		remove_education_effect = yes
	}

	option = {
		name = HF_300_OPTA
		add_trait = brilliant_strategist
		add_trait = ambitious
		prestige = 500

		# Notify Parents
		father = { character_event = { id = HF.301 } }
		mother = { character_event = { id = HF.301 } }
		if = {
			limit = {
				liege = {
					NOR = {
						is_parent_of = event_target:child_of_destiny
						character = event_target:child_of_destiny
					}
				}
			}
			liege = { character_event = { id = HF.301 } }
		}
	}

}

character_event = { # Notification - Reached Adulthood
	id = HF.301
	desc = HF_301_DESC
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	ai = no
	portrait = event_target:child_of_destiny

	hide_new = yes

	option = {
		name = HF_301_OPTA
		show_portrait = event_target:target_character
		trigger = {
			is_parent_of = FROM
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
	option = {
		name = HF_301_OPTB
		show_portrait = event_target:target_character
		trigger = {
			NOT = {
				is_parent_of = FROM
			}
		}
		custom_tooltip = {
			text = childs_power_increases_tt
		}
	}
}

character_event = { # Child of Destiny gets extra stats
	id = HF.302
	hide_window = yes
	is_triggered_only = yes

	has_character_flag = is_child_of_destiny
	max_age = 16

	immediate = {
		random_list = {
			10 = {
				change_learning = 2
			}
			10 = {
				change_martial = 2
			}
			10 = {
				change_diplomacy = 2
			}
			10 = {
				change_intrigue = 2
			}
			10 = {
				change_stewardship = 2
			}
			10 = {
				change_learning = 1
			}
			10 = {
				change_martial = 1
			}
			10 = {
				change_diplomacy = 1
			}
			10 = {
				change_intrigue = 1
			}
			10 = {
				change_stewardship = 1
			}
		}
	}
}

character_event = { # Child of Destiny can choose to adopt culture/religion of newly conquered land.
	id = HF.303
	desc = HF_303_DESC
	picture = GFX_evt_emissary
	is_triggered_only = yes
	hide_new = yes
	hide_from = yes

	trigger = {
		capital_scope = {
			OR = {
				NOT = { religion = ROOT }
				NOT = { culture = ROOT }
			}
		}
	}

	option = { # Adopt culture and religion
		name = HF_303_OPTA
		trigger = {
			emf_can_convert_religion = yes
			capital_scope = {
				NOT = { religion = ROOT }
				NOT = { culture = ROOT }
			}
		}
		custom_tooltip = {
			text = adopt_culture_and_religion_tt
		}
		hidden_effect = {
			capital_scope = {
				reverse_culture = ROOT
				save_event_target_as = target_religion
			}
			emf_character_set_religion_to_target_religion = yes
			any_child = {
				limit = {
					is_ruler = no
					ai = yes
				}
				culture = ROOT
				if = {
					limit = { emf_can_convert_religion = yes }
					emf_character_set_religion_to_target_religion = yes
				}
			}
			any_courtier = {
				limit = {
					is_ruler = no
					ai = yes
				}
				culture = ROOT
				if = {
					limit = { emf_can_convert_religion = yes }
					emf_character_set_religion_to_target_religion = yes
				}
			}
		}
		ai_chance = {
        	factor = 50
			modifier = {
				factor = 0
				has_character_flag = ai_flag_refuse_conversion
			}
        }
	}
	option = { # Adopt Culture
		name = HF_303_OPTB
		trigger = {
			capital_scope = {
				NOT = { culture = ROOT }
			}
		}
		custom_tooltip = {
			text = adopt_culture_tt
		}
		hidden_effect = {
			capital_scope = {
				reverse_culture = ROOT
			}
			any_child = {
				limit = {
					is_ruler = no
					ai = yes
				}
				culture = ROOT
			}
			any_courtier = {
				limit = {
					is_ruler = no
					ai = yes
				}
				culture = ROOT
			}
		}
		ai_chance = {
        	factor = 40
        }
	}
	option = { # Adopt Religion
		name = HF_303_OPTC
		trigger = {
			emf_can_convert_religion = yes
			capital_scope = {
				NOT = { religion = ROOT }
			}
		}
		custom_tooltip = {
			text = adopt_religion_tt
		}
		hidden_effect = {
			capital_scope = {
				save_event_target_as = target_religion
			}
			emf_character_set_religion_to_target_religion = yes
			any_child = {
				limit = {
					is_ruler = no
					ai = yes
					emf_can_convert_religion = yes
				}
				emf_character_set_religion_to_target_religion = yes
			}
			any_courtier = {
				limit = {
					is_ruler = no
					ai = yes
					emf_can_convert_religion = yes
				}
				emf_character_set_religion_to_target_religion = yes
			}
		}
		ai_chance = {
        	factor = 10
			modifier = {
				factor = 0
				has_character_flag = ai_flag_refuse_conversion
			}
        }
	}
	option = { # Stay the same
		name = HF_303_OPTD
		ai_chance = {
        	factor = 0
        }
	}
}

character_event = { # Child of Destiny gains bloodline
	id = HF.304
	desc = HF_304_DESC
	picture = GFX_evt_throne_room
	is_triggered_only = yes

	trigger = {
		independent = yes
		has_character_flag = is_child_of_destiny
		higher_real_tier_than = DUKE
		NOT = {
			any_owned_bloodline = {
				has_bloodline_flag = bloodline_ambition
			}
		}
	}

	immediate = {
		save_event_target_as = child_of_destiny
		set_global_flag = child_of_destiny_founded_bloodline_@ROOT
		change_variable = { which = global_children_of_destiny_bloodlines_founded value = 1 }
	}

	option = {
		name = HF_304_OPTA
		if = {
			limit = {
				is_female = yes
			}
			create_bloodline = {
				type = child_of_destiny_female
			}
			new_bloodline = {
				set_description = "bloodline_desc_child_of_destiny"
			}
		}
		if = {
			limit = {
				is_female = no
			}
			create_bloodline = {
				type = child_of_destiny_male
			}
			new_bloodline = {
				set_description = "bloodline_desc_child_of_destiny"
			}
		}
		if = {
			limit = {
				NOR = {
					this_has_cool_nickname_trigger = yes
					this_has_super_cool_nickname_trigger = yes
				}
			}
			give_nickname = nick_the_great
		}
		prestige = 1000
		custom_tooltip = {
			text = invasions_limited_lifetime_tt
		}
		hidden_effect = {
			if = {
				limit = {
					has_character_flag = child_of_destiny_outwards_focus
				}
				any_player = {
					narrative_event = { id = HF.305 }
				}
			}
		}
	}
}

narrative_event = {
	id = HF.305
	title = HF_305_TIT
	desc = HF_305_DESC
	picture = GFX_evt_spymaster
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes
	portrait = event_target:child_of_destiny

	trigger = {
		NOT = {
			has_character_flag = is_child_of_destiny
		}
	}

	option = {
		name = HF_305_OPTA
	}
}

character_event = {
	id = HF.306
	desc = HF_306_DESC
	picture = GFX_evt_comet

	is_triggered_only = yes
	portrait = event_target:child_of_destiny

	option = {
		name = HF_306_OPTA
		custom_tooltip = {
			text = journey_begins_tt
		}
	}
}

character_event = { # Debug event
	id = HF.307
	desc = HF_307_DESC
	picture = GFX_evt_comet

	is_triggered_only = yes
	portrait = event_target:child_of_destiny

	option = {
		name = HF_307_OPTA
	}
}
