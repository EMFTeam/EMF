# -*- ck2.events -*-

namespace = emf_lucky

# Invoked from decision menu
#
# Will eventually need to split this into two stages:
# 1. selection of distribution
# 2. actually employing distribution
#
# This is because the random rulers must be picked immediately by the event
# so that the shown tooltip does not include duplicates that would cause actual
# execution to select different rulers than those listed. [This happened to
# me several times.]
character_event = {
	id = emf_lucky.0
	desc = emf_lucky.0.desc
	picture = GFX_evt_bloody_man
	is_triggered_only = yes
	
	hide_from = yes
	
	immediate = {
		# Choose 8 rulers based on title level, playable only
		# Kings: 2
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = KING
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_king
				}
			}
			set_character_flag = lucky_king
		}
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = KING
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_king
				}
			}
			set_character_flag = lucky_king
		}
		# Dukes: 4
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = DUKE
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_duke
				}
			}
			set_character_flag = lucky_duke
		}
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = DUKE
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_duke
				}
			}
			set_character_flag = lucky_duke
		}
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = DUKE
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_duke
				}
			}
			set_character_flag = lucky_duke
		}
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = DUKE
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_duke
				}
			}
			set_character_flag = lucky_duke
		}
		# Counts: 2
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = COUNT
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_count
				}
			}
			set_character_flag = lucky_count
		}
		random_playable_ruler = {
			limit = {
				ai = yes
				tier = COUNT
				NOT = {
					any_spouse = { ai = no }
					any_child = { ai = no }
					current_heir = { ai = no }
					is_theocracy = yes
					trait = lucky_ruler
					has_character_flag = lucky_count
				}
			}
			set_character_flag = lucky_count
		}
	}
	
	option = { # Random rulers
		name = emf_lucky.0.a
		
		custom_tooltip = { text = emf_ctt_lucky_king }
		any_playable_ruler = {
			limit = { has_character_flag = lucky_king }
			character_event = { id = emf_lucky.1 tooltip = emf_lucky.1.tt }
			clr_character_flag = lucky_king
		}
		
		custom_tooltip = { text = emf_ctt_lucky_duke }
		any_playable_ruler = {
			limit = { has_character_flag = lucky_duke }
			character_event = { id = emf_lucky.1 tooltip = emf_lucky.1.tt }
			clr_character_flag = lucky_duke
		}
		
		custom_tooltip = { text = emf_ctt_lucky_count }
		any_playable_ruler = {
			limit = { has_character_flag = lucky_count }
			character_event = { id = emf_lucky.1 tooltip = emf_lucky.1.tt }
			clr_character_flag = lucky_count
		}
	}
	option = { # I changed my mind
		name = emf_lucky.0.d

		any_playable_ruler = {
			clr_character_flag = lucky_king
			clr_character_flag = lucky_duke
			clr_character_flag = lucky_count
		}
	}
}

# Event to hand out trait and modifier
character_event = {
	id = emf_lucky.1
	desc = AI_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		add_trait = lucky_ruler
		add_character_modifier = {
			name = emf_mod_lucky_ruler
			duration = -1
			hidden = yes
		}
	}
	option = { name = OK }
}

# Triggered on_death
# Eventually this will require a global flag in the trigger
# That's so we can make room for the historical version which will work by maintenance event based on titles
character_event = {
	id = emf_lucky.2
	desc = AI_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	only_playable = yes
	
	trigger = {
		ai = yes
		trait = lucky_ruler
	}
	
	immediate = {
		current_heir = { # Hand off to heir if conditions are met
			if = {
				limit = {
					ai = yes
					NOT = {
						any_spouse = { ai = no }
					}
				}
				character_event = { id = emf_lucky.1 }
			}
		}
		if = { # If not, give to a random independent ruler of same tier
			limit = {
				NOT = {
					current_heir = {
						ai = yes
						NOT = {
							any_spouse = { ai = no }
						}
					}
				}
				any_playable_ruler = {
					ai = yes
					tier = ROOT
					independent = yes
					NOT = {
						any_spouse = { ai = no }
						any_child = { ai = no }
						current_heir = { ai = no }
						is_theocracy = yes
						trait = lucky_ruler
					}
				}
			}
			random_playable_ruler = {
				limit = {
					ai = yes
					tier = ROOT
					independent = yes
					NOT = {
						any_spouse = { ai = no }
						any_child = { ai = no }
						current_heir = { ai = no }
						is_theocracy = yes
						trait = lucky_ruler
					}
				}
				character_event = { id = emf_lucky.1 }
			}
		}
	}
	
	option = { name = OK }
}
