namespace = duel_output

######################
# Duel Engine Output #
######################
# Galle (Gregory Hayes)
######################
# Updated/extended by 'jordarkelf'
######################
# duel_output.1	Collect your output from the duel engine.

character_event = {
	id = duel_output.1
	desc = "EVTDESCDUELOUTPUT1"
	picture = GFX_evt_duel0
	
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTADUELOUTPUT1"
		
		########################
		# Example Output Block #
		########################
		if = {
			##########################
			# Find your context flags
			limit = {
				has_character_flag = flag_battlefield_duel
				has_character_flag = flag_killed_opponent
			}
			##########################
			# Call the next event in your event chain
			# FROM will be Winner scope
			# FROMFROM will be Loser scope
			character_event = { id = duel_be.100 tooltip = "EVTTOOLTIP5556100" }
			##########################
			# CLEAR YOUR CONTEXT FLAGS
			clr_character_flag = flag_battlefield_duel
			FROM = { clr_character_flag = flag_battlefield_duel }
			FROMFROM = { clr_character_flag = flag_battlefield_duel }
			###########################
		}
		if = {
			###########################
			# If a kill versus a yield would be important,
			# handle them in seperate blocks.
			limit = {
				has_character_flag = flag_battlefield_duel
				OR = {
					has_character_flag = flag_spared_opponent
					has_character_flag = flag_wounded_opponent #Todo
					has_character_flag = flag_maimed_opponent #Todo
				}
			}
			character_event = { id = duel_be.101 tooltip = "EVTTOOLTIP5556101" }
			clr_character_flag = flag_battlefield_duel
			FROM = { clr_character_flag = flag_battlefield_duel }
			FROMFROM = { clr_character_flag = flag_battlefield_duel }
			############################
		}
		# End of Example Block
		#############################
		
		#################################################
		# Feast duel feast_events.txt starts with 72030 #
		#################################################
		#Hacky: copy results back to forms expected in series, in the future maybe separate events
		if = {
			limit = {
				has_character_flag = feast_dueller
				has_character_flag = flag_killed_opponent
			}
			set_character_flag = killed_opponent
		}
		if = {
			limit = {
				has_character_flag = feast_dueller
				has_character_flag = flag_wounded_opponent
			}
			set_character_flag = wounded_opponent
		}
		if = {
			limit = {
				has_character_flag = feast_dueller
				has_character_flag = flag_maimed_opponent
			}
			set_character_flag = maimed_opponent
		}
		#Hacky stuff done
		if = {
			limit = {
				has_character_flag = feast_dueller
				has_character_flag = flag_spared_opponent
			}
			character_event = { id = dueling.1 } #Nothing happened
			clr_character_flag = feast_dueller
			FROM = { clr_character_flag = feast_dueller }
			FROMFROM = { clr_character_flag = feast_dueller }
		}
		if = {
			limit = {
				has_character_flag = feast_dueller
				OR = {
					has_character_flag = flag_killed_opponent
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
				}
			}
			character_event = { id = dueling.2 } #feast_events.txt
			clr_character_flag = feast_dueller
			FROM = { clr_character_flag = feast_dueller }
			FROMFROM = { clr_character_flag = feast_dueller }
		}
		# End of feast_events block
		#############################
		
		############################################################
		# Rivals duel friends_rivals_events.txt starts with 100410 #
		############################################################
		if = {
			limit = {
				has_character_flag = duel_rival
				has_character_flag = flag_spared_opponent
			}
			character_event = { id = dueling.3 } #Nothing happened
			clr_character_flag = duel_rival
			FROM = { clr_character_flag = duel_rival }
			FROMFROM = { clr_character_flag = duel_rival }
		}
		if = {
			limit = {
				has_character_flag = duel_rival
				OR = {
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
					has_character_flag = flag_killed_opponent
				}
			}
			character_event = { id = dueling.4 } #Killed, wounded, or maimed rival
			clr_character_flag = duel_rival
			FROM = { clr_character_flag = duel_rival }
			FROMFROM = { clr_character_flag = duel_rival }
		}
		# End of friends_rivals_events block
		#############################
		
		###################################################################################
		# Rivals duel: cheated at tournament friends_rivals_events.txt starts with 100420 #
		###################################################################################
		if = {
			limit = {
				OR = {
					has_character_flag = tournament_cheater_duel_accuser
					has_character_flag = tournament_cheater_duel_accused
				}
				has_character_flag = flag_spared_opponent
			}
			character_event = { id = dueling.8 } #No wound etc. = clean win for accused
			clr_character_flag = duel_rival
			FROM = { clr_character_flag = duel_rival }
			FROMFROM = { clr_character_flag = duel_rival }
		}
		if = {
			limit = {
				OR = {
					has_character_flag = tournament_cheater_duel_accuser
					has_character_flag = tournament_cheater_duel_accused
				}
				OR = {
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
					has_character_flag = flag_killed_opponent
				}
			}
			character_event = { id = dueling.13 } #Killed, wounded, or maimed rival
			clr_character_flag = duel_rival
			#winner's flags used to give proper flavour text so not cleared here
			FROMFROM = { clr_character_flag = tournament_cheater_duel_accuser }
			FROMFROM = { clr_character_flag = tournament_cheater_duel_accused }
		}
		# End of friends_rivals_events block
		#############################
				
		#####################################################
		# Regency duel regency_events.txt starts with 61215 #
		#####################################################
		if = {
			limit = {
				has_character_flag = duelist_courtier
				OR = {
					has_character_flag = flag_spared_opponent
					has_character_flag = flag_wounded_opponent
				}
			}
			character_event = { id = dueling.3 } #Nothing happened or just wounded
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = duelist_courtier }
			FROMFROM = { clr_character_flag = duelist_courtier }
		}
		if = {
			limit = {
				has_character_flag = duelist_courtier
				has_character_flag = flag_maimed_opponent
			}
			character_event = { id = dueling.6 } #Maimed
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = duelist_courtier }
			FROMFROM = { clr_character_flag = duelist_courtier }
		}
		if = {
			limit = {
				has_character_flag = duelist_courtier
				has_character_flag = flag_killed_opponent
			}
			character_event = { id = dueling.7 } #Killed
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = duelist_courtier }
			FROMFROM = { clr_character_flag = duelist_courtier }
		}
		# End of regency_events block
		#############################
		
		#########################
		# Tournament rival duel #
		#########################
		if = {
			limit = {
				OR = {
					has_character_flag = tourny_duel_defender
					has_character_flag = tourny_duel_agressor
				}
				has_character_flag = flag_spared_opponent
			}
			character_event = { id = joust.20 } #Draw
		}
		if = {
			limit = {
				has_character_flag = duel_rival
				OR = {
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
					has_character_flag = flag_killed_opponent
				}
			}
			character_event = { id = joust.21 } #Killed, wounded, or maimed rival
		}
		# Flags for this are cleared in the followup events since I use them to track of agressor/defender
		# End of Tournament rival duel block
		####################################
		
		##########################
		# Generic duel victory forwarder for combat trait advancement in cta.10 (PB_cta.txt)
		#
		# Bounce the loser scope into FROM via cta.11 so that cta.10's potential child events
		# will have access to the loser in the FROMFROM scope like duel_output's children.
		
		FROM = { character_event = { id = cta.11 } }
		
		
		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = flag_duel_tourney
		FROM = { clr_character_flag = flag_duel_tourney }
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		FROM = { clr_character_flag = flag_killed_opponent }
		clr_character_flag = flag_wounded_opponent
		FROM = { clr_character_flag = flag_wounded_opponent }
		clr_character_flag = flag_maimed_opponent
		FROM = { clr_character_flag = flag_maimed_opponent }
		clr_character_flag = flag_spared_opponent
		FROM = { clr_character_flag = flag_spared_opponent }
	}
}

# duel_output.2	Collect your output from the duel engine - Tourny joust flavour

character_event = {
	id = duel_output.2
	desc = "EVTDESCDUELOUTPUT2"
	picture = GFX_evt_joust
	
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTADUELOUTPUT1"
				
		#####################
		# Tournament Jousts #
		#####################
		if = {
			limit = {
				has_character_flag = tournament_jouster
				has_character_flag = flag_spared_opponent
			}
			character_event = { id = joust.10 } #Clean win
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = tournament_jouster }
			FROMFROM = { clr_character_flag = tournament_jouster }
		}
		if = {
			limit = {
				has_character_flag = tournament_jouster
				has_character_flag = flag_wounded_opponent
			}
			character_event = { id = joust.11 } #Wounded loser
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = tournament_jouster }
			FROMFROM = { clr_character_flag = tournament_jouster }
		}
		if = {
			limit = {
				has_character_flag = tournament_jouster
				has_character_flag = flag_maimed_opponent
			}
			character_event = { id = joust.12 } #Maimed loser
			clr_character_flag = tournament_jouster
			FROM = { clr_character_flag = tournament_jouster }
			FROMFROM = { clr_character_flag = tournament_jouster }
		}
		if = {
			limit = {
				has_character_flag = tournament_jouster
				has_character_flag = flag_killed_opponent
			}
			character_event = { id = joust.13 } #Killed loser
			clr_character_flag = tournament_jouster
			FROM = { clr_character_flag = tournament_jouster }
			FROMFROM = { clr_character_flag = tournament_jouster }
		}
		# End of tournament jousts block
		################################
		
		##########################
		# Generic duel victory forwarder for combat trait advancement in cta.10 (PB_cta.txt)
		#
		# Bounce the loser scope into FROM via cta.11 so that cta.10's potential child events
		# will have access to the loser in the FROMFROM scope like duel_output's children.
		#
		# Assumption: duel_output.2 is only ever triggered on the winner of a joust,
		#             like duel_output.1, by the loser in the FROM scope (from inspection of
		#             tournament_events.txt / joust.*, that appears to be the case).
		
		FROM = { character_event = { id = cta.11 } }
		
		
		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = flag_duel_tourney
		FROM = { clr_character_flag = flag_duel_tourney }
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		FROM = { clr_character_flag = flag_killed_opponent }
		clr_character_flag = flag_wounded_opponent
		FROM = { clr_character_flag = flag_wounded_opponent }
		clr_character_flag = flag_maimed_opponent
		FROM = { clr_character_flag = flag_maimed_opponent }
		clr_character_flag = flag_spared_opponent
		FROM = { clr_character_flag = flag_spared_opponent }
	}
}


# duel_output.3	Something broke, cancel everything

character_event = {
	id = duel_output.3
	desc = "EVTDESCDUELOUTPUT3"
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	option = {
		name = OK
		
		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = flag_duel_tourney
		FROM = { clr_character_flag = flag_duel_tourney }
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		FROM = { clr_character_flag = flag_killed_opponent }
		clr_character_flag = flag_wounded_opponent
		FROM = { clr_character_flag = flag_wounded_opponent }
		clr_character_flag = flag_maimed_opponent
		FROM = { clr_character_flag = flag_maimed_opponent }
		clr_character_flag = flag_spared_opponent
		FROM = { clr_character_flag = flag_spared_opponent }
	}
}
