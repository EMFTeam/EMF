# -*- ck2.events -*-

###DIPLOMACY EVENTS FOR CHINA OFF-MAP POWER###

#Written by:
#Milla Isaksson
#Joel Hansson
#Mathilda Bjarnehed
#Drikus Kuiper
#Daniel Moore
#Alexander Oltner

namespace = JD

###Chinese guests (the Governor's councilor comes to visit)
character_event = {
    id = JD.20000
    hide_window = yes

    is_triggered_only = yes

    only_capable = yes
    has_dlc = "Jade Dragon"
    prisoner = no
    war = no
    min_age = 16

    trigger = { 
        NOT = { has_character_flag = chinese_governor_councilor_guest }
        NOT = { offmap_china = { governor = { character = ROOT } } } #makes sure it doesn't fire for the governor themselves
        is_inaccessible_trigger = no
        china_diplo_interaction_trigger = yes
        offmap_china = {
            NOR = {
                has_status = china_civil_war
                has_status = china_plague
            }
            governor = {
                is_landed = yes #(to make sure there is a councilor to send)
            }
        }
    }

    weight_multiplier = {
    	days = 1
        modifier = {
            offmap_china = { has_status = china_unrest }
            factor = 0.6
        }
        modifier = {
            offmap_china = { has_status = china_mongol_invasion }
            factor = 0.3
        }
        modifier = {
            offmap_china = { has_status = china_jurchen_invasion }
            factor = 0.3
        }
        modifier = {
            offmap_china = { has_status = china_famine }
            factor = 0.3
        }
        modifier = {
            offmap_china = { has_status = china_golden_age }
            factor = 1.5
        }
        modifier = {
            offmap_china = { has_policy = china_expansionist }
            factor = 1.5
        }
        modifier = {
            has_grace_medium_trigger = yes
            factor = 1.5
        }
        modifier = {
            has_grace_major_trigger = yes
            factor = 1.5
        }
        modifier = {
            has_grace_trivial_trigger = no
            factor = 0.1
        }
        modifier = {
            is_tributary = yes
			suzerain = { is_offmap_governor = offmap_china }
            factor = 1.5
        }
    }

    immediate = {
        offmap_china = {
            governor = {
                save_event_target_as = target_governor
                #Selects a diplomat
                random_list = {
                    20 = {
                        trigger = {
							job_chancellor = {
								OR = {
									culture_group = chinese_group
									culture_group = altaic
								}
                                NOT = { character = ROOT }
							}
						}

                        job_chancellor = {
                            #Picks a reason for visiting
                            set_character_flag = cg_diplomatic_visit
                            
                            character_event = { id = JD.20001 }
                        }
                    }
                    20 = {
                        trigger = {
							job_marshal = {
								OR = {
									culture_group = chinese_group
									culture_group = altaic
								}
                                NOT = { character = ROOT }
							} 
						}

                        job_marshal = {
                            #Picks a reason for visiting
                            random_list = {
                                10 = { 
                                    trigger = { ROOT = { is_tributary = { type = offmap suzerain = event_target:target_governor } } }
                                    set_character_flag = cg_oversee_troops
                                }
                                10 = { 
                                    trigger = { NOT = { ROOT = { is_tributary = { type = offmap suzerain = event_target:target_governor } } } }
                                    set_character_flag = cg_study_military
                                }
                            }
                            character_event = { id = JD.20001 }
                        }
                    }
                    20 = {
                        trigger = {
							job_treasurer = {
								OR = {
									culture_group = chinese_group
									culture_group = altaic
								}
                                NOT = { character = ROOT }
							}
						}

                        job_treasurer = {
                            #Picks a reason for visiting
                            random_list = {
                                10 = { 
                                   trigger = { ROOT = { is_tributary = { type = offmap suzerain = event_target:target_governor } } }
                                    set_character_flag = cg_oversee_tax_collection
                                }
                                10 = { 
                                    trigger = { NOT = { ROOT = { is_tributary = { type = offmap suzerain = event_target:target_governor } } } }
                                    set_character_flag = cg_trade
                                }
                            }
                            character_event = { id = JD.20001 }
                        }
                    }
                    20 = {
                        trigger = {
							job_spiritual = {
								OR = {
									culture_group = chinese_group
									culture_group = altaic
								}
                                NOT = { character = ROOT }
							}
						}

                        job_spiritual = {
                            #Picks a reason for visiting
                            random_list = {
                                10 = { 
                                    trigger = { ROOT = { is_tributary = { type = offmap suzerain = event_target:target_governor } } }
                                    set_character_flag = cg_preaching
                                }
                                10 = { 
                                    trigger = { NOT = { ROOT = { is_tributary = { type = offmap suzerain = event_target:target_governor } } } }
                                    set_character_flag = cg_study_theology
                                }
                            }
                            character_event = { id = JD.20001 }
                        }
                    }
                }
            }
        }	
    }
}

#Ping event
character_event = {
    id = JD.20001
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = { 
    	save_event_target_as = chinese_guest
        save_persistent_event_target = {
            name = host_of_chinese_diplomat
            scope = FROM
        } 
    	FROM = { letter_event = { id = JD.20002 } } 
    }
}


character_event = { #Fired from on_death to the character receiving the chinese diplomat
    id = JD.10022
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        persistent_event_target:host_of_chinese_diplomat = { always = yes }
    }

    immediate = {
        persistent_event_target:host_of_chinese_diplomat = {
            character_event = { id = JD.10023 } #visible event for player
        }
    }
}

character_event = { # Fallback (in case the visitor died/imprisoned)
    id = JD.10023
    has_dlc = "Jade Dragon"
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    desc = {
        text = EVTDESC_JD_10023_death
        trigger = {
            NOT = { FROM = { is_alive = yes } }
            death_no_trace_trigger = no
        }
    }
    desc = {
        text = EVTDESC_JD_10023_prison
        trigger = { FROM = { prisoner = yes } }
    }
    desc = {
        text = EVTDESC_JD_10023_missing
        trigger = {
            FROM = { death_no_trace_trigger = yes }
        }
    }

    trigger = {
        FROM = { death_in_china_trigger = no }
    }

    option = {      
        name = EVTOPTA_JD_10023
        prestige = -50
        wealth = -15
        add_offmap_currency = {
            offmap = offmap_china
            value = 15
        }

        offmap_china = {
            governor = {
                show_portrait = yes
            }
        }
    }
    option = {      
        name = EVTOPTB_JD_10023
    }

    after = {
        #Clean-up event
        character_event = { id = JD.20020 days = 1 }
        FROM = { clear_persistent_event_target = host_of_chinese_diplomat }
    }
}

#Chinese guests announces their intention to visit
letter_event = {
    id = JD.20002
	has_dlc = "Jade Dragon"
    border = GFX_event_letter_frame_diplomacy

    desc = {
    	text = EVTDESC_JD_20002_A
    	trigger = { is_tributary = { type = offmap suzerain = event_target:target_governor } }
    }
    desc = {
    	text = EVTDESC_JD_20002_B
    	trigger = { is_tributary = { type = offmap suzerain = event_target:target_governor } }
    }
    
    is_triggered_only = yes

    #Welcome!
    option = { 
        name = EVTOPTA_JD_20002
		sound_effect = china_grace_gain
        custom_tooltip = { text = EVTOPTA_JD_20002_TT }

        add_grace_trivial_effect = yes

        hidden_effect = {
        	event_target:chinese_guest = { character_event = { id = JD.20003 days = 50 random = 20 } } 
            set_character_flag = chinese_governor_councilor_guest
        }
    }

    #Go away
    option = {
        name = EVTOPTB_JD_20002
        custom_tooltip = { text = EVTOPTB_JD_20002_TT }
    	detract_grace_major_effect = yes

    	event_target:chinese_guest = {
            show_scope_change = no
    		opinion = {
                who = ROOT
    			modifier = opinion_offended
    			years = 15
    		}
    	}
    	event_target:chinese_guest = { 
            show_scope_change = no
            liege = {
                show_scope_change = no
        		opinion = {
                    who = ROOT
        			modifier = opinion_offended
        			years = 15
        		}
            }
    	}
    }
}

#Tombola for outcomes
character_event = {
    id = JD.20003
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    trigger = { 
        is_alive = yes
        prisoner = no
        offmap_china = { governor = { is_liege_of = ROOT } }
    }
    immediate = { 
        FROM = {
            #Save corresponding councilor
            if = {
                limit = { ROOT = { has_job_title = job_chancellor } }
                job_chancellor = { save_event_target_as = corresponding_councilor }
            }
            if = {
                limit = { ROOT = { has_job_title = job_marshal } }
                job_marshal = { save_event_target_as = corresponding_councilor }
            }
            if = {
                limit = { ROOT = { has_job_title = job_treasurer } }
                job_treasurer = { save_event_target_as = corresponding_councilor }
            }
            if = {
                limit = { ROOT = { has_job_title = job_spiritual } }
                job_spiritual = { save_event_target_as = corresponding_councilor }
            }

            #Tombola
    		random_list = { #All is well
    			30 = { 
                    modifier = {
                        OR = {
                            event_target:corresponding_councilor = {
                                has_job_title = job_chancellor
                                NOT = { diplomacy = 8 }
                            }                       
                            event_target:corresponding_councilor = {
                                has_job_title = job_marshal
                                NOT = { martial = 8 }
                            }  
                            event_target:corresponding_councilor = {
                                has_job_title = job_treasurer
                                NOT = { stewardship = 8 }
                            }  
                            event_target:corresponding_councilor = {
                                has_job_title = job_spiritual
                                NOT = { learning = 8 }
                            }  
                        }
                        factor = 0.5
                    }
                    trigger = { event_target:corresponding_councilor = { always = yes } }
                    character_event = { id = JD.20004 } 
                } 
                10 = { #Falling stars
                    character_event = { id = JD.20005 } 
                }
                10 = { #Greet in chinese? 
                    modifier = { is_learned_trigger = yes factor = 1.3 }
                    trigger = { event_target:chinese_guest = { NOT = { culture = FROMFROM } } }
                    character_event = { id = JD.20006 } 
                }
                10 = { #Wearing the clothes wrong
                    modifier = { is_dumb_trigger = yes factor = 1.3 }
                    modifier = { trait = greedy factor = 1.3 }
                    trigger = { event_target:chinese_guest = { NOT = { culture = FROMFROM } } }
                    character_event = { id = JD.20011 }
                }
                10 = { #What you said (apparently) had a deep hidden meaning
                    modifier = { is_smart_trigger = yes factor = 1.3 }
                    modifier = { trait = gregarious factor = 1.3 }
                    modifier = { trait = poet factor = 1.5 }
                    modifier = { trait = socializer factor = 1.3 }
                    character_event = { id = JD.20012 }
                }
    		}
 
            #Clear-up event
            character_event = { id = JD.20020 days = 90 }
    	}
    }
}

#The visit went well
character_event = {
    id = JD.20004
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20004
    picture = GFX_evt_china_diplomatic_success
    border = GFX_event_normal_frame_diplomacy

    is_triggered_only = yes
    
    option = { 
        name = EVTOPTA_JD_20004
        add_grace_minor_effect = yes
		sound_effect = china_grace_gain
        
        event_target:chinese_guest = {
            show_portrait = yes
            clear_persistent_event_target = host_of_chinese_diplomat
        }

        hidden_effect = {
            random = {
                chance = 20
                modifier = {
                    factor = 0.1
                    any_artifact = { has_artifact_flag = chinese }
                }
                character_event = { id = JD.60004 days = 1 }
            }
        }
    }
}

#Falling stars
character_event = {
    id = JD.20005
	has_dlc = "Jade Dragon"
    desc = { 
        trigger = { 
            offmap_china = { offmap_ruler = { NOT = { culture = ROOT } } }
        } 
        text =EVTDESC_JD_20005 
    }
    desc = { 
        trigger = { 
            offmap_china = { offmap_ruler = { culture = ROOT } }
        } 
        text =EVTDESC_JD_20005_B
    }
    picture = GFX_evt_comet
    border = GFX_event_normal_frame_religion

    is_triggered_only = yes
    
    option = { 
        name = EVTOPTA_JD_20005
        custom_tooltip = { text = EVTOPTA_JD_20005_tt }
        detract_grace_minor_effect = yes
        event_target:chinese_guest = {
            show_portrait = yes
            clear_persistent_event_target = host_of_chinese_diplomat
        }
    }
}

#Greeting guest in Chinese
character_event = {
    id = JD.20006
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20006
    picture = GFX_evt_daughter_asking_father
    border = GFX_event_normal_frame_diplomacy

    is_triggered_only = yes
    
    #Study hard
    option = {
        trigger = { NOT = { has_character_modifier = multilingual } }
        name = EVTOPTA_JD_20006

        random_list = {
            35 = { #Succeed
                modifier = { learning = 12 factor = 1.15 }
                modifier = { learning = 14 factor = 1.15 }
                modifier = { learning = 16 factor = 1.15 }
                modifier = { learning = 18 factor = 1.2 }
                modifier = { learning = 20 factor = 1.2 }
                modifier = { is_smart_trigger = yes factor = 1.5 }
                modifier = { is_learned_trigger = yes factor = 1.5 }
                modifier = { has_character_modifier = student_of_language factor = 1.5 }


                custom_tooltip = { text = EVTOPTA_JD_20006_SUCCESS_TT }

                #Showing tooltip for language modifiers
                if = {
                    limit = {
                        NOR = {
                            has_character_modifier = student_of_language
                            has_character_modifier = multilingual
                        }
                    }
                    custom_tooltip = { text = student_of_language_tt }
                    tooltip = { add_grace_major_effect = yes }
                }
                if = {
                    limit = {
                        has_character_modifier = student_of_language
                    }
                    custom_tooltip = { text = multilingual_tt }
                    tooltip = { add_grace_major_effect = yes }
                }
                
                hidden_effect = { character_event = { id = JD.20007 days = 3 } }
            }
            65 = { #Fail and fall asleep
                modifier = { is_dumb_trigger = yes factor = 2 }
                modifier = { NOT = { learning = 6 } factor = 1.5 }
                custom_tooltip = { text = EVTOPTA_JD_20006_FAILURE_TT }
                tooltip = { detract_grace_major_effect = yes }
                hidden_effect = { character_event = { id = JD.20008 days = 3 } }
            }
        }   
    }

    #Wing it
    option = {
        trigger = { NOT = { has_character_modifier = multilingual } }
        name = EVTOPTB_JD_20006

        random_list = {
            65 = { #You do okay
                modifier = { learning = 12 factor = 1.15 }
                modifier = { learning = 14 factor = 1.15 }
                modifier = { learning = 16 factor = 1.15 }
                modifier = { learning = 18 factor = 1.2 }
                modifier = { learning = 20 factor = 1.2 }
                modifier = { is_smart_trigger = yes factor = 1.5 }
                modifier = { is_learned_trigger = yes factor = 1.5 }
                modifier = { has_character_modifier = student_of_language factor = 1.5 }

                custom_tooltip = { text = EVTOPTB_JD_20006_SUCCESS_TT }
                tooltip = { add_grace_medium_effect = yes }
                hidden_effect = { character_event = { id = JD.20009 days = 3 } }
            }
            35 = { #You mess up the words
                modifier = { is_dumb_trigger = yes factor = 2 }
                modifier = { NOT = { learning = 6 } factor = 1.5 }
                custom_tooltip = { text = EVTOPTB_JD_20006_FAILURE_TT }
                tooltip = { detract_grace_minor_effect = yes }
                hidden_effect = { character_event = { id = JD.20010 days = 3 } }
            }
        }
    }

    #You're multilingual already! - END
    option = {
        trigger = { has_character_modifier = multilingual }
		sound_effect = china_grace_gain
        tooltip_info = yes
        custom_tooltip = { text = multilingual_option_available_tt }

        name = EVTOPTC_JD_20006
        custom_tooltip = { text = EVTOPTC_JD_20006_TT }
        add_grace_medium_effect = yes
        hidden_effect = {
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
    
    #Let your translator do the hard work. - END
    option = {
        name = EVTOPTD_JD_20006
		sound_effect = china_grace_gain
        custom_tooltip = { text = EVTOPTD_JD_20006_TT }

        add_grace_minor_effect = yes

        hidden_effect = {
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}

#You learn about languages!
character_event = {
    id = JD.20007
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20007
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_religion

    is_triggered_only = yes

    trigger = {
        event_target:chinese_guest = {
            is_alive = yes
            prisoner = no
        }
    }
    
    option = { 
        name = EVTOPTA_JD_20007
		sound_effect = china_grace_gain
        custom_tooltip = { text = EVTOPTA_JD_20007_TT }

        if = {
            limit = {
                has_character_modifier = student_of_language
            }
            add_character_modifier = {
                name = multilingual
                duration = -1
            }
            hidden_effect = {
                remove_character_modifier = student_of_language
            }
        }
        if = {
            limit = {
                NOR = {
                    has_character_modifier = student_of_language
                    has_character_modifier = multilingual
                }
            }
            
            add_character_modifier = {
                name = student_of_language
                duration = -1
            }
        }
        
        add_grace_major_effect = yes

        hidden_effect = {
            random = {
                chance = 30
                modifier = {
                    factor = 0.1
                    any_artifact = { has_artifact_flag = chinese }
                }
                character_event = { id = JD.60004 days = 1 }
            }
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}

#You fell asleep!
character_event = {
    id = JD.20008
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20008
    picture = GFX_evt_bad_news
    border = GFX_event_normal_frame_religion

    is_triggered_only = yes

    trigger = {
        event_target:chinese_guest = {
            is_alive = yes
            prisoner = no
        }
    }

    hide_from = yes
    
    option = { 
        name = EVTOPTA_JD_20008
        custom_tooltip = { text = EVTOPTA_JD_20008_TT }
        
        detract_grace_major_effect = yes

        hidden_effect = {
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}

#You great them nicely
character_event = {
    id = JD.20009
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20009
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_religion

    is_triggered_only = yes

    trigger = {
        event_target:chinese_guest = {
            is_alive = yes
            prisoner = no
        }
    }
    
    option = { 
        name = EVTOPTA_JD_20009
        custom_tooltip = { text = EVTOPTA_JD_20009_TT }
		sound_effect = china_grace_gain
        
        add_grace_medium_effect = yes

        hidden_effect = {
            random = {
                chance = 20
                modifier = {
                    factor = 0.1
                    any_artifact = { has_artifact_flag = chinese }
                }
                character_event = { id = JD.60004 days = 1 }
            }
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}

#You great them awkwardly
character_event = {
    id = JD.20010
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20010
    picture = GFX_evt_china_diplomatic_incident
    border = GFX_event_normal_frame_religion

    is_triggered_only = yes

    trigger = {
        event_target:chinese_guest = {
            is_alive = yes
            prisoner = no
        }
    }
    
    option = { 
        name = EVTOPTA_JD_20010
        custom_tooltip = { text = EVTOPTA_JD_20010_TT }
        
        detract_grace_minor_effect = yes
        hidden_effect = {
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}



#Closet malfunction
character_event = {
    id = JD.20011
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_20011
    picture = GFX_evt_china_diplomatic_incident
    border = GFX_event_normal_frame_diplomacy

    is_triggered_only = yes

    trigger = {
        event_target:chinese_guest = {
            is_alive = yes
            prisoner = no
        }
    }
    
    option = { 
        name = EVTOPTA_JD_20011
        custom_tooltip = { text = EVTOPTA_JD_20011_tt }
        detract_grace_minor_effect = yes
        hidden_effect = {
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}

#Deep meaningful insight
character_event = {
    id = JD.20012
	has_dlc = "Jade Dragon"
    desc = { 
        trigger = { 
            offmap_china = { offmap_ruler = { NOT = { culture = ROOT } } }
        } 
        text = EVTDESC_JD_20012 
    }
    desc = { 
        trigger = { 
            offmap_china = { offmap_ruler = { culture = ROOT } }
        } 
        text = EVTDESC_JD_20012_B
    }
    picture = GFX_evt_garden
    border = GFX_event_normal_frame_diplomacy

    is_triggered_only = yes

    trigger = {
        event_target:chinese_guest = {
            is_alive = yes
            prisoner = no
        }
    }
    
    option = { 
        name = EVTOPTA_JD_20012
		sound_effect = china_grace_gain
        custom_tooltip = { text = EVTOPTA_JD_20012_tt }
        add_grace_medium_effect = yes

        hidden_effect = {
            random = {
                chance = 30
                modifier = {
                    factor = 0.1
                    any_artifact = { has_artifact_flag = chinese }
                }
                character_event = { id = JD.60004 days = 1 }
            }
            event_target:chinese_guest = {
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}

#Cleanup
character_event = {
    id = JD.20020
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        clr_character_flag = chinese_governor_councilor_guest
        event_target:chinese_guest = {
            clr_character_flag = cg_diplomatic_visit
            clr_character_flag = cg_oversee_troops
            clr_character_flag = cg_study_military
            clr_character_flag = cg_oversee_tax_collection
            clr_character_flag = cg_trade
            clr_character_flag = cg_preaching
            clr_character_flag = cg_study_theology
            if = {
                limit = {
                    persistent_event_target:host_of_chinese_diplomat = { always = yes }
                }
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
        FROMFROM = { #for the fallback if death/prison
            clr_character_flag = cg_diplomatic_visit
            clr_character_flag = cg_oversee_troops
            clr_character_flag = cg_study_military
            clr_character_flag = cg_oversee_tax_collection
            clr_character_flag = cg_trade
            clr_character_flag = cg_preaching
            clr_character_flag = cg_study_theology
            if = {
                limit = {
                    persistent_event_target:host_of_chinese_diplomat = { always = yes }
                }
                clear_persistent_event_target = host_of_chinese_diplomat
            }
        }
    }
}


### Hidden start for Mini-Expedition to China #### (random event, fired from yearly pulse)
character_event = {
    id = JD.10009
    hide_window = yes
    is_triggered_only = yes
    only_playable = yes

    only_capable = yes
    has_dlc = "Jade Dragon"
    prisoner = no
    war = no
    min_age = 13

    trigger = {
		NOT = { mercenary = yes }
        NOT = { offmap_china = { governor = { character = ROOT } } } #makes sure it doesn't fire for the governor themselves
        NOT = { has_character_flag = chinese_governor_councilor_guest }
        NOT = { has_character_flag = is_sending_someone_to_china }
        is_inaccessible_trigger = no
        china_diplo_interaction_trigger = yes
        offmap_china = {
            NOR = {
                has_status = china_civil_war
                has_status = china_plague
            }
        }
        any_courtier = {
            count = 2
            ai = yes
            NOT = { culture_group = chinese_group }
            is_ruler = no
            is_heir = no
            block_general_event_trigger = no
            NOR = {
                has_minor_title = title_commander
                has_character_flag = originated_from_chinese_court
            }
        }
    }

    weight_multiplier = {
        factor = 1
        modifier = { # more likely if China is doing great
            factor = 1.5
            china_is_fine_trigger = yes
        }
        modifier = { # less likely if China is NOT doing great
            factor = 0.5
            china_is_suffering_trigger = yes
        }
        modifier = { # less likely if China is isolationist
            factor = 0.5
            offmap_china = { has_policy = china_isolationist }
        }
    }

    immediate = {
        if = {
            limit = {
                any_courtier = {
                    is_liked_by_China_trigger = yes
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    is_heir = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
            }
            any_courtier = {
                limit = {
                    is_liked_by_China_trigger = yes
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = adventurous_spirit
                set_character_flag = wants_to_travel_0
            }
        }
        else = {
            any_courtier = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    is_heir = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = adventurous_spirit
                set_character_flag = wants_to_travel_0
            }
        }
    
        event_target:adventurous_spirit = { character_event = { id = JD.10010 } }
    }
}


character_event = { #ping event
    id = JD.10010
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = { FROM = { character_event = { id = JD.10011 } } }
}

#Your courtier wants to travel to China!
character_event = {
    id = JD.10011
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10011
    picture = GFX_evt_china_open
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    immediate = {
        offmap_china = {
            governor = {
                save_event_target_as = the_protector_general
            }
        }

        #Saves home court in case of death of ROOT...
        capital_scope = {
            save_event_target_as = original_court_province_target
        }

        #Find a suitable back-up for the journey... (preferably a spouse, then a lover, then a friend, and in worst case, some random person at court)
        if = {
            limit = {
                is_married = yes
                any_spouse = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
            }
            any_spouse = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_1
                set_character_flag = wants_to_travel_1
            }
        }
        else_if = {
            limit = {
                has_lover = yes
                any_lover = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
            }
            any_lover = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_1
                set_character_flag = wants_to_travel_1
            }
        }
        else_if = {
            limit = {
                num_of_friends > 0
                any_friend = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
            }
            any_friend = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_1
                set_character_flag = wants_to_travel_1
            }
        }
        else = {
            any_courtier = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_1
                set_character_flag = wants_to_travel_1
            }
        }
        
        #Find a suitable second back-up for the journey... (preferably a child who's not an heir, otherwise a grown-up un-landed child, and in worst case, some random person at court)
        if = {
            limit = {
                has_children = yes
                any_child = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    NOT = { is_heir = ROOT }
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
            }
            any_child = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    NOT = { is_heir = ROOT }
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_2
                set_character_flag = wants_to_travel_2
            }
        }
        else_if = {
            limit = {
                has_children = yes
                any_child = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
            }
            any_child = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_2
                set_character_flag = wants_to_travel_2
            }
        }
        else = {
            any_courtier = {
                limit = {
                    ai = yes
                    NOT = { culture_group = chinese_group }
                    is_ruler = no
                    block_general_event_trigger = no
                    NOR = {
                        has_minor_title = title_commander
                        has_character_flag = wants_to_travel_0
                        has_character_flag = wants_to_travel_1
                        has_character_flag = wants_to_travel_2
                        has_character_flag = originated_from_chinese_court
                    }
                }
                score_value = { #Prioritizes selecting an interesting courtier...
                    value = 10
                    interesting_courtier_selection_score = yes
                }
                save_event_target_as = back_up_target_2
                set_character_flag = wants_to_travel_2
            }
        }
        set_character_flag = is_sending_someone_to_china
    }

    option = {
        name = EVTOPTA_JD_10011
        custom_tooltip = { text = EVTOPTA_JD_10011_TT }


        event_target:adventurous_spirit = {
            #show_scope_change = no
            check_likes_or_dislikes_THIS_effect = yes
            add_character_modifier = {
                name = out_traveling
                duration = 365
            }
            hidden_effect = { character_event = { id = JD.10012 days = 200 random = 160 } }
        }
    }

    option = {
        name = EVTOPTB_JD_10011
        custom_tooltip = { text = EVTOPTB_JD_10011_TT }


        event_target:back_up_target_1 = {
            #show_scope_change = no
            check_likes_or_dislikes_THIS_effect = yes
            add_character_modifier = {
                name = out_traveling
                duration = 365
            }
            save_event_target_as = adventurous_spirit
            hidden_effect = { character_event = { id = JD.10012 days = 200 random = 160 } }
        }
        trigger = {
            event_target:back_up_target_1 = { always = yes }
        }
    }

    option = {
        name = EVTOPTC_JD_10011
        custom_tooltip = { text = EVTOPTC_JD_10011_TT }


        event_target:back_up_target_2 = {
            #show_scope_change = no
            check_likes_or_dislikes_THIS_effect = yes
            add_character_modifier = {
                name = out_traveling
                duration = 365
            }
            save_event_target_as = adventurous_spirit
            hidden_effect = { character_event = { id = JD.10012 days = 200 random = 160 } }
        }
        
        trigger = {
            event_target:back_up_target_2 = { always = yes }
        }
    }

    option = {      
        name = EVTOPTD_JD_10011
        custom_tooltip = { text = EVTOPTD_JD_10011_TT }
        clr_character_flag = is_sending_someone_to_china
    }

    after = {
        hidden_effect = {
            any_courtier = {
                clr_character_flag = wants_to_travel_0
                clr_character_flag = wants_to_travel_1
                clr_character_flag = wants_to_travel_2
            }
            if = {
                limit = { has_character_flag = is_sending_someone_to_china }
                event_target:adventurous_spirit = {
                    force_host = event_target:the_protector_general
                }
                character_event = { id = JD.10020 days = 370 } #Fallback event (in case the traveler has died)
            }
        }
    }
}

#Delayed ping event and tombola for figuring out how the journey went... (fires for the traveler)
character_event = {
    id = JD.10012
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        offmap_china = {
            governor = {
                save_event_target_as = the_protector_general #in case the old one has died, resave
            }
        }
		
        # If the old liege is still alive... (most often the case, we assume)!
        if = {
            limit = { FROM = { is_alive = yes } }
            force_host = FROM
        }
		#In case the liege who sent them away has died, send them back from where they came anyway...
        else = {
            event_target:original_court_province_target = {
                owner = {
                    save_event_target_as = new_story_owner
                    ROOT = { #moves ROOT to the new host
                    	force_host = PREV
						if = {
							limit = { is_ruler = no }
							move_character = PREV
						}
                    }
                }
            }
        }

        random_list = { #random outcomes for the traveler...
            5 = {
                modifier = {
                    factor = 1.1
                    china_is_fine_trigger = yes
                }
                modifier = {
                    factor = 0.5
                    china_is_suffering_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    has_pleasant_trait_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    has_pleasant_personality_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 10
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 13
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 15
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 17
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 20
                }
                modifier = {
                    factor = 1.1
                    stewardship = 10
                }
                modifier = {
                    factor = 1.1
                    stewardship = 15
                }
                modifier = {
                    factor = 1.1
                    stewardship = 20
                }
                modifier = {
                    factor = 1.2
                    is_liked_by_China_trigger = yes
                }
                modifier = {
                    factor = 1.2
                    is_disliked_by_China_trigger = no
                }
                
                if = {
                    limit = { NOT = { FROM = { is_alive = yes } } }
                    event_target:new_story_owner = { character_event = { id = JD.10013 } } #great
                }
                if = {
                    limit = { FROM = { is_alive = yes } }
                    FROM = { character_event = { id = JD.10013 } } #great
                }

                trigger = {
                    is_alive = yes
                    offmap_china = {
                        NOR = {
                            has_status = china_civil_war
                            has_status = china_plague
                        }
                    }
                }
            }
            10 = {
                modifier = {
                    factor = 1.5
                    china_is_fine_trigger = yes
                }
                modifier = {
                    factor = 0.5
                    china_is_suffering_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 10
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 15
                }
                modifier = {
                    factor = 1.1
                    diplomacy = 20
                }
                modifier = {
                    factor = 1.1
                    stewardship = 10
                }
                modifier = {
                    factor = 1.1
                    is_liked_by_China_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    is_disliked_by_China_trigger = no
                }
                trigger = {
                    is_alive = yes
                    offmap_china = {
                        NOR = {
                            has_status = china_civil_war
                            has_status = china_plague
                        }
                    }
                }

                if = {
                    limit = { NOT = { FROM = { is_alive = yes } } }
                    event_target:new_story_owner = { character_event = { id = JD.10014 } } #good
                }
                if = {
                    limit = { FROM = { is_alive = yes } }
                    FROM = { character_event = { id = JD.10014 } } #good
                }

            }
            10 = {
                trigger = {
                    is_alive = yes
                }
                if = {
                    limit = { NOT = { FROM = { is_alive = yes } } }
                    event_target:new_story_owner = { character_event = { id = JD.10015 } } #decent
                }
                if = {
                    limit = { FROM = { is_alive = yes } }
                    FROM = { character_event = { id = JD.10015 } } #decent
                }

            }
            10 = {
                modifier = {
                    factor = 1.5
                    china_is_suffering_trigger = yes
                }
                modifier = {
                    factor = 0.5
                    china_is_fine_trigger = yes
                }
                modifier = {
                    factor = 0.7
                    has_top_tier_education_trait_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    is_liked_by_China_trigger = no
                }
                modifier = {
                    factor = 1.1
                    is_disliked_by_China_trigger = yes
                }
                trigger = {
                    is_alive = yes
                }

                if = {
                    limit = { NOT = { FROM = { is_alive = yes } } }
                    event_target:new_story_owner = { character_event = { id = JD.10016 } } #bad
                }
                if = {
                    limit = { FROM = { is_alive = yes } }
                    FROM = { character_event = { id = JD.10016 } } #bad
                }
            }
            5 = {
                modifier = {
                    factor = 1.5
                    china_is_suffering_trigger = yes
                }
                modifier = {
                    factor = 0.5
                    is_smart_trigger = yes
                }
                modifier = {
                    factor = 0.7
                    has_top_tier_education_trait_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    is_dumb_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    NOT = { diplomacy = 10 }
                }
                modifier = {
                    factor = 1.1
                    NOT = { diplomacy = 8 }
                }
                modifier = {
                    factor = 1.1
                    NOT = { diplomacy = 5 }
                }
                modifier = {
                    factor = 1.1
                    NOT = { diplomacy = 3 }
                }
                modifier = {
                    factor = 1.1
                    has_unattractive_trait_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    is_unattractive_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    is_liked_by_China_trigger = no
                }
                modifier = {
                    factor = 1.5
                    is_disliked_by_China_trigger = yes
                }
                trigger = {
                    is_alive = yes
                }
                if = {
                    limit = { NOT = { FROM = { is_alive = yes } } }
                    event_target:new_story_owner = { character_event = { id = JD.10017 } } #terrible
                }
                if = {
                    limit = { FROM = { is_alive = yes } }
                    FROM = { character_event = { id = JD.10017 } } #terrible
                }
            }
            10 = { # They return with a new lover/spouse
                character_event = { id = JD.10021 } #Special case 1: ping event for creating new char

                modifier = {
                    factor = 1.1
                    is_attractive_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    has_attractive_trait_trigger = yes
                }
                modifier = {
                    factor = 1.1
                    is_liked_by_China_trigger = yes
                }
                modifier = {
                    factor = 0.9
                    is_liked_by_China_trigger = no
                }
                modifier = {
                    factor = 0.5
                    is_disliked_by_China_trigger = yes
                }

                trigger = {
                    is_alive = yes
                    is_married = no
                    NOT = { is_consort = FROM }
                    has_lover = no
                }
            }
            10 = { #They return but want to go back
                modifier = {
                    factor = 1.1
                    has_disease_trigger = no
                }
                modifier = {
                    factor = 1.2
                    is_liked_by_China_trigger = yes
                }
                modifier = {
                    factor = 0.9
                    is_liked_by_China_trigger = no
                }
                modifier = {
                    factor = 0.1
                    is_disliked_by_China_trigger = yes
                }

                trigger = {
                    is_alive = yes
                    is_ruler = no
                    NOT = { is_married = FROM }
                }

                if = {
                    limit = { NOT = { FROM = { is_alive = yes } } }
                    event_target:new_story_owner = { character_event = { id = JD.10019 } } #Special case 2
                }
                if = {
                    limit = { FROM = { is_alive = yes } }
                    FROM = { character_event = { id = JD.10019 } }  #Special case 2
                }
            }
        }
    }
}

character_event = { # Things went great
    id = JD.10013
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10013
    picture = GFX_evt_whispers
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    immediate = {
        #Chance of returning with artifact
        random = {
            chance = 100
            modifier = {
                factor = 0
                any_artifact = { has_artifact_flag = chinese }
            }
            set_character_flag = chinese_traveler_artifact
            offmap_china = {
                governor = {
                    random_list = {
                        5 = { 
                            add_artifact = jade_dragon
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        15 = { 
                            add_artifact = chinese_dragon_amulet
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        40 = {
                            add_artifact = chinese_artwork
                            new_artifact = {
								set_name="chinese_artwork_name"
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        40 = { 
                            add_artifact = chinese_calligraphy
                            new_artifact = {
								set_name="chinese_calligraphy_name"
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        40 = { 
                            add_artifact = chinese_sculpture
                            new_artifact = {
								set_name="chinese_sculpture_name"
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        20 = { 
                            add_artifact = chinese_ceremonial_robes
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        20 = { 
                            trigger = { 
                               ROOT = { has_education_martial_trigger = yes }
                            }
                            modifier = {
                                factor = 2
                                ROOT = { martial = 14 }
                            }
                            modifier = {
                                factor = 2
                                ROOT = { martial = 18 }
                            }
                            modifier = {
                                factor = 2
                                ROOT = { martial = 22 }
                            }
                            modifier = {
                                factor = 2
                                ROOT = { martial = 24 }
                            }
                            add_artifact = art_of_war
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        20 = { 
                            add_artifact = silk_shroud
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        15 = { 
                            add_artifact = water_clock
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        15 = { 
                            add_artifact = jian_sword
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                        10 = { 
                            add_artifact = classic_of_poetry
                            new_artifact = {
                                transfer_artifact = {
                                    from = PREV
                                    to = ROOT
                                }
                                save_event_target_as = chinese_artifact
                            }
                        }
                    }
                }
            }
        }
    }

    option = {
        name = EVTOPTA_JD_10013
		sound_effect = china_grace_gain
        custom_tooltip = { text = EVTOPTA_JD_10013_TT }
        FROM = {
            add_trait_silently_proud_effect = yes
            remove_trait_silently_humble_effect = yes
            random = { chance = 50 add_trait_brave_effect = yes }
        }
        wealth = 25
        if = {
            limit = { has_character_flag = chinese_traveler_artifact }
            tooltip = {
                event_target:chinese_artifact = {
                    show_scope_change = no
                    transfer_artifact = {
                        to = ROOT
                        from = FROM
                    }
                }
            }
            clr_character_flag = chinese_traveler_artifact
        }
        add_grace_medium_effect = yes
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        clr_character_flag = is_sending_someone_to_china
    }
}
character_event = { # Things went good
    id = JD.10014
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10014
    picture = GFX_evt_feast
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    option = {      
        name = EVTOPTA_JD_10014
		sound_effect = china_grace_gain
        add_grace_minor_effect = yes
        FROM = {
            random = { chance = 50 add_trait_patient_effect = yes }
        }
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        clr_character_flag = is_sending_someone_to_china
    }
}
character_event = { # Things went decently
    id = JD.10015
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10015
    picture = GFX_evt_recieve_letter
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    option = {      
        name = EVTOPTA_JD_10015
		sound_effect = china_grace_gain
        add_grace_trivial_effect = yes
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        clr_character_flag = is_sending_someone_to_china
    }
}
character_event = { # Things went bad
    id = JD.10016
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10016
    picture = GFX_evt_quarrel
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes
    
    option = {      
        name = EVTOPTA_JD_10016
        detract_grace_trivial_effect = yes
        FROM = {
            random = { chance = 50 add_trait = stressed }
        }
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        clr_character_flag = is_sending_someone_to_china
    }
}
character_event = { # Things went terribly
    id = JD.10017
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10017
    picture = GFX_evt_quarrel
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes
    
    option = {      
        name = EVTOPTA_JD_10017
        custom_tooltip = { text = EVTOPTA_JD_10017_TT }
        detract_grace_minor_effect = yes
        FROM = {
            add_trait_silently_shy_effect = yes
            remove_trait_silently_gregarious_effect = yes
            random = { chance = 25 add_trait = depressed }
        }
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        clr_character_flag = is_sending_someone_to_china
    }
}

#Ping event for Special case 1
character_event = {
    id = JD.10021
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        if = {
            limit = { is_female = yes }
            create_character = {
                age = 25
                dynasty = actually_culture
                religion = event_target:the_protector_general
                culture = event_target:the_protector_general
                female = no
                health = 6
                random_traits = yes
                historical = yes
            }
        }
        if = {
            limit = { is_female = no }
            create_character = {
                age = 25
                dynasty = actually_culture
                religion = event_target:the_protector_general
                culture = event_target:the_protector_general
                female = yes
                health = 6
                random_traits = yes
                historical = yes
            }
        }
        new_character = {
			emf_dna_set_flags_for_high_health = yes
			if = {
				limit = { emf_religion_has_castes = yes }
				emf_copy_caste_from_ROOT = yes
			}
			emf_new_character = yes
            save_event_target_as = new_found_lover
            add_lover = ROOT
        }
        add_ambition = obj_get_married

        if = {
            limit = { NOT = { FROMFROM = { is_alive = yes } } }
            event_target:new_story_owner = { character_event = { id = JD.10018 } } #Special case 2
        }
        if = {
            limit = { FROMFROM = { is_alive = yes } }
            FROMFROM = { character_event = { id = JD.10018 } }  #Special case 2
        }
    }
}

character_event = { # Special case 1 - The courtier you sent away to China has returned with a lover/spouse
    id = JD.10018
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10018
    picture = GFX_evt_scandal
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes
    hide_new = yes

    option = { #They bring someone home
        name = EVTOPTA_JD_10018
		sound_effect = china_grace_gain
        custom_tooltip = { text = EVTOPTA_JD_10018_TT }
        
        #moves the lover to your court (and leaves a flag for later marriage hook-in)...
        event_target:new_found_lover = {
            move_character = ROOT
            set_character_flag = gets_to_stay
        }

        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        add_grace_medium_effect = yes
    }
    option = { #We don't have room for strangers
        name = EVTOPTB_JD_10018
		sound_effect = china_grace_gain
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        
        reverse_opinion = {
            who = FROM
            modifier = opinion_sent_my_lover_away
            years = 20
        }

        if = { limit = { FROM = { trait = stressed } } FROM = { add_trait = depressed } } #if they are already stressed, this depressed them

        event_target:new_found_lover = {
            set_character_flag = has_to_leave
            hidden_effect = { leave_court_for_china_effect = yes }
        }
        add_grace_medium_effect = yes
    }

    after = {
        clr_character_flag = is_sending_someone_to_china
    }
}
character_event = { # Special case 2 - The courtier you sent away to China has returned but wants to go back
    id = JD.10019
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10019
    picture = GFX_evt_son_asking_father
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    option = { #They go back to China, forever
        name = {
            text = EVTOPTA_JD_10019
            trigger = {
                NOR = {
                    trait = lunatic
                    is_dumb_trigger = yes
                    trait = poet
                    trait = kind
                }
            }
        }
        name = {
            text = EVTOPTA_JD_10019_lunatic
            trigger = { trait = lunatic }
        }
        name = {
            text = EVTOPTA_JD_10019_imbecile
            trigger = { is_dumb_trigger = yes }
        }
        name = {
            text = EVTOPTA_JD_10019_poet
            trigger = { OR = { trait = poet trait = kind } }
        }
		sound_effect = china_grace_gain

        if = { #Do they have family?
            limit = {
                FROM = {
                    OR = {
                        is_married = yes
                        any_child = {
                            is_child_of = FROM
                            NOT = { is_child_of = ROOT }
                            is_adult = no
                        }            
                    }
                }
            }
            custom_tooltip = { text = EVTOPTA_JD_10019_TT_family } #Explains that they will take their family with them
        }
        if = { #Are they single and without children?
            limit = {
                FROM = {
                    NOR = {
                        is_married = yes
                        any_child = {
                            is_child_of = FROM
                            is_adult = no
                        }            
                    }
                }
            }
            custom_tooltip = { text = EVTOPTA_JD_10019_TT_solo } # Explains that they'll just go on their own
        }

        
        FROM = {
            hidden_effect = {
                remove_character_modifier = out_traveling

                leave_court_for_china_effect = yes
                
                if = { # They take their spouse with them
                    limit = { is_married = yes }
                    any_spouse = {
                        leave_court_for_china_effect = yes
                    }
                }

                if = { #They take any children with them
                    limit = {
                        any_child = {
                            is_child_of = FROM
                            NOT = { is_child_of = ROOT }
                            is_adult = no
                        }
                    }
                    any_child = {
                        limit = {
                            is_child_of = FROM
                            NOT = { is_child_of = ROOT }
                            is_adult = no
                        }
                        leave_court_for_china_effect = yes
                    }
                }
            }
        }
        add_grace_major_effect = yes
        if = {
            limit = { FROM = { is_child_of = ROOT } }
            set_character_flag = let_child_go_to_china #Potential hook-in for future events? 
        }
    }

    option = { #They are angry
        name = EVTOPTB_JD_10019
		sound_effect = china_grace_gain
        add_grace_medium_effect = yes
        hidden_effect = {  FROM = { remove_character_modifier = out_traveling } }
        reverse_opinion = {
            who = FROM
            modifier = opinion_angry
            years = 15
        }
    }

    option = { #They will get over it
        name = EVTOPTC_JD_10019
        add_grace_medium_effect = yes
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }

        reverse_opinion = {
            who = FROM
            modifier = opinion_disgruntled
            years = 15
        }
        
        tooltip_info = diplomacy
        trigger = { diplomacy = 15 }
    }

    option = { #Plead to them from the bottom of your heart
        name = EVTOPTD_JD_10019
        custom_tooltip = { text = EVTOPTD_JD_10019_TT }
		sound_effect = china_grace_gain
		
        add_grace_medium_effect = yes
        hidden_effect = { FROM = { remove_character_modifier = out_traveling } }
        
        reverse_opinion = {
            who = FROM
            modifier = opinion_feels_appreciated
            years = 10
        }

        tooltip_info = yes
        trigger = {
            reverse_opinion = {
                who = FROM
                value = 60
            }
        }
    }
    after = {
        clr_character_flag = is_sending_someone_to_china
    }
}

character_event = { # Fallback (in case the traveler died)
    id = JD.10020
	has_dlc = "Jade Dragon"
    desc = EVTDESC_JD_10020
    picture = GFX_evt_recieve_letter
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes

    trigger = {
        has_character_flag = is_sending_someone_to_china
        event_target:adventurous_spirit = {
            NOT = { is_alive = yes }
            NOR = {
                death_in_china_trigger = yes
                death_no_trace_trigger = yes
            }
        }
    }

    option = {      
        name = EVTOPTA_JD_10020
        custom_tooltip = { text = EVTOPTA_JD_10020_TT }
        clr_character_flag = is_sending_someone_to_china
    }
}


###
# Dishonest traders event
###
character_event = { # Hidden event
    id = JD.30000
    
    hide_window = yes

    has_dlc = "Jade Dragon"
    
    is_triggered_only = yes
    
    only_playable = yes
    
    trigger = {
        NOT = { offmap_china = { governor = { character = ROOT } } } #makes sure it doesn't fire for the governor themselves
        china_diplo_interaction_trigger = yes
        any_demesne_province = {
            has_trade_post = yes
            trade_route = silk_road
        }
		any_vassal = {
			any_realm_province = {
				NOT = { has_province_modifier = reprimanded_merchants }
				any_province_holding = { holding_type = city }
			}
		}
    }
    
    immediate = {
        offmap_china = {
            governor = {
                character_event = { id = JD.30001 }
            }
        }
    }
}

character_event = {
	id = JD.30001
	has_dlc = "Jade Dragon"
	
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			letter_event = { id = JD.30002 }
		}
	}
}

# A letter arrives from the governor stating that the Emperor is upset about dishonest traders
letter_event = {
	id = JD.30002
	has_dlc = "Jade Dragon"
	
	desc = EVTDESC_JD_30002
	border = GFX_event_letter_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		job_marshal = {
			save_event_target_as = target_marshal
		}
		random_vassal = {
			limit = {
				NOT = { tier = BARON }
				any_realm_province = {
					NOT = { has_province_modifier = reprimanded_merchants }
					any_province_holding = { holding_type = city }
				}
			}
			save_event_target_as = target_vassal_1
		}
		random_vassal = {
			limit = {
				NOT = { tier = BARON }
				any_realm_province = {
					NOT = { has_province_modifier = reprimanded_merchants }
					any_province_holding = { holding_type = city }
				}
				NOT = { character = event_target:target_vassal_1 }
			}
			save_event_target_as = target_vassal_2
		}
		random_vassal = {
			limit = {
				NOT = { tier = BARON }
				any_realm_province = {
					NOT = { has_province_modifier = reprimanded_merchants }
					any_province_holding = { holding_type = city }
				}
				NOR = {
					character = event_target:target_vassal_1
					character = event_target:target_vassal_2
				}
			}
			save_event_target_as = target_vassal_3
		}
	}
	
	# Punish all traders in realm
	option = {
		name = EVTOPTA_JD_30002
		
		trigger = {
			event_target:target_vassal_1 = { always = yes }
			event_target:target_vassal_2 = { always = yes }
			#event_target:target_vassal_3 = { always = yes } #intentionally left out
		}
		
		add_offmap_currency = {
			offmap = offmap_china
			value = 150
		}
		
		capital_scope = {
			add_province_modifier = {
				modifier = reprimanded_merchants
				duration = 3650
			}
		}
		event_target:target_vassal_1 = {
			random_realm_province = {
				limit = {
					NOT = { has_province_modifier = reprimanded_merchants }
					any_province_holding = { holding_type = city }
				}
				add_province_modifier = {
					modifier = reprimanded_merchants
					duration = 3650
				}
			}
			character_event = { id = JD.30003 days = 14 random = 30 }
		}
		event_target:target_vassal_2 = {
			random_realm_province = {
				limit = {
					NOT = { has_province_modifier = reprimanded_merchants }
					any_province_holding = { holding_type = city }
				}
				add_province_modifier = {
					modifier = reprimanded_merchants
					duration = 3650
				}
			}
			character_event = { id = JD.30003 days = 14 random = 30 }
		}
		if = {
			limit = {
				event_target:target_vassal_3 = { always = yes }
			}
		}
		event_target:target_vassal_3 = {
			random_realm_province = {
				limit = {
					NOT = { has_province_modifier = reprimanded_merchants }
					any_province_holding = { holding_type = city }
				}
				add_province_modifier = {
					modifier = reprimanded_merchants
					duration = 3650
				}
			}
			character_event = { id = JD.30003 days = 14 random = 30 }
		}
	}
	
	# Task your marshal to find the worst troublemakers
	option = {
		name = EVTOPTB_JD_30002
		add_offmap_currency = {
			offmap = offmap_china
			value = 50
		}
		capital_scope = {
			add_province_modifier = {
				modifier = reprimanded_merchants
				duration = 3650
			}
		}
		event_target:target_marshal = {
			trigger_switch = {
				on_trigger = intrigue
				10 = { }
				5 = {
					add_character_modifier = {
						modifier = dealing_with_dishonest_traders
						duration = 365
					}
				}
				0 = {
					add_character_modifier = {
						modifier = dealing_with_dishonest_traders
						duration = 1460
					}
				}
			}
		}
	}
	
	# Don't do anything
	option = {
		name = EVTOPTC_JD_30002
		add_offmap_currency = {
			offmap = offmap_china
			value = -150
		}
	}
}

# Your liege has limited your merchants privileges 
character_event = {
	id = JD.30003
	has_dlc = "Jade Dragon"
	
	desc = EVTDESC_JD_30003
	picture = GFX_evt_monk
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	# Publicly condemn the action
	option = {
		name = EVTOPTA_JD_30003
		
		ai_chance = {
			factor = 10
			modifier = {
				factor = 3
				trait = ambitious
			}
			modifier = {
				factor = 3
				trait = just
			}
			modifier = {
				factor = 3
				is_rival = FROM
			}
		}
		
		add_character_modifier = {
			modifier = defending_vassal_rights
			days = 3650
		}
		reverse_opinion = {
			who = ROOT
			multiplier = 2
			modifier = opinion_annoyed
			years = 5
		}
		FROM = {
			character_event = { id = JD.30004 days = 14 }
		}
	}
	
	# Don't bother
	option = {
		name = EVTOPTB_JD_30003
		
		ai_chance = {
			factor = 40
			modifier = {
				factor = 2
				trait = craven
			}
		}
		
		prestige = -25
	}
	
	after = {
		tooltip = {
			any_demesne_province = {	
				limit = {
					has_province_modifier = reprimanded_merchants
				}
				add_province_modifier = {
					modifier = reprimanded_merchants
					days = 3650
				}
			}
		}
	}
}

# Your vassals are upset about legislating rules on their subjects
character_event = {
	id = JD.30004
	has_dlc = "Jade Dragon"
	
	desc = EVTDESC_JD_30004
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes

	# Too bad
	option = {
		name = EVTOPTA_JD_30004
		reverse_opinion = {
			who = FROM
			multiplier = 2
			modifier = opinion_annoyed
			years = 5
		}
		prestige = -20
	}
}

###
# Courtier from Chinese court compliments/berates you after a stay in your court.
###

character_event = {
	id = JD.30010
	
	hide_window = yes

    has_dlc = "Jade Dragon"
	
	is_triggered_only = yes
	
	only_playable = yes
	
	trigger = {
		is_adult = yes
        NOT = { offmap_china = { governor = { character = ROOT } } } #makes sure it doesn't fire for the governor themselves
		NOT = {
			offmap_china = {
				has_policy = china_isolationist
			}
		}
		any_courtier = {
			block_general_event_trigger = no
			prisoner = no
			has_character_flag = originated_from_chinese_court
            NOT = { has_character_flag = is_escaped_chinese_noble }
            NOT = { has_character_flag = is_chinese_refugee }
			NOT = { has_character_flag = had_opinions_about_host_court }
            NOT = { has_character_flag = ignore_refund }
			has_character_flag = chinese_courtier_original_court_@ROOT
		}
	}
	
	weight_multiplier = {
		factor = 1
	}
	
	immediate = {
		random_courtier = {
			limit = {
				block_general_event_trigger = no
				prisoner = no
				has_character_flag = originated_from_chinese_court
                NOT = { has_character_flag = is_escaped_chinese_noble }
                NOT = { has_character_flag = is_chinese_refugee }
                NOT = { has_character_flag = ignore_refund }
				NOT = { has_character_flag = had_opinions_about_host_court }
			}
			
			set_character_flag = had_opinions_about_host_court
			save_event_target_as = chinese_courtier
			random_list = {
				10 = { # Compliment
					trigger = {
						opinion = {
							who = ROOT
							value = -30
						}
					}
					modifier = {
						factor = 2
						liege = {
							calc_true_if = {
								amount = 2
								trait = honest
								trait = gregarious
								trait = trusting
								trait = affectionate
								trait = playful
								trait = socializer
								trait = charitable
								trait = patient
								trait = kind
							}
						}
					}
					modifier = {
						factor = 5
						OR = {
							AND = {
								is_benevolent_trigger = yes
								liege = { is_benevolent_trigger = yes }
							}
							AND = {
								is_evil_trigger = yes
								liege = { is_evil_trigger = yes }
							}
							AND = {
								is_pious_trigger = yes
								liege = { is_pious_trigger = yes }
							}
							AND = {
								is_impious_trigger = yes
								liege = { is_impious_trigger = yes }
							}
							AND = {
								has_pleasant_personality_trigger = yes
								liege = { has_pleasant_personality_trigger = yes }
							}
							AND = {
								has_unpleasant_personality_trigger = yes
								liege = { has_unpleasant_personality_trigger = yes }
							}
							AND = {
								is_attractive_trigger = yes
								liege = { is_attractive_trigger = yes }
							}
							AND = {
								is_unattractive_trigger = yes
								liege = { is_unattractive_trigger = yes }
							}
							AND = {
								is_smart_trigger = yes
								liege = { is_smart_trigger = yes }
							}
							AND = {
								is_dumb_trigger = yes
								liege = { is_dumb_trigger = yes }
							}
							AND = {
								is_strong_trigger = yes
								liege = { is_strong_trigger = yes }
							}
							AND = {
								is_weak_trigger = yes
								liege = { is_weak_trigger = yes }
							}
							AND = {
								has_symptom_trigger = yes
								liege = { has_symptom_trigger = yes }
							}
							AND = {
								has_disease_trigger = yes
								liege = { has_disease_trigger = yes }
							}
							AND = {
								has_injury_trigger = yes
								liege = { has_injury_trigger = yes }
							}
							AND = {
								has_medium_disability_trigger = yes
								liege = { has_medium_disability_trigger = yes }
							}
							AND = {
								OR = {
									trait = stressed
									trait = depressed
								}
								liege = {
									OR = {
										trait = stressed
										trait = depressed
									}
								}
							}
							AND = {
								has_top_tier_education_trait_trigger = yes
								liege = { has_top_tier_education_trait_trigger = yes }
							}
							AND = {
								trait = gardener
								liege = { trait = gardener }
							}
							AND = {
								trait = hunter
								liege = { trait = hunter }
							}
							AND = {
								trait = poet
								liege = { trait = poet }
							}
							AND = {
								trait = falconer
								liege = { trait = falconer }
							}
							AND = {
								trait = mystic
								liege = { trait = mystic }
							}
							AND = {
								is_learned_trigger = yes
								liege = { is_learned_trigger = yes }
							}
						}
					}
					
					liege = {
						character_event = { id = JD.30011 }
					}
				}
				5 = { # Berate
				
				
					liege = {
						character_event = { id = JD.30012 }
					}
				}
				1 = { # Don't comment on stay
				}
			}
		}
		
	}
}

character_event = {
	id = JD.30011
	has_dlc = "Jade Dragon"
	
	desc = EVTDESC_JD_30011
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_JD_30011
		sound_effect = china_grace_gain
		
		add_offmap_currency = {
			offmap = offmap_china
			value = 150
		}
	}
	
	option = {
		name = EVTOPTB_JD_30011
		prestige = 50
		random = {
			chance = 35
			add_trait_proud_effect = yes
		}
		add_offmap_currency = {
			offmap = offmap_china
			value = 100
		}
	}
}

character_event = {
	id = JD.30012
	has_dlc = "Jade Dragon"
	
	desc = EVTDESC_JD_30012
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			offmap_china = {
				governor = {
					save_event_target_as = target_governor
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA_JD_30012
		add_offmap_currency = {
			offmap = offmap_china
			value = -100
		}
	}
	
	option = {
		name = EVTOPTB_JD_30012
		event_target:chinese_courtier = {
			hidden_tooltip = {
				imprison = ROOT
				add_character_modifier = { 
					name = house_arrest
					duration = -1
				}
				remove_character_modifier = the_dungeon
			}
			tooltip = {
				add_character_modifier = { 
					name = house_arrest
					duration = -1
				}
			}
		}
		random_list = {
			60 = {
                add_trait = arbitrary
                hidden_tooltip = { character_event = { id = 38266 } }
			}
			40 = {
                add_trait = cruel
                hidden_tooltip = { character_event = { id = 38259 } }
			}
		}
	}
}

###Chinese Trade Competition###

# Hidden Governor set-up event
character_event = {
    id = JD.40000
    
    hide_window = yes

    has_dlc = "Jade Dragon"
    
    is_triggered_only = yes
    
    only_playable = yes
    
    trigger = {
        NOT = { has_character_modifier = trade_competition_in_progress } # No new trade competition should fire while one is in progress
        offmap_china = {
            NOT = { has_policy = china_isolationist }
            NOT = { has_status = china_famine }
            NOT = { has_status = china_plague }
        }
    }
    
    immediate = {
		random_list = {
			95 = {}
			5 = {
				add_character_modifier = { # Setting timer
					name = trade_competition_in_progress # Should last 5 years
					hidden = yes
					duration = 1830
				}
				random_list = {
					25 = {
						modifier = { # No trade competition of the same type should fire within 20 years of one another
							factor = 0
							has_character_modifier = trade_competition_count
						}
						set_character_flag = trade_competition_count
						add_character_modifier = { # Setting timer
							name = trade_competition_count
							hidden = yes
							duration = 5475
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = BARON
								NOR = { 
									higher_tier_than = COUNT
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_1
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = BARON
								NOR = { 
									higher_tier_than = COUNT
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_2
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = BARON
								NOR = { 
									higher_tier_than = COUNT
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_3
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = BARON
								NOR = { 
									higher_tier_than = COUNT
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_4
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = BARON
								NOR = { 
									higher_tier_than = COUNT
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_5
						}
					}
					25 = {
						modifier = { # No trade competition of the same type should fire within 20 years of one another
							factor = 0
							has_character_modifier = trade_competition_duke
						}
						add_character_modifier = { # Setting timer
							name = trade_competition_duke
							hidden = yes
							duration = 5475
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = COUNT
								NOR = { 
									higher_tier_than = DUKE
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_1
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = COUNT
								NOR = { 
									higher_tier_than = DUKE
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_2
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = COUNT
								NOR = { 
									higher_tier_than = DUKE
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_3
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = COUNT
								NOR = { 
									higher_tier_than = DUKE
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_4
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = COUNT
								NOR = { 
									higher_tier_than = DUKE
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_5
						}
					}
					25 = {
						modifier = { # No trade competition of the same type should fire within 20 years of one another
							factor = 0
							has_character_modifier = trade_competition_king
						}
						add_character_modifier = { # Setting timer
							name = trade_competition_king
							hidden = yes
							duration = 5475
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = DUKE
								NOR = { 
									higher_tier_than = KING
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_1
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = DUKE
								NOR = { 
									higher_tier_than = KING
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_2
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = DUKE
								NOR = { 
									higher_tier_than = KING
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_3
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = DUKE
								NOR = { 
									higher_tier_than = KING
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_4
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = DUKE
								NOR = { 
									higher_tier_than = KING
									is_nomadic = yes
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_5
						}
					}
					25 = {
						modifier = { # No trade competition of the same type should fire within 15 years of one another
							factor = 0
							has_character_modifier = trade_competition_emperor
						}
						modifier = { # No point in having this competition if there is only one emperor in range
							factor = 0
							NOT = {
								any_independent_ruler = {
									count = 2
									tier = EMPEROR
								}
							}
						}
						add_character_modifier = { # Setting timer
							name = trade_competition_emperor
							hidden = yes
							duration = 5475
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = KING
								NOR = {
									is_nomadic = yes
									is_offmap_governor = yes #makes sure it doesn't fire for the governor themselves
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_1
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = KING
								NOR = {
									is_nomadic = yes
									is_offmap_governor = yes #makes sure it doesn't fire for the governor themselves
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_2
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = KING
								NOR = {
									is_nomadic = yes
									is_offmap_governor = yes #makes sure it doesn't fire for the governor themselves
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_3
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = KING
								NOR = {
									is_nomadic = yes
									is_offmap_governor = yes #makes sure it doesn't fire for the governor themselves
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_4
						}
						random_playable_ruler = {
							limit = {
								china_diplo_interaction_trigger = yes
								any_demesne_province = {
									trade_route = silk_road
								}
								higher_tier_than = KING
								NOR = {
									is_nomadic = yes
									is_offmap_governor = yes #makes sure it doesn't fire for the governor themselves
									has_character_modifier = china_raid_active
									has_character_modifier = china_raid_grace_cd
								}
								NOT = { has_character_flag = trade_competition_participant }
							}
							set_character_flag = trade_competition_participant
							save_event_target_as = trade_competitor_5
						}
					}
				}
				random_list = {
					10 = { # Build a city on the Silk Road
						modifier = {
							factor = 0
							NOT = {
								any_trade_route_province = {
									trade_route = silk_road
									has_empty_holding = yes
								}
							}
						}
						modifier = {
							factor = 0
							has_character_flag = trade_competition_count # Should not fire for counts who would likely have trouble getting enough gold to build a city anyway
						}
						event_target:trade_competitor_1 = {
							set_character_flag = trade_competition_build_city
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_2 = {
							set_character_flag = trade_competition_build_city
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_3 = {
							set_character_flag = trade_competition_build_city
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_4 = {
							set_character_flag = trade_competition_build_city
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_5 = {
							set_character_flag = trade_competition_build_city
							letter_event = { id = JD.40001 }
						}
						clr_character_flag = trade_competition_count
						offmap_china = {
							governor = {
								character_event = { id = JD.40006 days = 1825 } # Failure event in case nobody built a city
							}
						}
					}
					10 = { # Accumulate Prestige
						event_target:trade_competitor_1 = {
							set_character_flag = trade_competition_accumulate_prestige
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_2 = {
							set_character_flag = trade_competition_accumulate_prestige
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_3 = {
							set_character_flag = trade_competition_accumulate_prestige
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_4 = {
							set_character_flag = trade_competition_accumulate_prestige
							letter_event = { id = JD.40001 }
						}
						event_target:trade_competitor_5 = {
							set_character_flag = trade_competition_accumulate_prestige
							letter_event = { id = JD.40001 }
						}
						clr_character_flag = trade_competition_count
						offmap_china = {
							governor = {
								character_event = { id = JD.40008 days = 913 }
							}
						}
					}
				}
			}
		}
    }
}

# A letter arrives from the governor stating that the Emperor is looking for 'the best trade partner'
letter_event = {
    id = JD.40001
	has_dlc = "Jade Dragon"
    
    desc = {
        text = EVTDESC_JD_40001_A
        trigger = { has_character_flag = trade_competition_build_city }
    }
    desc = {
        text = EVTDESC_JD_40001_C
        trigger = { has_character_flag = trade_competition_accumulate_prestige } 
    }
    border = GFX_event_letter_frame_diplomacy
    
    is_triggered_only = yes
    
    # Accept the challenge - City
    option = {
        name = EVTOPTA_JD_40001
        if = {
            limit = {
                has_character_flag = trade_competition_build_city
            }
            custom_tooltip = { text = trade_competition_build_city_TT }
        }
        if = {
            limit = {
                has_character_flag = trade_competition_accumulate_prestige
            }
            custom_tooltip = { text = trade_competition_prestige_TT }
        }
        any_playable_ruler = {
            limit = {
                has_character_flag = trade_competition_participant
            }
            show_portrait = yes
        }
    }
}

# On-action start event for city construction
character_event = {
    id = JD.40002
	has_dlc = "Jade Dragon"
    
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_character_flag = trade_competition_build_city
    }
    
    immediate = {
        set_character_flag = started_building_holding
    }
}


# On-action completion event for city construction
character_event = {
    id = JD.40003
	has_dlc = "Jade Dragon"
    
    hide_window = yes
    is_triggered_only = yes
    
    trigger = {
        has_character_flag = trade_competition_build_city
        has_character_flag = started_building_holding
        FROM = { holding_type = city }
    }

    immediate = {
        FROM = { save_event_target_as = trade_competition_new_city }
        set_character_flag = trade_competition_city_winner
        save_event_target_as = trade_competition_city_winner
        clr_character_flag = started_building_holding
        offmap_china = {
            governor = {
                character_event = { id = JD.40004 } # Result ping event
            }
        }
    }
}

# Governor Ping event for City Construction
character_event = {
    id = JD.40004
	has_dlc = "Jade Dragon"
    
    hide_window = yes
    is_triggered_only = yes
    
    immediate = {
        any_playable_ruler = {
            limit = {
                has_character_flag = trade_competition_build_city
            }
            letter_event = { id = JD.40005 } # Result event
        }
    }
}

# A letter arrives from the governor naming the winner
letter_event = {
    id = JD.40005
	has_dlc = "Jade Dragon"
    
    desc = {
        text = EVTDESC_JD_40005_A # winner
        trigger = { has_character_flag = trade_competition_city_winner }
    }
    desc = {
        text = EVTDESC_JD_40005_B # loser
        trigger = { NOT = { has_character_flag = trade_competition_city_winner } }
    }
    border = GFX_event_letter_frame_diplomacy
    
    is_triggered_only = yes

    # Hurray I won!
    option = {
        name = EVTOPTA_JD_40005
        trigger = {
            has_character_flag = trade_competition_city_winner
        }
		sound_effect = china_grace_gain
		
        clr_character_flag = trade_competition_build_city
        clr_character_flag = trade_competition_participant
        clr_character_flag = trade_competition_city_winner
        add_offmap_currency = {
            offmap = offmap_china
            value = 1000
        }
        if = {
            limit = {
                NOT = {
                    has_character_modifier = chinese_imperial_trade_contract
                }
            }
            add_character_modifier = {
                modifier = chinese_imperial_trade_contract
                years = 15
            }
        }
    }

    # Boo I lost :(
    option = {
        name = EVTOPTB_JD_40005
        trigger = {
            NOT = { has_character_flag = trade_competition_city_winner }
        }
        event_target:trade_competition_city_winner = {
            show_portrait = yes
        }
        add_offmap_currency = {
            offmap = offmap_china
            value = -100
        }
        clr_character_flag = trade_competition_build_city
        clr_character_flag = trade_competition_participant
    }
}

# Governor Ping failure event for City Construction
character_event = {
    id = JD.40006
	has_dlc = "Jade Dragon"
    
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        AND = {
            event_target:trade_competitor_1 = {
                has_character_flag = trade_competition_build_city
            }
            event_target:trade_competitor_2 = {
                has_character_flag = trade_competition_build_city
            }
            event_target:trade_competitor_3 = {
                has_character_flag = trade_competition_build_city
            }
            event_target:trade_competitor_4 = {
                has_character_flag = trade_competition_build_city
            }
            event_target:trade_competitor_5 = {
                has_character_flag = trade_competition_build_city
            }
        }
    }
    
    immediate = {
        event_target:trade_competitor_1 = { 
            letter_event = { id = JD.40007 }
        }
        event_target:trade_competitor_2 = { 
            letter_event = { id = JD.40007 }
        }
        event_target:trade_competitor_3 = { 
            letter_event = { id = JD.40007 }
        }
        event_target:trade_competitor_4 = { 
            letter_event = { id = JD.40007 }
        }
        event_target:trade_competitor_5 = { 
            letter_event = { id = JD.40007 }
        }
    }
}

# Nobody built a city failure event
letter_event = {
    id = JD.40007
	has_dlc = "Jade Dragon"
    
    desc = EVTDESC_JD_40007
    border = GFX_event_letter_frame_diplomacy
    
    is_triggered_only = yes

    # Damnit
    option = {
        name = EVTOPTA_JD_40007
        add_offmap_currency = {
            offmap = offmap_china
            value = -250
        }
        any_playable_ruler = {
            limit = {
                has_character_flag = trade_competition_participant
            }
            show_portrait = yes
        }
        clr_character_flag = trade_competition_participant
        clr_character_flag = started_building_holding
        clr_character_flag = trade_competition_build_city
    }
}

# Governor Ping event for half-time status update
character_event = {
    id = JD.40008
	has_dlc = "Jade Dragon"
    
    hide_window = yes
    is_triggered_only = yes
    
    immediate = {
        event_target:trade_competitor_1 = { 
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_2 = { 
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_3 = { 
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_4 = { 
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_5 = { 
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
				}
            }
            event_target:trade_competitor_1 = {
                set_character_flag = trade_competition_halftime_winner
                save_event_target_as = trade_competition_halftime_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
				}
            }
            event_target:trade_competitor_2 = {
                set_character_flag = trade_competition_halftime_winner
                save_event_target_as = trade_competition_halftime_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
				}
            }
            event_target:trade_competitor_3 = {
                set_character_flag = trade_competition_halftime_winner
                save_event_target_as = trade_competition_halftime_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
				}
            }
            event_target:trade_competitor_4 = {
                set_character_flag = trade_competition_halftime_winner
                save_event_target_as = trade_competition_halftime_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
				}
            }
            event_target:trade_competitor_5 = {
                set_character_flag = trade_competition_halftime_winner
                save_event_target_as = trade_competition_halftime_winner
            }
        }
    }
    after = {
        event_target:trade_competitor_1 = { 
            letter_event = { id = JD.40009 }
        }
        event_target:trade_competitor_2 = { 
            letter_event = { id = JD.40009 }
        }
        event_target:trade_competitor_3 = { 
            letter_event = { id = JD.40009 }
        }
        event_target:trade_competitor_4 = { 
            letter_event = { id = JD.40009 }
        }
        event_target:trade_competitor_5 = { 
            letter_event = { id = JD.40009 }
        }
        character_event = { id = JD.40010 days = 912 }
    }
}

# Half-time status update event
character_event = {
    id = JD.40009
	has_dlc = "Jade Dragon"
    
    desc = {
        text = EVTDESC_JD_40009_A # ahead
        trigger = { has_character_flag = trade_competition_halftime_winner }
    }
    desc = {
        text = EVTDESC_JD_40009_B # not ahead
        trigger = { NOT = { has_character_flag = trade_competition_halftime_winner } }
    }
    picture = GFX_evt_china_stable
    border = GFX_event_normal_frame_diplomacy
    
    is_triggered_only = yes
    
    # I'm da bestest!
    option = {
        name = EVTOPTA_JD_40009
        trigger = {
            has_character_flag = trade_competition_halftime_winner
        }
        custom_tooltip = { text = trade_competition_prestige_halftime_winner_TT }
        clr_character_flag = trade_competition_halftime_winner
        any_playable_ruler = {
            limit = {
                has_character_flag = trade_competition_participant
            }
            show_portrait = yes
        }
    }

    # Got to work harder
    option = {
        name = EVTOPTB_JD_40009
        trigger = {
            NOT = { has_character_flag = trade_competition_halftime_winner }
        }
        custom_tooltip = { text = trade_competition_prestige_halftime_loser_TT }
        event_target:trade_competition_halftime_winner = {
            show_portrait = yes
        }
        any_playable_ruler = {
            limit = {
                has_character_flag = trade_competition_participant
            }
            show_portrait = yes
        }
    }
}

# Governor Ping event for end result
character_event = {
    id = JD.40010
	has_dlc = "Jade Dragon"
    
    hide_window = yes
    is_triggered_only = yes
    
    immediate = {
        event_target:trade_competitor_1 = {
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_2 = {
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_3 = {
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_4 = {
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        event_target:trade_competitor_5 = {
            set_variable = { which = trade_competitor_prestige value = 0 }
            export_to_variable = { which = trade_competitor_prestige value = prestige }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_1
						}
					}
				}
            }
            event_target:trade_competitor_1 = {
                set_character_flag = trade_competition_winner
                save_event_target_as = trade_competition_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_2
						}
					}
				}
            }
            event_target:trade_competitor_2 = {
                set_character_flag = trade_competition_winner
                save_event_target_as = trade_competition_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_3
						}
					}
				}
            }
            event_target:trade_competitor_3 = {
                set_character_flag = trade_competition_winner
                save_event_target_as = trade_competition_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
					event_target:trade_competitor_5 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_4
						}
					}
				}
            }
            event_target:trade_competitor_4 = {
                set_character_flag = trade_competition_winner
                save_event_target_as = trade_competition_winner
            }
        }
        if = {
            limit = {
				NOT = {
					event_target:trade_competitor_1 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
					event_target:trade_competitor_2 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
					event_target:trade_competitor_3 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
					event_target:trade_competitor_4 = {
						check_variable = {
							which = trade_competitor_prestige
							which = event_target:trade_competitor_5
						}
					}
				}
            }
            event_target:trade_competitor_5 = {
                set_character_flag = trade_competition_winner
                save_event_target_as = trade_competition_winner
            }
        }
    }
    after = {
        event_target:trade_competitor_1 = { 
            letter_event = { id = JD.40011 }
        }
        event_target:trade_competitor_2 = { 
            letter_event = { id = JD.40011 }
        }
        event_target:trade_competitor_3 = { 
            letter_event = { id = JD.40011 }
        }
        event_target:trade_competitor_4 = { 
            letter_event = { id = JD.40011 }
        }
        event_target:trade_competitor_5 = { 
            letter_event = { id = JD.40011 }
        }
    }
}

# Ending notification event
letter_event = {
    id = JD.40011
	has_dlc = "Jade Dragon"
    
    desc = {
        text = EVTDESC_JD_40011_A # winner trade modifier
        trigger = { has_character_flag = trade_competition_winner_modifier }
    }
    desc = {
        text = EVTDESC_JD_40011_B # loser
        trigger = { NOT = { has_character_flag = trade_competition_winner } }
    }
    desc = {
        text = EVTDESC_JD_40011_C # winner artifact
        trigger = { has_character_flag = trade_competition_winner_artifact }
    }
    desc = {
        text = EVTDESC_JD_40011_D # winner grae
        trigger = { has_character_flag = trade_competition_winner_grace }
    }
    border = GFX_event_letter_frame_diplomacy
    
    is_triggered_only = yes

    immediate = {
        if = {
            limit = { has_character_flag = trade_competition_winner }
            if = {
                limit = {
                    NOT = {
                        has_character_modifier = chinese_imperial_trade_contract
                    }
                }
                set_character_flag = trade_competition_winner_modifier
            }
            else_if  = {
                limit = { 
                    NOT = { any_artifact = { has_artifact_flag = chinese } }
                }
                offmap_china = {
                    governor = {
                        random_list = {
                            5 = { 
                                add_artifact = jade_dragon
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            15 = { 
                                add_artifact = chinese_dragon_amulet
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            40 = {
                                add_artifact = chinese_artwork
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            40 = { 
                                add_artifact = chinese_calligraphy
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            40 = { 
                                add_artifact = chinese_sculpture
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            20 = { 
                                add_artifact = chinese_ceremonial_robes
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            20 = { 
                                trigger = { 
                                    ROOT = { has_education_martial_trigger = yes }
                                }
                                modifier = {
                                    factor = 0.1
                                    ROOT = { has_artifact = art_of_war }
                                }
                                modifier = {
                                    factor = 2
                                    ROOT = { martial = 14 }
                                }
                                modifier = {
                                    factor = 2
                                    ROOT = { martial = 18 }
                                }
                                modifier = {
                                    factor = 2
                                    ROOT = { martial = 22 }
                                }
                                modifier = {
                                    factor = 2
                                    ROOT = { martial = 24 }
                                }
                                add_artifact = art_of_war
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            20 = { 
                                add_artifact = silk_shroud
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            15 = { 
                                add_artifact = water_clock
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            15 = { 
                                add_artifact = jian_sword
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                            10 = { 
                                add_artifact = classic_of_poetry
                                new_artifact = {
                                    transfer_artifact = {
                                        from = PREV
                                        to = ROOT
                                    }
                                    save_event_target_as = chinese_artifact
                                }
                            }
                        }
                    }
                }
                set_character_flag = trade_competition_winner_artifact
            }
            else = {
                set_character_flag = trade_competition_winner_grace
            }
        }
    }
    
    # Hurray
    option = {
        name = EVTOPTA_JD_40005
        trigger = {
            has_character_flag = trade_competition_winner
        }
		
		sound_effect = china_grace_gain
		
        clr_character_flag = trade_competition_winner
        clr_character_flag = trade_competition_participant
        clr_character_flag = trade_competition_accumulate_prestige
        if = {
            limit = { has_character_flag = trade_competition_winner_modifier }
            add_character_modifier = {
                modifier = chinese_imperial_trade_contract
                years = 15
            }
            add_offmap_currency = {
                offmap = offmap_china
                value = 750
            }
            clr_character_flag = trade_competition_winner_modifier
        }
        if = {
            limit = { has_character_flag = trade_competition_winner_artifact }
            tooltip = {
                event_target:chinese_artifact = { 
                    show_scope_change = no
                    transfer_artifact = {
                        from = FROM
                        to = ROOT
                    }
                }
            }
            add_offmap_currency = {
                offmap = offmap_china
                value = 750
            }
            clr_character_flag = trade_competition_winner_artifact
        }
        if = {
            limit = { has_character_flag = trade_competition_winner_grace }
            add_offmap_currency = {
                offmap = offmap_china
                value = 1500
            }
            clr_character_flag = trade_competition_winner_grace
        }
    }

    # Boo
    option = {
        name = EVTOPTB_JD_40005
        trigger = {
            NOT = { has_character_flag = trade_competition_winner }
        }
		
        event_target:trade_competition_winner = {
            show_portrait = yes
        }
        clr_character_flag = trade_competition_participant
        clr_character_flag = trade_competition_accumulate_prestige
        add_offmap_currency = {
            offmap = offmap_china
            value = -100
        }
    }
}

### Chinese Noble escapes to your court ###
character_event = {
	id = JD.70000
	hide_window = yes
	is_triggered_only = yes

    only_capable = yes
    has_dlc = "Jade Dragon"
    prisoner = no
    min_age = 16
	only_playable = yes
	
	trigger = { 
        NOT = { offmap_china = { governor = { character = ROOT } } } #makes sure it doesn't fire for the governor themselves
		NOT = { has_character_flag = escaped_chinese_noble }
        is_inaccessible_trigger = no
        china_diplo_interaction_trigger = yes
        offmap_china = {
            NOR = {
                has_status = china_civil_war
                has_status = china_plague
            }
        }
    }

	immediate = {
        if = { #Quick fix to reduce the amount of time the AI gets the events
            limit = {
                ai = yes
            }
            random = {
                chance = 95
                break = yes
            }
        }    

    	offmap_china = {
			offmap_ruler = {
				save_event_target_as = chinese_emperor
			}
    	}
	
    	set_character_flag = escaped_chinese_noble
	
		create_character = {
			random_traits = yes
			dynasty = actually_culture
			religion = taoist
			culture = han
            historical = yes
		}
	
		new_character = {
			emf_new_character_noble = yes
			set_character_flag = originated_from_chinese_court
            set_character_flag = no_court_invites
			set_character_flag = ignore_refund
            set_character_flag = is_escaped_chinese_noble
			save_event_target_as = escaped_chinese_noble
			character_event = { id = JD.70001 days = 1 }
		}
	}
}

character_event = {
	id = JD.70001
	has_dlc = "Jade Dragon"
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			character_event = { id = JD.70002 days = 1 }
		}
	}
}

character_event = {		#Escaped Chinese Noble appears
	id = JD.70002
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_70002
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_JD_70002
		
		custom_tooltip = { text = EVTOPTA_JD_70002_TT }
		
		event_target:escaped_chinese_noble = {
			opinion = {
				modifier = opinion_very_grateful
				who = ROOT
				years = 5
			}
		}
		
		hidden_effect = {
			random_list = {
				50 = {
					offmap_china = { 
						governor = { character_event = { id = JD.70007 days = 30 } } 
					}
				}
				50 = {
					character_event = { id = JD.70004 days = 100 }
				}
			}
		}
	}
		
	option = {
		name = EVTOPTC_JD_70002
		
		custom_tooltip = { text = EVTOPTC_JD_70002_TT }
		
		event_target:escaped_chinese_noble = {
			opinion = {
				modifier = opinion_very_grateful
				who = ROOT
				years = 5
			}
		}
			
		hidden_effect = {
			random_list = {
    			50 = { character_event = { id = JD.70005 days = 60 } }
    			50 = { character_event = { id = JD.70008 days = 60 } }
			}
		}	
	}
	
	option = {
		name = EVTOPTB_JD_70002
		
		event_target:escaped_chinese_noble = {
			hidden_effect = {
				leave_court_and_die_effect = yes
			}
		}
		
		custom_tooltip = { text = EVTOPTB_JD_70002_TT }
		
		#event_target:escaped_chinese_noble = {
		#	opinion = {
		#		modifier = opinion_disappointed
		#		who = ROOT
		#		years = 5
		#	}
		#}
	}
}
	
character_event = {
	id = JD.70007
	has_dlc = "Jade Dragon"
	hide_window = yes
	is_triggered_only = yes
	
	
	immediate = {
		FROM = {
			letter_event = { id = JD.70003 days = 1 }
		}
	}
}

letter_event = {			#China finds out
	id = JD.70003
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_70003
    border = GFX_event_letter_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		event_target:escaped_chinese_noble = {
			is_alive = yes
            is_ruler = no
		}
	}
	
	option = {
		name = EVTOPTA_JD_70003
		
		custom_tooltip = { text = EVTOPTA_JD_70003_TT }
		
		character_event = { id = JD.70005 days = 60 }
	}
	
	option = {
		name = EVTOPTB_JD_70003
		
		custom_tooltip = { text = EVTOPTB_JD_70003_TT }
		
		detract_grace_major_effect = yes
		
		hidden_effect = {
			random_list = {
    			50 = { character_event = { id = JD.70009 days = 60 } }
    			50 = { character_event = { id = JD.70004 days = 100 } }
			}
		}
	}
}

character_event = {			#China does not find out
	id = JD.70004
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_70004
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_diplomacy
	
	hide_from = yes

	is_triggered_only = yes
	
	trigger = {
		event_target:escaped_chinese_noble = {
			is_alive = yes
			prisoner = no # This will effectively break the chain if the courtier is imprisoned... leaving no trace of the end of the chain.
			is_incapable = no
            is_ruler = no
		}
	}
	
	option = {
		name = EVTOPTA_JD_70004
		
		if = {
			limit = {
				NOT = {
					has_artifact = chinese_dragon_amulet
				}
			}
			add_artifact = chinese_dragon_amulet
		}
		else_if = {
			limit = {
				NOT = {
					has_artifact = silk_shroud
				}
			}
			add_artifact = silk_shroud
		}
		else = {
			add_artifact = chinese_prev_emperor_sculpture
			new_artifact = {
				set_name="chinese_figurine_name"
			}
		}
		
		event_target:escaped_chinese_noble = {
            show_portrait = yes
        }
		
		custom_tooltip = {
			text = EVTOPTA_JD_70004_TT
			hidden_effect = {
				event_target:escaped_chinese_noble = {
					leave_court_and_die_effect = yes
				}
			}
		}
	}	
}


character_event = {			#You let China know
	id = JD.70005
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_70005
    picture = GFX_evt_china_diplomatic_success
    border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	
	trigger = {
		event_target:escaped_chinese_noble = {
			is_alive = yes
            is_ruler = no
		}
	}
	
	option = {
		name = EVTOPTA_JD_70005
		
		sound_effect = china_grace_gain
		add_grace_medium_effect = yes
	
		event_target:escaped_chinese_noble = {
			death = {
				death_reason = death_executed_by_chinese_emperor
			}
		}
	}
}

character_event = {			#You let China know but the noble escapes
	id =  JD.70008
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_70008
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_diplomacy
 
	is_triggered_only = yes
	
	trigger = {
		event_target:escaped_chinese_noble = {
			is_alive = yes
            is_ruler = no
		}
	}
	
	immediate = {
		detract_grace_minor_effect = yes
	
		event_target:escaped_chinese_noble = {
			leave_court_and_die_effect = yes
		}
	}
	
	option = {
		name = EVTOPTA_JD_70008
		tooltip = {
			detract_grace_minor_effect = yes
		}
	}
}

character_event = {			#China Assassinates the noble
	id = JD.70009
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_70009
    picture = GFX_evt_shadow
    border = GFX_event_normal_frame_diplomacy
	
	hide_from = yes

	is_triggered_only = yes
	
	trigger = {
		event_target:escaped_chinese_noble = {
			is_alive = yes
            is_ruler = no
		}
	}
	
	immediate = {
		event_target:escaped_chinese_noble = {
			death = {
				death_reason = death_murder_unknown_strangle
				killer = event_target:chinese_emperor
			}
		}
	}
	
	option = {
		name = EVTOPTA_JD_70009
		tooltip = {
			event_target:escaped_chinese_noble = {
				death = {
					death_reason = death_murder_unknown_strangle
					killer = event_target:chinese_emperor
				}
			}
		}
	}
}

#Inform of China's response to you breaking free via decision, first ping to get Governor's portrait
character_event = {
    id = JD.60010
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = { FROM = { letter_event = { id = JD.60011 } } }
}
letter_event = {
    id = JD.60011
	has_dlc = "Jade Dragon"
    desc = EVT_DESC_JD_60011

    is_triggered_only = yes

    option = {
        name = EVT_OPTA_JD_60011
    }
}


### Chinese Refugees appear at your court (Hidden start) ###
character_event = {
    id = JD.10030
    hide_window = yes
    is_triggered_only = yes

    only_capable = yes
    has_dlc = "Jade Dragon"
    prisoner = no
    min_age = 10
    only_playable = yes
    
    trigger = {
        NOT = { offmap_china = { governor = { character = ROOT } } } #makes sure it doesn't fire for the governor themselves
        NOT = { has_character_flag = received_chinese_refugee }
        is_inaccessible_trigger = no
        china_diplo_interaction_trigger = yes
        OR = {
            NOT = { any_courtier_or_vassal = { has_minor_title = title_administrator } }
            NOT = { any_courtier_or_vassal = { has_minor_title = title_master_engineer } }
            AND = {
                has_dlc = Reapers
                NOT = { any_courtier_or_vassal = { has_minor_title = title_court_physician } }
            }
        }

        offmap_china = {
            OR = {
                has_status = china_mongol_invasion
                has_status = china_jurchen_invasion
                has_status = china_civil_war
                has_status = china_famine
                has_status = china_plague
            }
        }
    }
    weight_multiplier = {
        factor = 1
        
        modifier = {
            offmap_china = { has_policy = china_isolationist }
            factor = 0.8
        }        
        modifier = {
            offmap_china = { has_status = china_civil_war }
            factor = 0.5
        }
        modifier = {
            offmap_china = { has_status = china_famine }
            factor = 0.25
        }
        modifier = {
            offmap_china = { has_status = china_plague }
            factor = 0.25
        }

        modifier = {       
            any_demesne_province = {
                trade_route = silk_road
            }
            factor = 1.5
        }

    }

    immediate = {
        offmap_china = {
            offmap_ruler = {
                save_event_target_as = chinese_emperor
            }
        }

        random_list = {
            10 = {
                trigger = { NOT = { any_courtier_or_vassal = { has_minor_title = title_administrator } } }
                set_character_flag = received_administrator
            }
            10 = {
                trigger = { NOT = { any_courtier_or_vassal = { has_minor_title = title_master_engineer } } }
                set_character_flag = received_engineer
            }
            10 = {
                set_character_flag = received_strategist
            }
            10 = {
                trigger = {
					NOT = {
						any_courtier_or_vassal = {
							has_minor_title = title_court_physician
						}
					}
					has_dlc = Reapers
					OR = {
						has_game_rule = { name = gender value = all }
						NOT = { has_religion_feature = religion_matriarchal }
					}
				}
                set_character_flag = received_physician
            }
        }
    
        set_character_flag = received_chinese_refugee
    
        ####

        trigger_switch = {
            on_trigger = has_character_flag
            received_administrator = {
                random_list = {
                    50 = { #Female
                        trigger = {
                            has_game_rule = {
                                name = gender
                                value = all
                            }
                        }
                        create_character = {
                            age = 30
                            religion = taoist
                            culture = han
                            dynasty = actually_culture
                            female = yes
                            health = 6
                            random_traits = no
                            attributes = {
                                martial = 2
                                diplomacy = 4
                                stewardship = 6
                                intrigue = 2
                                learning = 5
                            }
                        }
                    }
                    50 = { #Male
                        create_character = {
                            age = 30
                            religion = taoist
                            culture = han
                            dynasty = actually_culture
                            female = no
                            health = 6
                            random_traits = no
                            attributes = {
                                martial = 2
                                diplomacy = 4
                                stewardship = 6
                                intrigue = 2
                                learning = 5
                            }
                        }
                    }
                }
                new_character = {
					emf_dna_set_flags_for_high_health = yes
                    #Education & other basic stuff
                    save_event_target_as = chinese_administrator
                    save_event_target_as = chinese_refugee

                    add_character_modifier = {
                        name = jd_administrator
                        duration = -1
                    }
                    set_character_flag = is_chinese_administrator
                    set_character_flag = originated_from_chinese_court
                    set_character_flag = chinese_courtier_original_court_@PREV
                    set_character_flag = no_court_invites
					set_character_flag = ignore_refund
                    random_list = {
                        30 = { add_trait = thrifty_clerk }
                        15 = { add_trait = fortune_builder }
                        5 = { add_trait = midas_touched }
                        30 = { add_trait = martial_cleric }
                        15 = { add_trait = scholarly_theologian }
                        5 = { add_trait = mastermind_theologian }
                    }
                    random_list = {
                        20 = { } #Nothing
                        30 = { add_trait = erudite }
                        25 = { add_trait = shrewd }
                        15 = { add_trait = quick }
                        5 = { add_trait = genius }
                        5 = { add_trait = fair }
                    }
                    random = {
                        chance = 10
                        add_trait = homosexual
                    }
                    opinion = {
                        who = PREV
                        modifier = opinion_servant
                        months = 1200
                    }

                    #Add archetype 
                    random_list = {
                        #Conservative 
                        25 = {
                            set_character_flag = archetype_conservative
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    50 = { add_trait = scholar }
                                    50 = { add_trait = administrator }
                                }
                            }
                            random = {
                                chance = 50
                                add_trait = zealous
                            }
                            add_trait = stubborn
                            add_trait = temperate
                            random_list = {
                                20 = { add_trait = greedy }
                                20 = { add_trait = wroth }
                                20 = { add_trait = deceitful }
                                20 = { add_trait = shy }
                                20 = { add_trait = cruel }
                            }
                            random_list = {
                                25 = { add_trait = poet }
                                25 = { add_trait = chaste }
                                25 = { 
                                    add_trait = patient
                                    remove_trait = wroth
                                }
                                25 = { add_trait = just }
                            }
                        }
                        #Supportive
                        25 = {
                            set_character_flag = archetype_supportive
                            if = {
                                limit = { has_dlc = "Way of Life" }    
                                random_list = {
                                    50 = { add_trait = administrator }
                                    25 = { add_trait = scholar }
                                    25 = { add_trait = gardener }
                                }
                            }
                            add_trait = humble
                            add_trait = patient
                            random_list = {
                                33 = { add_trait = slothful }
                                33 = { add_trait = craven }
                                33 = { add_trait = shy }
                            }
                            random_list = {
                                25 = { add_trait = content }
                                25 = { add_trait = charitable }
                                25 = { add_trait = kind }
                                25 = { add_trait = trusting }
                            }      
                        }
                        #Decisive
                        25 = {
                            set_character_flag = archetype_decisive
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    75 = { add_trait = administrator }
                                    25 = { add_trait = architect }
                                }
                            }
                            add_trait = ambitious
                            add_trait = cynical
                            random_list = {
                                20 = { add_trait = cruel }
                                20 = { add_trait = stubborn }
                                20 = { add_trait = greedy }
                                20 = { add_trait = wroth }
                                20 = { add_trait = proud }
                            }
                            random_list = {
                                20 = { add_trait = falconer }
                                20 = { add_trait = diligent }
                                20 = { add_trait = brave }
                                20 = { add_trait = honest }
                                20 = { add_trait = gregarious }
                            }    
                        }
                        #Sociable
                        25 = {
                            set_character_flag = archetype_sociable
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    25 = { add_trait = administrator }
                                    30 = { add_trait = socializer }
                                    25 = { add_trait = hedonist}
                                    20 = {
                                        trigger = { is_female = yes }
                                        add_trait = seductress
                                        add_trait = lustful
                                    }
                                    20 = {
                                        trigger = { is_female = no }
                                        add_trait = seducer
                                        add_trait = lustful
                                    }
                                }
                            }
                            add_trait = gregarious
                            add_trait = charitable
                            random_list = {
                                25 = { add_trait = craven }
                                25 = { add_trait = envious }
                                25 = { add_trait = gluttonous }
                                25 = { add_trait = proud }
                            }
                            random_list = {
                                25 = { add_trait = poet }
                                25 = { add_trait = kind }
                                25 = { add_trait = honest }
                                25 = { add_trait = lustful }
                            }   
                        }
                    }
					emf_new_character_steward = yes
                }
                ###
            }
            received_engineer = {
                random_list = {
                    50 = { #Female
                        trigger = {
                            has_game_rule = {
                                name = gender
                                value = all
                            }
                        }
                        create_character = {
                            age = 30
                            religion = taoist
                            culture = han
                            dynasty = actually_culture
                            female = yes
                            health = 6
                            random_traits = no
                            attributes = {
                                martial = 5
                                diplomacy = 2
                                stewardship = 6
                                intrigue = 3
                                learning = 3
                            }
                        }
                    }
                    50 = { #Male
                        create_character = {
                            age = 30
                            religion = taoist
                            culture = han
                            dynasty = actually_culture
                            female = no
                            health = 6
                            random_traits = no
                            attributes = {
                                martial = 5
                                diplomacy = 2
                                stewardship = 6
                                intrigue = 3
                                learning = 3
                            }
                        }
                    }
                }
                new_character = {
					emf_dna_set_flags_for_high_health = yes
                    #Education & other basic stuff
                    save_event_target_as = chinese_master_engineer
                    save_event_target_as = chinese_refugee

                    add_character_modifier = {
                        name = jd_master_engineer
                        duration = -1
                    }
                    set_character_flag = is_chinese_master_engineer
                    set_character_flag = originated_from_chinese_court
                    set_character_flag = chinese_courtier_original_court_@PREV
                    set_character_flag = no_court_invites
					set_character_flag = ignore_refund
                    random_list = {
                        30 = { add_trait = thrifty_clerk }
                        15 = { add_trait = fortune_builder }
                        5 = { add_trait = midas_touched }
                        30 = { add_trait = tough_soldier }
                        15 = { add_trait = skilled_tactician }
                        5 = { add_trait = brilliant_strategist }
                    }
                    random_list = {
                        20 = { } #Nothing
                        20 = { add_trait = erudite }
                        20 = { add_trait = shrewd }
                        15 = { add_trait = quick }
                        5 = { add_trait = genius }
                        10 = { add_trait = robust }
                        5 = { add_trait = strong }
                        5 = { add_trait = fair }
                    }
                    random = {
                        chance = 10
                        add_trait = homosexual
                    }
                    opinion = {
                        who = PREV
                        modifier = opinion_servant
                        months = 1200
                    }

                    #Add archetype 
                    random_list = {
                        #Conservative
                        25 = {
                            set_character_flag = archetype_conservative
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    75 = { add_trait = architect }
                                    25 = { add_trait = theologian }
                                }
                            }
                            random = {
                                chance = 50
                                add_trait = zealous
                            }
                            add_trait = stubborn
                            add_trait = temperate
                            random_list = {
                                20 = { add_trait = greedy }
                                20 = { add_trait = wroth }
                                20 = { add_trait = deceitful }
                                20 = { add_trait = shy }
                                20 = { add_trait = cruel }
                            }
                            random_list = {
                                25 = { add_trait = poet }
                                25 = { add_trait = chaste }
                                25 = { 
                                    add_trait = patient
                                    remove_trait = wroth
                                }
                                25 = { add_trait = just }
                            }
                        }
                        #Supportive
                        25 = {
                            set_character_flag = archetype_supportive
                            if = {
                                limit = { has_dlc = "Way of Life" }    
                                random_list = {
                                    50 = { add_trait = architect }
                                    25 = { add_trait = socializer }
                                    25 = { add_trait = gardener }
                                }
                            }
                            add_trait = humble
                            add_trait = patient
                            random_list = {
                                33 = { add_trait = slothful }
                                33 = { add_trait = craven }
                                33 = { add_trait = shy }
                            }
                            random_list = {
                                25 = { add_trait = content }
                                25 = { add_trait = charitable }
                                25 = { add_trait = kind }
                                25 = { add_trait = trusting }
                            }      
                        }
                        #Decisive
                        25 = {
                            set_character_flag = archetype_decisive
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    50 = { add_trait = architect }
                                    50 = { add_trait = strategist }
                                }
                            }
                            add_trait = ambitious
                            add_trait = cynical
                            random_list = {
                                20 = { add_trait = cruel }
                                20 = { add_trait = stubborn }
                                20 = { add_trait = greedy }
                                20 = { add_trait = wroth }
                                20 = { add_trait = proud }
                            }
                            random_list = {
                                20 = { add_trait = falconer }
                                20 = { add_trait = diligent }
                                20 = { add_trait = brave }
                                20 = { add_trait = honest }
                                20 = { add_trait = gregarious }
                            }    
                        }
                        #Sociable
                        25 = {
                            set_character_flag = archetype_sociable
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    25 = { add_trait = architect }
                                    30 = { add_trait = socializer }
                                    25 = { add_trait = hedonist}
                                    20 = {
                                        trigger = { is_female = yes }
                                        add_trait = seductress
                                        add_trait = lustful
                                    }
                                    20 = {
                                        trigger = { is_female = no }
                                        add_trait = seducer
                                        add_trait = lustful
                                    }
                                }
                            }
                            add_trait = gregarious
                            add_trait = charitable
                            random_list = {
                                25 = { add_trait = craven }
                                25 = { add_trait = envious }
                                25 = { add_trait = gluttonous }
                                25 = { add_trait = proud }
                            }
                            random_list = {
                                25 = { add_trait = poet }
                                25 = { add_trait = kind }
                                25 = { add_trait = honest }
                                25 = { add_trait = lustful }
                            }   
                        }
                    }
					emf_new_character_steward = yes
                }
            }
            received_strategist = {
                random_list = {
                    50 = { #Female
                        trigger = { has_game_rule = { name = gender value = all } }
                        create_character = {
                            age = 30
                            religion = taoist
                            culture = han
                            dynasty = actually_culture
                            female = yes
                            health = 7
                            random_traits = no
                            attributes = {
                                martial = 6
                                diplomacy = 2
                                stewardship = 3
                                intrigue = 4
                                learning = 2
                            }
                        }
                    }
                    50 = { #Male
                        create_character = {
                            age = 30
                            religion = taoist
                            culture = han
                            dynasty = actually_culture
                            female = no
                            health = 7
                            random_traits = no
                            attributes = {
                                martial = 6
                                diplomacy = 2
                                stewardship = 3
                                intrigue = 4
                                learning = 2
                            }
                        }
                    }
                }
                new_character = {
					emf_dna_set_flags_for_high_health = yes
                    #Education & other basic stuff
                    save_event_target_as = chinese_strategist
                    save_event_target_as = chinese_refugee

                    add_character_modifier = {
                        name = jd_strategist
                        duration = -1
                    }
                    set_character_flag = is_chinese_strategist
                    set_character_flag = originated_from_chinese_court
                    set_character_flag = chinese_courtier_original_court_@PREV
                    set_character_flag = no_court_invites
					set_character_flag = ignore_refund
                    random_list = {
                        80 = { add_trait = skilled_tactician }
                        20 = { add_trait = brilliant_strategist }
                    }
                    random_list = {
                        20 = { add_trait = brave } 
                        20 = { add_trait = strong }
                        20 = { add_trait = shrewd }
                        40 = { add_trait = robust }
                    }
                    random_list = {
                        71 = { } #Nothing
                        20 = { add_scarred_tiered_effect = yes }
                        5 = { 
                            trigger = { has_dlc = Reapers }
                            add_trait = one_eyed 
                            change_martial = 1
                        }
                        2 = { 
                            trigger = { has_dlc = Reapers }
                            add_trait = one_handed
                            change_martial = 1
                        }
                        2 = { add_trait = ugly }
                    }
                    random = {
                        chance = 10
                        add_trait = homosexual
                    }
                    opinion = {
                        who = PREV
                        modifier = opinion_servant
                        months = 1200
                    }

                    #Add archetype 
                    random_list = {
                        #Conservative 
                        25 = {
                            set_character_flag = archetype_conservative
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                add_trait = strategist
                            }
                            add_trait = logistics_expert
                            if = {
                                limit = {
                                    offmap_china = {
                                        has_status = china_golden_age
                                    }
                                }
                                random_list = {
                                    33 = { add_trait = master_of_flame }
                                    33 = { add_trait = sapper } 
                                    33 = { add_trait = levy_coordinator }
                                }
                            }
                            random = {
                                chance = 50
                                add_trait = zealous
                            }
                            add_trait = stubborn
                            add_trait = temperate
                            random_list = {
                                20 = { add_trait = greedy }
                                20 = { add_trait = wroth }
                                20 = { add_trait = deceitful }
                                20 = { add_trait = shy }
                                20 = { add_trait = cruel }
                            }
                            random_list = {
                                25 = { add_trait = poet }
                                25 = { add_trait = chaste }
                                25 = { 
                                    add_trait = patient
                                    remove_trait = wroth
                                }
                                25 = { add_trait = just }
                            }
                        }
                        #Supportive
                        25 = {
                            set_character_flag = archetype_supportive
                            if = {
                                limit = { has_dlc = "Way of Life" }    
                                random_list = {
                                    50 = { add_trait = hunter }
                                    50 = { add_trait = strategist }
                                }
                            }
                            add_trait = sapper 
                            if = {
                                limit = {
                                    offmap_china = {
                                        has_status = china_golden_age
                                    }
                                }
                                random_list = {
                                    33 = { add_trait = master_of_flame }
                                    33 = { add_trait = logistics_expert } 
                                    33 = { add_trait = levy_coordinator }
                                }
                            }
                            add_trait = humble
                            add_trait = patient
                            random_list = {
                                30 = { add_trait = slothful }
                                70 = { add_trait = shy }
                            }
                            random_list = {
                                25 = { add_trait = content }
                                25 = { add_trait = charitable }
                                25 = { add_trait = kind }
                                25 = { add_trait = trusting }
                            }      
                        }
                        #Decisive
                        25 = {
                            set_character_flag = archetype_decisive
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    50 = { add_trait = strategist }
                                    50 = { add_trait = duelist }
                                }
                            }
                            add_trait = master_of_flame 
                            if = {
                                limit = {
                                    offmap_china = {
                                        has_status = china_golden_age
                                    }
                                }
                                random_list = {
                                    33 = { add_trait = logistics_expert }
                                    33 = { add_trait = levy_coordinator }
                                    33 = { add_trait = sapper }
                                }
                            }
                            add_trait = ambitious
                            add_trait = cynical
                            random_list = {
                                20 = { add_trait = cruel }
                                20 = { add_trait = stubborn }
                                20 = { add_trait = greedy }
                                20 = { add_trait = wroth }
                                20 = { add_trait = proud }
                            }
                            random_list = {
                                20 = { add_trait = falconer }
                                20 = { add_trait = diligent }
                                20 = { add_trait = brave }
                                20 = { add_trait = honest }
                                20 = { add_trait = gregarious }
                            }    
                        }
                        #Sociable
                        25 = {
                            set_character_flag = archetype_sociable
                            if = {
                                limit = { has_dlc = "Way of Life" }
                                random_list = {
                                    20 = { add_trait = duelist }
                                    40 = { add_trait = hunter }
                                    40 = { add_trait = gamer }
                                }
                            }
                            add_trait = levy_coordinator 
                            if = {
                                limit = {
                                    offmap_china = {
                                        has_status = china_golden_age
                                    }
                                }
                                random_list = {
                                    33 = { add_trait = master_of_flame }
                                    33 = { add_trait = logistics_expert } 
                                    33 = { add_trait = sapper }
                                }
                            }
                            add_trait = gregarious
                            add_trait = charitable
                            random_list = {
                                33 = { add_trait = envious }
                                33 = { add_trait = gluttonous }
                                33 = { add_trait = proud }
                            }
                            random_list = {
                                25 = { add_trait = falconer }
                                25 = { add_trait = kind }
                                25 = { add_trait = honest }
                                25 = { add_trait = lustful }
                            }   
                        }
                    }

                    #Add second commander trait
                    if = {
                        limit = { offmap_china = { has_status = china_golden_age } }
                        random_list = {
                            25 = {
                                trigger = { NOT = {trait = master_of_flame } }
                                add_trait = master_of_flame
                            }
                            25 = {
                                trigger = { NOT = {trait = logistics_expert } }
                                add_trait = logistics_expert
                            }
                            25 = {
                                trigger = { NOT = {trait = levy_coordinator } }
                                add_trait = levy_coordinator
                            }
                            25 = {
                                trigger = { NOT = {trait = sapper } }
                                add_trait = sapper
                            }
                        } 
                    }
					
					emf_new_character_noble = yes
                }
            }
            received_physician = {
                random_list = {
                    50 = { #Female
						trigger = {
                            has_game_rule = {
                                name = gender
                                value = all
                            }
                        }
                        create_character = {
                            age = 35
                            dynasty = actually_culture
                            religion = taoist
                            culture = han
                            female = yes
                            health = 6
                            random_traits = no
                            attributes = {
                                martial = 2
                                diplomacy = 5
                                stewardship = 3
                                intrigue = 3
                                learning = 6
                            }
                        }
                    }
                    50 = { #Male
						trigger = {
							OR = {
								has_game_rule = { name = gender value = all }
								ROOT = {
									NOT = { has_religion_feature = religion_matriarchal }
								}
							}
						}
                        create_character = {
                            age = 35
                            dynasty = actually_culture
                            religion = taoist
                            culture = han
                            female = no
                            health = 6
                            random_traits = no
                            attributes = {
                                martial = 2
                                diplomacy = 5
                                stewardship = 3
                                intrigue = 3
                                learning = 6
                            }
                        }
                    }
                }
                new_character = {
					emf_dna_set_flags_for_high_health = yes
                    #Education & other basic stuff
                    save_event_target_as = chinese_doctor
                    save_event_target_as = chinese_refugee

                    set_character_flag = is_chinese_doctor
                    set_character_flag = originated_from_chinese_court
                    set_character_flag = chinese_courtier_original_court_@PREV
                    set_character_flag = no_court_invites
					set_character_flag = ignore_refund
                    random_list = {
                        50 = { add_trait = scholarly_theologian }
                        25 = { add_trait = mastermind_theologian }
                    }
                    add_trait = physician
                    random_list = {
                        20 = { } #Nothing
                        30 = { add_trait = erudite }
                        30 = { add_trait = shrewd }
                        15 = { add_trait = quick }
                        5 = { add_trait = genius }
                    }
                    random_list = {
                        50 = { } #Nothing
                        25 = { add_trait = patient }
                        25 = { add_trait = diligent }
                    }
                    random = {
                        chance = 10
                        add_trait = homosexual
                    }
                    opinion = {
                        who = PREV
                        modifier = opinion_servant
                        months = 1200
                    }

                    #Add archetype 
                    random_list = {
                        20 = { #Combat medic
							set_character_flag = archetype_combat_medic
                            set_character_flag = archetype_decisive
                            random_list = {
                                50 = { add_trait = duelist }
                                50 = { add_trait = scholar }
                            }
                            add_scarred_tiered_effect = yes
                            add_trait = robust
                            random_list = {
                                60 = { } #Nothing
                                20 = { 
                                    trigger = { has_dlc = Reapers }
                                    add_trait = one_legged 
                                }
                                20 = { 
                                    trigger = { has_dlc = Reapers }
                                    add_trait = one_eyed 
                                }
                            }
                            add_trait = brave
                            random_list = {
                                30 = { } #Nothing
                                50 = { add_trait = cynical }
                                10 = {
                                    add_trait = cynical
                                    add_trait = depressed
                                }
                                10 = {
                                    add_trait = cynical
                                    add_trait = depressed
                                    add_trait = drunkard
                                }
                            }
                            random_list = {
                                50 = { } #Nothing
                                20 = { add_trait = kind }
                                30 = { add_trait = honest }
                            }
                        }
                        #Dr Jerk
                        15 = { 
                            set_character_flag = archetype_decisive
                            add_trait = scholar
                            add_trait = wroth
                            random_list = {
                                30 = { add_trait = proud }
                                30 = { add_trait = envious }
                                40 = { } #Nothing
                            }
                            add_trait = honest
                            add_trait = cynical
                            random = {
                                chance = 30
                                add_trait = drunkard
                            }
                            random_list = {
                                60 = { }
                                20 = {
									add_trait = clubfooted
                                    set_name = Wu #House
                                }
                                20 = {
                                    trigger = { has_dlc = Reapers }
                                    add_trait = one_legged
                                    set_name = Wu #House
                                }
                            }
                        }
                        10 = { #Mad genius 
                            set_character_flag = archetype_sociable
                            random_list = {
                                50 = { add_trait = impaler }
                                50 = { add_trait = mystic }
                            }
                            random_list = {
                                33 = { add_trait = drunkard } 
                                33 = { add_trait = lunatic }
                                33 = { add_trait = possessed }
                            }
                            add_trait = genius
                            remove_trait = shrewd
                            add_trait = paranoid
                            random_list = {
                                25 = { add_trait = gluttonous } 
                                25 = { add_trait = wroth }
                                25 = { add_trait = proud }
                                25 = { add_trait = greedy }
                            }   
                        }
                        20 = { #Herbalist
							set_character_flag = archetype_herbalist
                            set_character_flag = archetype_supportive
                            add_trait = gardener
                            add_trait = diligent
                            add_trait = humble
                            random_list = {
                                33 = { add_trait = content } 
                                33 = { add_trait = shy }
                                33 = { add_trait = poet }
                            }
                            random = {
                                chance = 50
                                add_trait = robust
                            }
                        }
                        20 = { #Health nut
                            set_character_flag = archetype_conservative
                            add_trait = mystic
                            add_trait = celibate
                            add_trait = chaste
                            add_trait = temperate
                            random_list = {
                                50 = { add_trait = craven } 
                                25 = { add_trait = shy }
                                25 = { add_trait = content }
                            }
                            set_focus = focus_scholarship
                        }
                        20 = { #Compassionate doctor
                            set_character_flag = archetype_supportive
                            random_list = {
                                50 = { add_trait = socializer }
                                50 = { add_trait = scholar }
                            }
                            add_trait = kind
                            add_trait = patient
                            random_list = {
                                25 = { add_trait = content } 
                                25 = { add_trait = humble }
                                25 = { add_trait = trusting }
                                25 = { add_trait = charitable }
                            }
                            set_focus = focus_family
                        }
                        15 = { #McDreamy
							set_character_flag = archetype_mcdreamy
                            set_character_flag = archetype_sociable
                            if = {
                                limit = { is_female = yes }
                                add_trait = seductress
                            }
                            if = {
                                limit = { is_female = no }
                                add_trait = seducer
                            }
                            random_list = {
                                50 = { } #Nothing
                                25 = { add_trait = poet }
                                25 = { add_trait = falconer }
                            }
                            random_list = {
                                30 = { add_trait = fair }
                                50 = { add_trait = strong }
                            }
                            add_trait = lustful
                            random_list = {
                                35 = { add_trait = ambitious }
                                35 = { add_trait = gregarious }
                                30 = { } #Nothing
                            }
                            set_focus = focus_seduction
                        }
                    }
                    if = {
                        limit = {
                            offmap_china = {
                                has_status = china_golden_age
                            }
                        }
                        change_learning = 5
                    }
					emf_new_character_priest = yes
					if = {
						limit = { has_character_flag = archetype_combat_medic }
						emf_dna_remove_trait_dwarf = yes
                        emf_dna_improve_homozygous_recessive_for_strength = yes
						remove_trait = delicate
						remove_trait = weak
					}
					if = {
						limit = { has_character_flag = archetype_herbalist }
						emf_dna_improve_homozygous_recessive_for_strength = yes
						remove_trait = delicate
						remove_trait = weak
					}
					if = {
						limit = { has_character_flag = archetype_mcdreamy }
						emf_dna_remove_negative_mendelian_traits_with_genetics = yes
						emf_dna_improve_homozygous_recessive_for_attractiveness = yes
						remove_trait = homely
						remove_trait = ugly
						emf_dna_improve_homozygous_recessive_for_strength = yes
						remove_trait = delicate
						remove_trait = weak
						if = {
							limit = { trait = giant }
							emf_dna_remove_trait_giant = yes
						}
					}
                }
            }
        }
        #### send ping...
        event_target:chinese_refugee = { character_event = { id = JD.10031 days = 1 } }
    }
}

#Hidden ping event
character_event = {
    id = JD.10031
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        set_character_flag = is_chinese_refugee
        FROM = { character_event = { id = JD.10032 } }
    }
}

#Visible event for player - gifted refugee appears... 
character_event = {
    id = JD.10032
	has_dlc = "Jade Dragon"
    picture = GFX_evt_chinese_bureaucrat
    border = GFX_event_normal_frame_diplomacy
    is_triggered_only = yes
    
    desc = {
        text = EVTDESC_JD_10032_A #chinese_administrator
        trigger = { has_character_flag = received_administrator }
    }
    desc = {
        text = EVTDESC_JD_10032_B #chinese_master_engineer
        trigger = { has_character_flag = received_engineer }
    }
    desc = {
        text = EVTDESC_JD_10032_C #chinese_strategist
        trigger = { has_character_flag = received_strategist }
    }
    desc = {
        text = EVTDESC_JD_10032_D #chinese_doctor
        trigger = { has_character_flag = received_physician }
    }


    option = { #Welcome to stay, Administrator
        name = EVTOPTA_JD_10032
        custom_tooltip = { text = EVTOPTA_JD_10032_TT }

        event_target:chinese_administrator = {
            show_scope_change = no
            if = {
                limit = {
                    offmap_china = {
                        has_status = china_golden_age
                    }
                }
                set_character_flag = jd_administrator_golden_age #so you can't reappoint during golden age to get better modifier
            }
            give_minor_title = title_administrator #effects in minor title definition
        }
        tooltip = {
            if = {
                limit = {
                    offmap_china = {
                        has_status = china_golden_age
                    }
                }
                add_character_modifier = {
                    name = employing_jd_administrator_golden_age
                    duration = -1
                }
            }
            else = {
                add_character_modifier = {
                    name = employing_jd_administrator
                    duration = -1
                }
            }
        }

        reverse_opinion = {
            who = event_target:chinese_refugee
            modifier = opinion_grateful
            months = 1200
        }

        trigger = {
            has_character_flag = received_administrator
        }
    }

    option = { #Welcome to stay, Engineer
        name = EVTOPTB_JD_10032
        custom_tooltip = { text = EVTOPTA_JD_10032_TT }

        event_target:chinese_master_engineer = { 
            show_scope_change = no
            if = {
                limit = {
                    offmap_china = {
                        has_status = china_golden_age
                    }
                }
                set_character_flag = china_master_engineer_golden_age #so you can't reappoint in golden age to get better effects
            }
            set_character_flag = master_engineer_just_spawned
            give_minor_title = title_master_engineer #effects in minor title definition
        }

        reverse_opinion = {
            who = event_target:chinese_refugee
            modifier = opinion_grateful
            months = 1200
        }

        trigger = {
            has_character_flag = received_engineer
        }
    }

    option = { #Welcome to stay, Strategist    
        name = EVTOPTC_JD_10032
        custom_tooltip = { text = EVTOPTA_JD_10032_TT } #(yes, the same as opt A)
        
         if = {
            limit = { 
                event_target:chinese_strategist = { can_hold_title = title_commander }
                can_grant_title = title_commander
            }
            event_target:chinese_strategist = {
                give_minor_title = title_commander
            }
        }

        reverse_opinion = {
            who = event_target:chinese_refugee
            modifier = opinion_grateful
            months = 1200
        }

        trigger = {
            has_character_flag = received_strategist
        }
    }

    option = { #Welcome to stay, Doctor
        name = EVTOPTD_JD_10032
        custom_tooltip = { text = EVTOPTA_JD_10032_TT }
        
        event_target:chinese_doctor = {
            show_scope_change = no
            give_minor_title = title_court_physician
        }

        reverse_opinion = {
            who = event_target:chinese_refugee
            modifier = opinion_grateful
            months = 1200
        }

        trigger = {
            has_character_flag = received_physician
        }
    }
    
    option = { #Opt out (they leave court and die)...
        name = {
            text = EVTOPTE_JD_10032_1 #"Surely this [chinese_refugee.GetManWoman] can find shelter elsewhere."
            trigger = {
                has_character_flag = received_administrator
            }
        }
        if = {
            limit = { has_character_flag = received_administrator }
            custom_tooltip = { text = EVTOPTE_JD_10032_1_TT } #"You send the [chinese_refugee.GetManWoman] away.\n"
        }

        name = {
            text = EVTOPTE_JD_10032_2 #"This is a waste of my time."
            trigger = {
                has_character_flag = received_engineer
            }
        }
        if = {
            limit = { has_character_flag = received_engineer }
            custom_tooltip = { text = EVTOPTE_JD_10032_1_TT }
        }

        name = {
            text = EVTOPTE_JD_10032_3 #"I'm sorry, but we can hardly afford to feed our own..."
            trigger = {
                has_character_flag = received_strategist
            }
        }
        if = {
            limit = { has_character_flag = received_strategist }
            custom_tooltip = { text = EVTOPTE_JD_10032_1_TT }
        }

        name = {
            text = EVTOPTE_JD_10032_4 #"I'm sure [chinese_refugee.GetSheHe] wants to be left alone"
            trigger = {
                has_character_flag = received_physician
            }
        }
        if = {
            limit = { has_character_flag = received_physician }
            custom_tooltip = { text = EVTOPTE_JD_10032_4_TT } #"You let the refugee be.\n"
        }
        
        hidden_effect = {
            event_target:chinese_refugee = {
                leave_court_and_die_effect = yes
            }
        }
    }
    

    after = { #clear (almost) all flags...
        clr_character_flag = received_administrator
        clr_character_flag = received_engineer
        clr_character_flag = received_strategist
        clr_character_flag = received_physician

        character_event = { id = JD.10035 days = 7300 } #clears final flag... (20 years delay)
    }
}


#clean up event
character_event = {
    id = JD.10035
	has_dlc = "Jade Dragon"
    hide_window = yes
    is_triggered_only = yes
    immediate = { clr_character_flag = received_chinese_refugee } #Now you can get the event again!
}

################
# Suzerain dies, inform tributary relationship ends
character_event = {
    id = JD.60015
    is_triggered_only = yes
    hide_window = yes
    only_rulers = yes

    trigger = {
        any_tributary = {
            ai = no
            is_tributary = { type = default }
        }
    }

    immediate = {
        any_tributary = {
            limit = {
                ai = no
                is_tributary = { type = default }
            }
            character_event = { id = JD.60016 }
        }
    }
}
character_event = {
    id = JD.60016
    desc = EVT_DESC_JD_60016
    picture = GFX_evt_bandits
    is_triggered_only = yes
    notification = yes
    option = { }
}

######
# Chinese Mini-Flavor Events
######

character_event = { # Traveling Teacher
	id = JD.7000
	desc = EVTDESC_JD_7000
    picture = GFX_evt_china_stable
	
	only_playable = yes
	only_capable = yes
    has_dlc = "Jade Dragon"
    prisoner = no
    war = no
    min_age = 16

	is_triggered_only = yes
	
	trigger = {
		any_realm_province = {
			trade_route = silk_road
		}
		NOR = {
			has_character_flag = traveling_teacher_visit
			is_inaccessible_trigger = yes
		}
		any_child = {
			ai = yes
			age = 6
			prisoner = no
			is_adult = no
			is_alive = yes
			host = { character = ROOT }
			is_incapable = no
			NOR = {
				has_character_flag = taught_by_traveling_teacher
				trait = inbred
				is_inaccessible_trigger = yes
			}
		}
		offmap_china = {
            NOR = {
                has_status = china_plague
				has_status = china_famine
            }
        }
	}
	
	immediate = {
		create_random_priest = {
			random_traits = yes
			dynasty = actually_culture
			female = no
			age = 42
			culture = han
			religion = taoist
			attributes = {
				diplomacy = 2
				learning = 14
				stewardship = 2
				intrigue = 2
				martial = 2
			}
			trait = poet
			trait = scholar
			trait = erudite
		}
		new_character = {
			remove_trait = dull
			
			remove_trait = mystic
			remove_trait = socializer
			remove_trait = gamer
			remove_trait = hedonist
			remove_trait = duelist
			remove_trait = hunter
			remove_trait = strategist
			remove_trait = administrator
			remove_trait = architect
			remove_trait = gardener
			remove_trait = schemer
			remove_trait = impaler
			remove_trait = seducer
			remove_trait = seductress
			remove_trait = theologian
			
			emf_new_character_priest = yes
			emf_dna_improve_homozygous_recessive_for_intelligence = yes
			remove_trait = dim
			remove_trait = slow
			remove_trait = imbecile
			
			set_character_flag = originated_from_chinese_court
			set_character_flag = ignore_refund
			
			save_event_target_as = traveling_teacher
		}
		random_realm_province = {
			limit = {
				trade_route = silk_road
			}
			save_event_target_as = tavern_location
		}
		hidden_tooltip = {
			random_child = {
				limit = {
					ai = yes
					age = 6
					prisoner = no
					is_adult = no
					is_alive = yes
					host = { character = ROOT }
					is_incapable = no
					NOR = {
						has_character_flag = taught_by_traveling_teacher
						trait = inbred
						is_inaccessible_trigger = yes
					}
				}
				save_event_target_as = child_to_be_taught
			}
			random_child = {
				limit = {
					is_primary_heir = ROOT
					ai = yes
					age = 6
					prisoner = no
					is_adult = no
					is_alive = yes
					host = { character = ROOT }
					is_incapable = no
					NOR = {
						has_character_flag = taught_by_traveling_teacher
						trait = inbred
						is_inaccessible_trigger = yes
					}
				}
				save_event_target_as = child_to_be_taught
			}
		}
		set_character_flag = traveling_teacher_visit
	}
	
	option = { # Bring him to court
		name = EVTOPTA_JD_7000
		custom_tooltip = {
			text = EVTOPTA_JD_7000_TT
			hidden_effect = {
				character_event = { id = JD.7001 }
			}
		}
		event_target:traveling_teacher = {
			show_portrait = yes
		}
		event_target:child_to_be_taught = {
			show_portrait = yes
		}
	}
	
	option = { # Bring him over for... dinner
		name = EVTOPTC_JD_7000
		tooltip_info = cannibal_trait
		trigger = {
			trait = cannibal_trait
		}
		custom_tooltip = {
			text = EVTOPTC_JD_7000_TT
		}
		event_target:traveling_teacher = {
			death = {
				death_reason = death_execution_eaten
				killer = ROOT
			}
		}
		if = {
			limit = {
				trait = stressed
			}
			remove_trait = stressed
		}
		if = {
			limit = {
				trait = depressed
			}
			remove_trait = depressed
		}
	}

	option = { # Leave it be
		name = EVTOPTB_JD_7000
		custom_tooltip = {
			text = EVTOPTB_JD_7000_TT
			hidden_effect = {
				event_target:traveling_teacher = {
					leave_court_and_die_effect = yes
				}
			}
		}
	}

}

character_event = { # Accept Teacher into Court
	id = JD.7001
	has_dlc = "Jade Dragon"
	desc = EVTDESC_JD_7001
    picture = GFX_evt_child_reading

	is_triggered_only = yes
	
	trigger = {
		event_target:traveling_teacher = {
			is_alive = yes
		}
		event_target:child_to_be_taught = {
			is_alive = yes
		}
	}
	
	option = { 
		name = EVTOPTA_JD_7001 # Basic teaching
		transfer_scaled_wealth = {
			to = event_target:traveling_teacher
			value = 0.25
			min = 50
		}
		event_target:child_to_be_taught = {
			change_learning = 2
		}
		ai_chance = { 
			factor = 10
			modifier = {
				factor = 0
				NOT = {
					wealth = 100
				}
			}
		}
	}

	option = {
		name = EVTOPTB_JD_7001 # Read Confucian and Taoist Classics to the child
		trigger = {
			event_target:child_to_be_taught = {
				NOT = {
					trait = erudite
				}
			}
		}
		transfer_scaled_wealth = {
			to = event_target:traveling_teacher
			value = 0.5
			min = 100
		}
		event_target:child_to_be_taught = {
			change_learning = 1
			add_trait = erudite
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							religion = taoist
						}
					}
					random = {
						chance = 2
						set_secret_religion = taoist
					}
				}
			}
		}
		ai_chance = { 
			factor = 10
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
		}
	}
	
	option = { # Teach child surgery and poetry
		name = EVTOPTC_JD_7001
		trigger = {
			event_target:child_to_be_taught = {
				NOR = {
					trait = dull
					trait = poet
				}
			}
		}
		transfer_scaled_wealth = {
			to = event_target:traveling_teacher
			value = 0.5
			min = 100
		}
		event_target:child_to_be_taught = {
			change_learning = 1
			add_trait = poet
		}
		ai_chance = { 
			factor = 10
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
		}
	}
	
	option = { # Read Confucian Classics to the child
		name = EVTOPTD_JD_7001
		trigger = {
			event_target:child_to_be_taught = {
				trait = dull
			}
		}
		transfer_scaled_wealth = {
			to = event_target:traveling_teacher
			value = 2
			min = 200
		}
		event_target:child_to_be_taught = {
			change_learning = 1
			remove_trait = dull
		}
		ai_chance = { 
			factor = 10
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
		}
	}
	
	option = { # This is outrageously expensive, send the teacher away!
		name = EVTOPTE_JD_7001
		custom_tooltip = {
			text = EVTOPTB_JD_7000_TT
			hidden_effect = {
				event_target:traveling_teacher = {
					leave_court_and_die_effect = yes
				}
			}
			prestige = -5
		}
		ai_chance = { 
			factor = 10
		}
	}

}

character_event = { # Radhanite Merchant
	id = JD.7010
	desc = EVTDESC_JD_7010
    picture = GFX_evt_jewish_market
	
	only_playable = yes
	only_capable = yes
    has_dlc = "Jade Dragon"
    prisoner = no
    war = no
    min_age = 16

	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_character_flag = radhanite_visit
			has_character_modifier = expelled_jewish
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
		any_realm_province = {
			trade_route = silk_road
			NOR = {
				has_province_modifier = radhanite_favor
				has_province_modifier = radhanite_favor_big
			}
			any_province_holding = {
				holding_type = city
				holder_scope = {
					tier = BARON
				}
			}
		}
	}

    weight_multiplier = {
        days = 1
        modifier = {
            factor = 2
            any_owned_bloodline = {
                has_bloodline_flag = jewish_saintly_bloodline
				bloodline_is_active_for = PREV
            }
        }
    }
	
	immediate = {
		hidden_effect = {
			create_random_steward = {
				random_traits = yes
				dynasty = actually_culture
				female = no
				age = 33
				culture = ashkenazi
				religion = jewish
				flag = ai_flag_refuse_conversion
				attributes = {
					diplomacy = 2
					learning = 2
					stewardship = 14
					intrigue = 2
					martial = 2
				}
				trait = shrewd
			}
			new_character = {
				remove_trait = dull
				
				wealth = 50
				
				emf_new_character_steward = yes
				emf_dna_improve_homozygous_recessive_for_intelligence = yes
				remove_trait = dim
				remove_trait = slow
				remove_trait = imbecile
				
				save_event_target_as = radhanite_merchant
			}
			random_realm_province = {
				limit = {
					trade_route = silk_road
					NOR = {
						has_province_modifier = radhanite_favor
						has_province_modifier = radhanite_favor_big
					}
					any_province_holding = {
						holding_type = city
						holder_scope = {
							tier = BARON
						}
					}
				}
				save_event_target_as = radhanite_location
			}
			event_target:radhanite_location = {
				random_province_holding = {
					limit = {
						holding_type = city
						holder_scope = {
							tier = BARON
						}
					}
					save_event_target_as = radhanite_location_barony
				}
			}
			event_target:radhanite_location_barony = {
				holder_scope = {
					save_event_target_as = radhanite_location_barony_holder
				}
			}
		}
		
		set_character_flag = radhanite_visit
	}
	
	option = { # Accept offer
		name = EVTOPTA_JD_7010
		custom_tooltip = {
			text = EVTOPTA_JD_7010_TT
		}
		event_target:radhanite_merchant = {
			show_portrait = yes
		}
		transfer_scaled_wealth = {
			to = event_target:radhanite_merchant
			value = 0.5
			min = 100
		}
		event_target:radhanite_location = {
			add_province_modifier = {
				name = radhanite_favor
				years = 50
			}
		}
		ai_chance = { 
			factor = 10
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
		}
	}
	
	option = { # Bring him over for... dinner
		name = EVTOPTB_JD_7010
		tooltip_info = cannibal_trait
		trigger = {
			trait = cannibal_trait
		}
		event_target:radhanite_merchant = {
			death = {
				death_reason = death_execution_eaten
				killer = ROOT
			}
		}
		wealth = 50
		if = {
			limit = {
				trait = stressed
			}
			remove_trait = stressed
		}
		if = {
			limit = {
				trait = depressed
			}
			remove_trait = depressed
		}
		ai_chance = { 
			factor = 100
		}
	}

	option = { # One-up the radhanite
		name = EVTOPTC_JD_7010
		trigger = {
			event_target:radhanite_location = {
				always = yes
			}
			event_target:radhanite_location_barony = {
				always = yes
			}
			event_target:radhanite_location_barony_holder = {
				is_alive = yes
			}
		}
		custom_tooltip = {
			text = EVTOPTC_JD_7010_TT
		}
		prestige = -100
		transfer_scaled_wealth = {
			to = event_target:radhanite_merchant
			value = 0.5
			min = 100
		}
		event_target:radhanite_merchant = {
			usurp_title = event_target:radhanite_location_barony
			opinion = {
				modifier = opinion_loyal_servant
				who = ROOT
				years = 100
			}
		}
		event_target:radhanite_location = {
			add_province_modifier = {
				name = radhanite_favor_big
				years = 100
			}
		}
		event_target:radhanite_location_barony_holder = {
			opinion = {
				who = ROOT
				years = 100
				modifier = opinion_outraged
			}
		}
		ai_chance = { 
			factor = 5
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
		}
	}
	
	option = { # Politely decline
		name = EVTOPTD_JD_7010
		custom_tooltip = {
			text = EVTOPTD_JD_7010_TT
			hidden_effect = {
				event_target:radhanite_merchant = {
					leave_court_and_die_effect = yes
				}
			}
		}
		ai_chance = { 
			factor = 100
		}
	}

}
