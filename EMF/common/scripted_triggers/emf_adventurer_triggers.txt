# -*- ck2.scripted_triggers -*-

# Scripted triggers for adventurer events

# THIS = title, ROOT = adventurer
emf_valid_adv_target_title_trigger = {
	higher_tier_than = BARON
	has_holder = yes
	is_titular = no
	is_landless_type_title = no
	# Either Duke+ tier or it's their primary title
	OR = {
		higher_tier_than = COUNT
		is_primary_holder_title = yes
	}
	# Weak claims only allowed against women/regencies/uncrowned unless claimant is ambitious
	OR = {
		ROOT = { has_strong_claim = PREV }
		holder_scope = { is_female = yes }
		holder_scope = { has_regent = yes }
		holder_scope = {
			trait = uncrowned
			higher_real_tier_than = DUKE
		}
		ROOT = { trait = ambitious }
		ROOT = { has_character_flag = event_adventurer }
	}
	# Female claimants must be ambitious and can only target non-agnatic titles
	OR = {
		ROOT = { has_character_flag = event_adventurer }
		AND = {
			ROOT = { is_female = no }
			NOT = { has_law = enatic_succession }
		}
		AND = {
			ROOT = { is_female = yes }
			ROOT = { trait = ambitious }
			has_law = true_cognatic_succession
		}
		AND = {
			ROOT = { is_female = yes }
			ROOT = { emf_formidable_woman_trigger = yes }
			NOT = { has_law = agnatic_succession }
		}
	}
	# Title holder must qualify
	holder_scope = {
		independent = yes
		is_landed = yes
		# Not held by theocracy unless not of the claimant's religion and a castle is available
		OR = {
			is_theocracy = no
			AND = {
				NOT = { religion = ROOT }
				any_demesne_title = {
					tier = BARON
					holding_type = castle
					de_jure_liege_or_above = PREVPREV
				}
			}
		}
		# Not a merchant republic or it's a non-capital title
		OR = {
			is_merchant_republic = no
			NOR = {
				capital_scope = { county = { title = PREVPREVPREV } }
				capital_holding = { title = PREVPREV }
				primary_title = { title = PREVPREV }
				succ_law_title = { title = PREVPREV }
			}
		}
		# Cannot target nomads for their clan title or primary title
		NAND = {
			government = nomadic_government
			OR = {
				clan_title = { title = PREVPREV }
				primary_title = { title = PREVPREV }
			}
		}
		# Cannot target merchant republics unless their capital is not de jure
		OR = {
			is_merchant_republic = no
			NOT = { capital_holding = { de_jure_liege_or_above = PREVPREV } }
		}
		# Cannot target close relatives unless they are hated or the claimant is a bastard
		OR = {
			NOT = { reverse_opinion = { who = ROOT value = -25 } }
			NOT = { is_close_relative = ROOT }
			ROOT = { trait = bastard }
		}
		NOR = {
			any_spouse = { character = ROOT }
			reverse_opinion = { who = ROOT value = 25 }
			has_character_modifier = emf_adventurer_target_timer
			has_any_opinion_modifier = opinion_targeted_by_adventurer
		}
	}
}

# THIS = adventurer
emf_valid_adventurer_trigger = {
	has_character_modifier = planning_claimant_adventure
	NOR = {
		prisoner = yes
		trait = incapable
		any_demesne_title = { adventurer = no }
	}
	any_opinion_modifier_target = {
		independent = yes
		is_landed = yes
		has_opinion_modifier = { who = PREV modifier = opinion_targeted_by_adventurer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_claimant_adventure_target }
		any_demesne_title = { claimed_by = PREVPREV }
	}
}

# ROOT = adventurer
emf_adventurer_can_approach_trigger = {
	is_playable = yes
	is_landed = yes
	# Cannot range too far from the target's capital
	capital_scope = {
		NOT = { distance = { where = event_target:adventurer_origin value = 750 } }
	}
	# Same religion group (or same religion for hostile religion groups)
	OR = {
		religion = ROOT
		AND = {
			religion_group = ROOT
			NOT = { religion_group = muslim }
			NOT = { religion_group = pagan_group }
		}
	}
	# Cannot approach vassals unless their liege has permitted it
	OR = {
		independent = yes
		liege = {
			OR = {
				reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
				reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
			}
		}
	}
	# Ruler must be worth approaching
	OR = {
		any_demesne_province = {
			NOT = { has_province_modifier = emf_adventurer_recruited }
		}
		wealth = 10
		any_vassal = {
			is_playable = yes
			is_landed = yes
			OR = {
				religion = ROOT
				AND = {
					religion_group = ROOT
					NOT = { religion_group = muslim }
					NOT = { religion_group = pagan_group }
				}
			}
			NOR = {
				is_heresy_of = ROOT
				is_parent_religion = ROOT
				character = event_target:adventurer_target
				is_liege_or_above = event_target:adventurer_target
				reverse_has_opinion_modifier = { who = ROOT modifier = turned_adventurer_away }
				reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
				reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
				reverse_has_opinion_modifier = { who = ROOT modifier = betrayed_adventurer }
			}
		}
	}
	NOR = {
		is_heresy_of = ROOT
		is_parent_religion = ROOT
		character = event_target:adventurer_target
		is_liege_or_above = event_target:adventurer_target
		has_strong_claim = event_target:adventurer_target_title
		reverse_has_opinion_modifier = { who = ROOT modifier = turned_adventurer_away }
		reverse_has_opinion_modifier = { who = ROOT modifier = let_adventurer_stay }
		reverse_has_opinion_modifier = { who = ROOT modifier = backed_adventurer }
		reverse_has_opinion_modifier = { who = ROOT modifier = betrayed_adventurer }
	}
}

# ROOT = adventurer
emf_common_cause_trigger = {
	OR = {
		is_close_relative = ROOT
		opinion = { who = ROOT value = 40 }
		NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
		war_with = event_target:adventurer_target
	}
}

# ROOT = adventurer
emf_likes_adventurer_target_trigger = {
	opinion = { who = event_target:adventurer_target value = -20 }
	OR = {
		is_close_relative = event_target:adventurer_target
		dynasty = event_target:adventurer_target
		opinion = { who = event_target:adventurer_target value = 40 }
	}
}

# ROOT = adventurer
emf_not_bad_candidate_trigger = {
	opinion = { who = ROOT value = -20 }
	OR = {
		opinion = { who = ROOT value = 0 }
		NOT = { intrigue = 8 }
		trait = honest
		trait = kind
		NOR = {
			trait = deceitful
			trait = ambitious
			trait = cruel
			is_allied_with = event_target:adventurer_target
		}
		has_truce = event_target:adventurer_target
		war_with = event_target:adventurer_target
		is_rival = event_target:adventurer_target
		is_friend = ROOT
	}
}

# ROOT = adventuer, THIS = approached liege
emf_closest_to_adventurer_trigger = {
	capital_scope = {
		NOT = { distance = { where = event_target:adventurer_location value = 75 } }
	}
}

# ROOT = adventuer, THIS = approached liege
emf_close_to_adventurer_trigger = {
	capital_scope = {
		NOT = { distance = { where = event_target:adventurer_location value = 150 } }
	}
}

# ROOT = adventuer, THIS = approached liege
emf_not_close_to_adventurer_trigger = {
	capital_scope = {
		NOT = { distance = { where = event_target:adventurer_location value = 300 } }
	}
}

# ROOT = adventuer, THIS = approached liege
emf_far_from_adventurer_trigger = {
	capital_scope = {
		NOT = { distance = { where = event_target:adventurer_location value = 450 } }
	}
}

# ROOT = adventuer, THIS = approached liege
emf_furthest_from_adventurer_trigger = {
	capital_scope = {
		NOT = { distance = { where = event_target:adventurer_location value = 600 } }
	}
}

# ROOT = approached liege, FROM = adventurer
emf_adventurer_can_approach_vassal_trigger = {
	wealth = 10
	is_adult = yes
	prisoner = no
	OR = {
		dynasty = FROM
		is_close_relative = FROM
		any_spouse = { is_close_relative = FROM }
		opinion = { who = FROM value = 40 }
		NOT = { opinion = { who = event_target:adventurer_target value = -40 } }
	}
	NOR = {
		trait = incapable
		reverse_has_opinion_modifier = { who = FROM modifier = turned_adventurer_away }
		reverse_has_opinion_modifier = { who = FROM modifier = let_adventurer_stay }
		reverse_has_opinion_modifier = { who = FROM modifier = backed_adventurer }
		reverse_has_opinion_modifier = { who = FROM modifier = betrayed_adventurer }
		reverse_has_opinion_modifier = { who = FROM modifier = refused_adventurer }
	}
}

# ROOT = duchy adventurer, THIS = target
emf_duchy_target_trigger = {
	is_theocracy = no
	is_merchant_republic = no
	is_republic = no
	NOR = {
		in_revolt = yes
		same_realm = ROOT
		dynasty = ROOT
		any_spouse = { character = ROOT }
		reverse_opinion = { who = ROOT value = 25 }
		has_any_opinion_modifier = opinion_targeted_by_adventurer
	}
}

# THIS = duchy adventurer
emf_is_skilled_adventurer_trigger = {
	diplomacy = 12
	martial = 12
	OR = {
		trait = genius
		trait = brilliant_strategist
	}
}

# ROOT = character, THIS = province 
emf_province_same_sea_zone_as_ROOT_trigger = {
	OR = {
		AND = {
			ROOT = { location = { region = emf_region_baltic_seazone } }
			region = emf_region_baltic_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_north_seazone } }
			region = emf_region_north_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_atlantic_seazone } }
			region = emf_region_atlantic_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_west_med_seazone } }
			region = emf_region_west_med_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_east_med_seazone } }
			region = emf_region_east_med_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_black_seazone } }
			region = emf_region_black_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_arctic_seazone } }
			region = emf_region_arctic_seazone
		}
		AND = {
			ROOT = { location = { region = emf_region_indian_seazone } }
			region = emf_region_indian_seazone
		}
	}
}

# THIS = province, used in the hl_raiding_adventurer chain
emf_province_same_sea_zone_as_home_trigger = {
	OR = {
		AND = {
			event_target:target_province = { region = emf_region_baltic_seazone }
			region = emf_region_baltic_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_north_seazone }
			region = emf_region_north_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_atlantic_seazone }
			region = emf_region_atlantic_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_west_med_seazone }
			region = emf_region_west_med_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_east_med_seazone }
			region = emf_region_east_med_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_black_seazone }
			region = emf_region_black_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_arctic_seazone }
			region = emf_region_arctic_seazone
		}
		AND = {
			event_target:target_province = { region = emf_region_indian_seazone }
			region = emf_region_indian_seazone
		}
	}
}

# THIS = province, used in the hl_raiding_adventurer chain
emf_province_same_region_as_home_trigger = {
	OR = {
		AND = {
			event_target:target_province = {
				OR = {
					region = world_europe_west_brittania
					region = world_europe_west_germania
					region = world_europe_west_francia
					region = world_europe_north
					region = world_europe_east
				}
			}
			OR = {
				region = world_europe_west_brittania
				region = world_europe_west_germania
				region = world_europe_west_francia
				region = world_europe_north
				region = world_europe_east
			}
		}
		AND = {
			event_target:target_province = {
				OR = {
					region = world_europe_west_iberia
					region = world_europe_south
					region = world_asia_minor
					region = world_middle_east_jerusalem
					region = world_africa_north
				}
			}
			OR = {
				region = world_europe_west_iberia
				region = world_europe_south
				region = world_asia_minor
				region = world_middle_east_jerusalem
				region = world_africa_north
			}
		}
		AND = {
			event_target:target_province = {
				OR = {
					region = world_europe_east
					region = world_steppe_west
				}
			}
			OR = {
				region = world_europe_east
				region = world_steppe_west
			}
		}
		AND = {
			event_target:target_province = { region = world_africa }
			region = world_africa
		}
		AND = {
			event_target:target_province = { region = world_steppe }
			region = world_steppe
		}
	}
}

