
# Scripted triggers for PlusFaction, prefixed by 'pf_'


pf_leader_trigger = {
	or = {
		leads_faction = faction_court
		leads_faction = faction_prosperity
		leads_faction = faction_glory
		leads_faction = faction_tradition
	}
}

pf_backer_trigger = {
	or = {
		in_faction = faction_court
		in_faction = faction_prosperity
		in_faction = faction_glory
		in_faction = faction_tradition
	}
}

pf_war_trait_trigger = {
	or = {
		trait = rebel
		trait = loyalist
		trait = neutral
	}
}

pf_member_court_trigger = {
	or = {
		leads_faction = faction_court
		in_faction = faction_court
	}
}

pf_member_prosperity_trigger = {
	or = {
		leads_faction = faction_prosperity
		in_faction = faction_prosperity
	}
}

pf_member_glory_trigger = {
	or = {
		leads_faction = faction_glory
		in_faction = faction_glory
	}
}

pf_member_tradition_trigger = {
	or = {
		leads_faction = faction_tradition
		in_faction = faction_tradition
	}
}

pf_valid_leader_trigger = { #FIXME: no need for this
	pf_leader_trigger = yes
	pf_war_trait_trigger = no
	not = { has_character_flag = former_faction_leader }
}


# used inside of an any_faction_backer scope (typically), PREV is assumed to be
# faction leader
pf_my_faction_backer_trigger = {
	or = {
		and = {
			PREV = { leads_faction = faction_court }
			in_faction = faction_court
		}
		and = {
			PREV = { leads_faction = faction_prosperity }
			in_faction = faction_prosperity
		}
		and = {
			PREV = { leads_faction = faction_glory }
			in_faction = faction_glory
		}
		and = {
			PREV = { leads_faction = faction_tradition }
			in_faction = faction_tradition
		}
	}
}

# used inside of an any_vassal scope (typically), ROOT is assumed to be
# faction leader. identical to pf_my_faction_backer_trigger except that
# ROOT is assumed to be the faction leader and not necessarily PREV.
# [ see, this is why it'd be great if scripted triggers and effects could
#   optionally take a scope / target as a right-hand-side parameter too! ]
pf_root_faction_backer_trigger = {
	or = {
		and = {
			ROOT = { leads_faction = faction_court }
			in_faction = faction_court
		}
		and = {
			ROOT = { leads_faction = faction_prosperity }
			in_faction = faction_prosperity
		}
		and = {
			ROOT = { leads_faction = faction_glory }
			in_faction = faction_glory
		}
		and = {
			ROOT = { leads_faction = faction_tradition }
			in_faction = faction_tradition
		}
	}
}

# see above (redundancy, be gone!)
pf_from_faction_backer_trigger = {
	or = {
		and = {
			FROM = { leads_faction = faction_court }
			in_faction = faction_court
		}
		and = {
			FROM = { leads_faction = faction_prosperity }
			in_faction = faction_prosperity
		}
		and = {
			FROM = { leads_faction = faction_glory }
			in_faction = faction_glory
		}
		and = {
			FROM = { leads_faction = faction_tradition }
			in_faction = faction_tradition
		}
	}
}


pf_my_faction_angry_trigger = {
	or = {
		and = {
			leads_faction = faction_court
			liege = { has_character_flag = faction_court_angry }
		}
		and = {
			leads_faction = faction_prosperity
			liege = { has_character_flag = faction_prosperity_angry }
		}
		and = {
			leads_faction = faction_glory
			liege = { has_character_flag = faction_glory_angry }
		}
		and = {
			leads_faction = faction_tradition
			liege = { has_character_flag = faction_tradition_angry }
		}
	}
}
