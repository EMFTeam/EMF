# Scripted effects for adventurer events

# THIS = adventurer
emf_adventurer_reset_target_effect = {
	if = {
		limit = { NOT = { event_target:emf_adv_target = { always = yes } } }
		random_opinion_modifier_target = {
			limit = {
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_claimant_adventure_target }
			}
			save_event_target_as = emf_adv_target
		}
	}
}

# THIS = scope whose location should be considered the current court's location if we don't already have one
emf_adventurer_reset_location_effect = {
	if = {
		limit = { NOT = { event_target:emf_court = { always = yes } } }
		location = { save_event_target_as = emf_court }
	}
}

# THIS = adventurer
emf_adventurer_find_friendly_court_effect = {
	# if I have a non-adventurer title, my most friendly court is my own court
	if = {
		limit = { any_demesne_title = { adventurer = no } }
		save_event_target_as = emf_new_home_court
	}
	# otherwise...
	# find a court that supported me first
	random_opinion_modifier_target = {
		limit = {
			NOT = { event_target:emf_new_home_court = { always = yes } }
			reverse_has_opinion_modifier = { who = PREV modifier = backed_adventurer }
			is_playable = yes
			is_landed = yes
		}
		save_event_target_as = emf_new_home_court
	}
	# failing that, find a court that let me stay
	random_opinion_modifier_target = {
		limit = {
			NOT = { event_target:emf_new_home_court = { always = yes } }
			reverse_has_opinion_modifier = { who = PREV modifier = let_adventurer_stay }
			is_playable = yes
			is_landed = yes
		}
		save_event_target_as = emf_new_home_court
	}
	# failing that, my current location will have to do
	if = {
		limit = { NOT = { event_target:emf_new_home_court = { always = yes } } }
		location = { owner = { save_event_target_as = emf_new_home_court } }
	}
}

# THIS = adventurer, must be used inside the adventurer's scope
emf_adventurer_cleanup_adventure_effect = {
	log = "INFO: adventurer: [This.GetBestName] (ID: [This.GetID]) abandoning adventure, relocating to the court of [emf_new_home_court.GetTitledName] ([emf_new_home_court.PrimaryTitle.GetID] / ID: [emf_new_home_court.GetID])"
	
	# free all prisoners
	any_courtier = {
		limit = { prisoner = yes }
		prisoner = no
	}
	
	# move all courtiers to the new court
	any_courtier = { move_character = event_target:emf_new_home_court }
	
	# remove all adventurer statuses
	remove_character_modifier = planning_claimant_adventure
	remove_character_modifier = do_not_disturb
	clr_character_flag = planning_claimant_adventure
	clr_character_flag = warned_adventurer_target
	clr_character_flag = not_interested_in_movements
	clr_character_flag = found_home
	any_opinion_modifier_target = {
		limit = { has_opinion_modifier = { who = PREV modifier = opinion_targeted_by_adventurer } }
		remove_opinion = { who = PREV modifier = opinion_targeted_by_adventurer }
		reverse_remove_opinion = { who = PREV modifier = opinion_claimant_adventure_target }
	}
	any_demesne_title = {
		limit = { adventurer = yes }
		unsafe_destroy_landed_title = THIS
	}
	move_character = event_target:emf_new_home_court
	clear_event_target = emf_new_home_court
}

# THIS = adventurer
emf_adventurer_abandon_adventure_effect = {
	emf_adventurer_find_friendly_court_effect = yes
	emf_adventurer_cleanup_adventure_effect = yes
}

# THIS = targeted ruler, ROOT = adventurer
emf_adventurer_started_war_effect = {
	reverse_remove_opinion = { who = ROOT modifier = opinion_claimant_adventure_target }
	remove_opinion = { who = ROOT modifier = opinion_targeted_by_adventurer }
	ROOT = {
		character_event = { id = emf_adventurer.47 days = 1 } # double-check that we're at war
	}
}

# THIS = adventurer, PREV = chosen province location
emf_adventurer_buy_troops_effect = {
	if = {
		limit = { wealth = 50 }
		wealth = -50
		spawn_unit = {
			province = PREV
			home = PREV
			owner = THIS
			match_character = event_target:emf_adv_target
			match_mult = 0.04
			match_min = 100
			match_max = 2000
			attrition = 0.25
			earmark = claimant_adventure
			merge = yes
			cannot_inherit = yes
			reinforces = yes
		}
		spawn_fleet = {
			province = closest # closest sea zone
			owner = THIS
			disband_on_peace = yes
			merge = yes
			troops = {
				galleys = { 20 20 }
			}
			earmark = claimant_adventure
		}
	}
}

# ROOT = approached character, FROM = adventurer
emf_adventurer_donate_to_adventurer_effect = {
	if = {
		limit = {
			wealth = 10
			NOT = { wealth = 40 }
		}
		wealth = -10
		FROM = { wealth = 10 }
	}
	if = {
		limit = {
			wealth = 40
			NOT = { wealth = 80 }
		}
		wealth = -20
		FROM = { wealth = 20 }
	}
	if = {
		limit = {
			wealth = 80
			NOT = { wealth = 120 }
		}
		wealth = -40
		FROM = { wealth = 40 }
	}
	if = {
		limit = {
			wealth = 120
			NOT = { wealth = 160 }
		}
		wealth = -60
		FROM = { wealth = 60 }
	}
	if = {
		limit = {
			wealth = 160
			NOT = { wealth = 200 }
		}
		wealth = -80
		FROM = { wealth = 80 }
	}
	if = {
		limit = {
			wealth = 200
			NOT = { wealth = 300 }
		}
		wealth = -100
		FROM = { wealth = 100 }
	}
	if = {
		limit = {
			wealth = 300
		}
		wealth = -150
		FROM = { wealth = 150 }
	}
}

