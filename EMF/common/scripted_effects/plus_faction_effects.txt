# -*- ck2.scripted_effects -*-


# Scripted effects for PlusFaction, prefixed by 'pf_'

###########################
##### UTILITY EFFECTS #####

## FACTION MOOD REFRESH ##
# Used to prompt recalculation of all current faction moods for a given liege
# without stimulating mood with a plus/minus effect. One would typically use
# this whenever they've changed some game state that may affect faction moods
# and standard faction opinions directly (such as a law change).

# Does so immediately (should be default for most such use cases)
pf_mood_refresh_effect = {
	hidden_tooltip = { character_event = { id = PlusFaction.200 } }
}

# Does so the next day (nec. under certain circumstances)
pf_mood_refresh_delayed_effect = {
	hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } }
}


## FACTION MOOD INCREASE/DECREASE ##
# Handy quick-effects for basic faction mood plus/minus outcomes. These are
# primarily used by CBs, and they only cover convenient increments/decrements
# of faction mood (actual increase/decrease is noted in each effect's name).
# Ideally, all faction mood increase/decrease effects used in Plus and EMF can
# be centralized here eventually (for conformity, convenience, and also ease
# in changing tooltips or other implementation details).

# Court
pf_court_plus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_court } }
		custom_tooltip = { text = COURTFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				change_variable = { which = "faction_mood_increase" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_court_minus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_court } }
		custom_tooltip = { text = COURTFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				change_variable = { which = "faction_mood_decrease" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_court_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_court } }
		custom_tooltip = { text = COURTFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_court_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_court } }
		custom_tooltip = { text = COURTFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}

# Prosperity
pf_prosperity_plus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_increase" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_minus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_decrease" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_plus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_increase" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_minus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_decrease" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}

# Glory
pf_glory_plus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_glory } }
		custom_tooltip = { text = GLORYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				change_variable = { which = "faction_mood_increase" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_glory_minus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_glory } }
		custom_tooltip = { text = GLORYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				change_variable = { which = "faction_mood_decrease" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_glory_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_glory } }
		custom_tooltip = { text = GLORYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_glory_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_glory } }
		custom_tooltip = { text = GLORYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}

# Traditon
pf_tradition_plus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_increase" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_tradition_minus1_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_decrease" value = 1 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_tradition_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_tradition_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_tradition_plus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_increase" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_tradition_minus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_decrease" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}


#############################
##### FACTION INTERNALS #####
# These are mostly used internal to the PlusFaction code to reduce redundancy
# and centralize some logic for easier modification later.

pf_clear_supporter_flags_effect = {
	clr_character_flag = faction_court_supporter
	clr_character_flag = faction_prosperity_supporter
	clr_character_flag = faction_glory_supporter
	clr_character_flag = faction_tradition_supporter
}

pf_clear_succession_flags_effect = {
}

pf_clear_war_flags_effect = {
	clr_character_flag = faction_court_war
	clr_character_flag = faction_prosperity_war
	clr_character_flag = faction_glory_war
	clr_character_flag = faction_tradition_war
	clr_character_flag = faction_pretender_war
	clr_character_flag = faction_separatist_war
	clr_character_flag = faction_religious_war
	clr_character_flag = faction_succession_war
	clr_character_flag = faction_authority_war
}

pf_clear_demands_flags_effect = {
	clr_character_flag = demands_lower_CA
	clr_character_flag = demands_lower_TO
	clr_character_flag = demands_surrender_title
	clr_character_flag = demands_share_wealth
	clr_character_flag = demands_revert_succession
	clr_character_flag = demands_council_life_terms
	clr_character_flag = demands_lower_feudal_obligations
	clr_character_flag = demands_lower_tribal_obligations
	clr_character_flag = demands_lower_city_obligations
	clr_character_flag = demands_lower_temple_obligations
	clr_character_flag = demands_seniority
	clr_character_flag = demands_primogeniture
	clr_character_flag = demands_gavelkind
	clr_character_flag = demands_feudal_elective
	
	liege = {
		any_vassal = {
			ROOT = { clr_character_flag = faction_demand_@PREV }
		}
		any_demesne_title = {
			ROOT = { clr_character_flag = faction_demand_@PREV }
		}
	}
}

pf_reset_maintenance_vars_effect = {
	set_variable = { which = "faction_votes_court" value = 0 }
	set_variable = { which = "faction_votes_prosperity" value = 0 }
	set_variable = { which = "faction_votes_glory" value = 0 }
	set_variable = { which = "faction_votes_tradition" value = 0 }
	set_variable = { which = "faction_mood_court" value = 0 }
	set_variable = { which = "faction_mood_prosperity" value = 0 }
	set_variable = { which = "faction_mood_glory" value = 0 }
	set_variable = { which = "faction_mood_tradition" value = 0 }
}

# called within faction leader scope, votes *in favor* for the leader himself
pf_leader_vote_effect = {
	hidden_tooltip = {
		if = {
			limit = { real_tier = BARON }
			change_variable = { which = "faction_votes" value = 1 }
		}
		if = {
			limit = { real_tier = COUNT }
			change_variable = { which = "faction_votes" value = 2 }
		}
		if = {
			limit = { real_tier = DUKE }
			change_variable = { which = "faction_votes" value = 4 }
		}
		if = {
			limit = { real_tier = KING }
			change_variable = { which = "faction_votes" value = 8 }
		}
	}
}

# PREV scope is faction leader scope, THIS is a faction backer, THIS votes *in favor*
pf_member_vote_effect = {
	hidden_tooltip = {
		if = {
			limit = { real_tier = BARON }
			PREV = { change_variable = { which = "faction_votes" value = 1 } }
		}
		if = {
			limit = { real_tier = COUNT }
			PREV = { change_variable = { which = "faction_votes" value = 2 } }
		}
		if = {
			limit = { real_tier = DUKE }
			PREV = { change_variable = { which = "faction_votes" value = 4 } }
		}
		if = {
			limit = { real_tier = KING }
			PREV = { change_variable = { which = "faction_votes" value = 8 } }
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_opposed_in_meeting
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_supported_in_meeting
		}
	}
}

# PREV scope is faction leader scope, THIS is a faction backer, THIS votes *against*
pf_member_vote_against_effect = {
	hidden_tooltip = {
		if = {
			limit = { real_tier = BARON }
			PREV = { change_variable = { which = "faction_votes" value = -1 } }
		}
		if = {
			limit = { real_tier = COUNT }
			PREV = { change_variable = { which = "faction_votes" value = -2 } }
		}
		if = {
			limit = { real_tier = DUKE }
			PREV = { change_variable = { which = "faction_votes" value = -4 } }
		}
		if = {
			limit = { real_tier = KING }
			PREV = { change_variable = { which = "faction_votes" value = -8 } }
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_opposed_in_meeting
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_supported_in_meeting
		}
	}
}

# THS = Title scope
pf_save_old_gender_law_effect = {
	if = {
		limit = {
			higher_tier_than = COUNT
		}
		clr_title_flag = former_agnatic_succession
		clr_title_flag = former_cognatic_succession
		clr_title_flag = former_true_cognatic_succession
		if = {
			limit = { has_law = agnatic_succession }
			set_title_flag = former_agnatic_succession
		}
		if = {
			limit = { has_law = cognatic_succession }
			set_title_flag = former_cognatic_succession
		}
		if = {
			limit = { has_law = true_cognatic_succession }
			set_title_flag = former_true_cognatic_succession
		}
	}
}

# THIS = Title scope
pf_save_old_succ_law_effect = {
	if = {
		limit = {
			higher_tier_than = COUNT
		}
		clr_title_flag = former_elective_gavelkind
		clr_title_flag = former_feudal_elective
		clr_title_flag = former_gavelkind
		clr_title_flag = former_primogeniture
		clr_title_flag = former_seniority
		clr_title_flag = former_tanistry
		clr_title_flag = former_turkish_succession
		clr_title_flag = former_ultimogeniture
		if = {
			limit = { has_law = succ_elective_gavelkind }
			set_title_flag = former_elective_gavelkind
		}
		if = {
			limit = { has_law = succ_feudal_elective }
			set_title_flag = former_feudal_elective
		}
		if = {
			limit = { has_law = succ_gavelkind }
			set_title_flag = former_gavelkind
		}
		if = {
			limit = { has_law = succ_primogeniture }
			set_title_flag = former_primogeniture
		}
		if = {
			limit = { has_law = succ_seniority }
			set_title_flag = former_seniority
		}
		if = {
			limit = { has_law = succ_tanistry }
			set_title_flag = former_tanistry
		}
		if = {
			limit = { has_law = succ_turkish_succession }
			set_title_flag = former_turkish_succession
		}
		if = {
			limit = { has_law = succ_ultimogeniture }
			set_title_flag = former_ultimogeniture
		}
	}
}

## FACTION DEMAND EFFECTS ##

# THIS = title upon which to revert succession (generally a primary_title)
pf_revert_succession_law_effect = {
	if = {
		limit = {
			has_title_flag = former_elective_gavelkind
			NOT = { has_law = succ_elective_gavelkind }
			is_law_potential = succ_elective_gavelkind
		}
		add_law = succ_elective_gavelkind
	}
	if = {
		limit = {
			has_title_flag = former_feudal_elective
			NOT = { has_law = succ_feudal_elective }
			is_law_potential = succ_feudal_elective
		}
		add_law = succ_feudal_elective
	}
	if = {
		limit = {
			has_title_flag = former_gavelkind
			NOT = { has_law = succ_gavelkind }
			is_law_potential = succ_gavelkind
		}
		add_law = succ_gavelkind
	}
	if = {
		limit = {
			has_title_flag = former_primogeniture
			NOT = { has_law = succ_primogeniture }
			is_law_potential = succ_primogeniture
		}
		add_law = succ_primogeniture
	}
	if = {
		limit = {
			has_title_flag = former_seniority
			NOT = { has_law = succ_seniority }
			is_law_potential = succ_seniority
		}
		add_law = succ_seniority
	}
	if = {
		limit = {
			has_title_flag = former_tanistry
			NOT = { has_law = succ_tanistry }
			is_law_potential = succ_tanistry
		}
		add_law = succ_tanistry
	}
	if = {
		limit = {
			has_title_flag = former_turkish_succession
			NOT = { has_law = succ_turkish_succession }
			is_law_potential = succ_turkish_succession
		}
		add_law = succ_turkish_succession
	}
	if = {
		limit = {
			has_title_flag = former_ultimogeniture
			NOT = { has_law = succ_ultimogeniture }
			is_law_potential = succ_ultimogeniture
		}
		add_law = succ_ultimogeniture
	}
	if = {
		limit = {
			has_title_flag = former_agnatic_succession
			NOT = { has_law = agnatic_succession }
		}
		add_law = agnatic_succession
	}
	if = {
		limit = {
			has_title_flag = former_cognatic_succession
			NOT = { has_law = cognatic_succession }
			is_law_potential = cognatic_succession
		}
		add_law = cognatic_succession
	}
	if = {
		limit = {
			has_title_flag = former_true_cognatic_succession
			NOT = { has_law = true_cognatic_succession }
			is_law_potential = true_cognatic_succession
		}
		add_law = true_cognatic_succession
	}
	clr_title_flag = former_gavelkind
	clr_title_flag = former_seniority
	clr_title_flag = former_primogeniture
	clr_title_flag = former_feudal_elective
	clr_title_flag = former_tanistry
	clr_title_flag = former_ultimogeniture
	clr_title_flag = former_cognatic_succession
	clr_title_flag = former_agnatic_succession
	clr_title_flag = former_true_cognatic_succession
}

# THIS = ruler to affect
pf_lower_feudal_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = feudal_obligations_1 }
			add_law_w_cooldown = feudal_obligations_0
		}
		if = {
			limit = { has_law = feudal_obligations_2 }
			add_law_w_cooldown = feudal_obligations_1
		}
		if = {
			limit = { has_law = feudal_obligations_3 }
			add_law_w_cooldown = feudal_obligations_2
		}
		if = {
			limit = { has_law = feudal_obligations_4 }
			add_law_w_cooldown = feudal_obligations_3
		}
		if = {
			limit = { has_law = iqta_obligations_1 }
			add_law_w_cooldown = iqta_obligations_0
		}
		if = {
			limit = { has_law = iqta_obligations_2 }
			add_law_w_cooldown = iqta_obligations_1
		}
		if = {
			limit = { has_law = iqta_obligations_3 }
			add_law_w_cooldown = iqta_obligations_2
		}
		if = {
			limit = { has_law = iqta_obligations_4 }
			add_law_w_cooldown = iqta_obligations_3
		}
	}
}

# THIS = Ruler to affect
pf_lower_tribal_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = tribal_obligations_1 }
			add_law_w_cooldown = tribal_obligations_0
		}
		if = {
			limit = { has_law = tribal_obligations_2 }
			add_law_w_cooldown = tribal_obligations_1
		}
		if = {
			limit = { has_law = tribal_obligations_3 }
			add_law_w_cooldown = tribal_obligations_2
		}
		if = {
			limit = { has_law = tribal_obligations_4 }
			add_law_w_cooldown = tribal_obligations_3
		}
	}
}

# THIS = Ruler to affect
pf_lower_city_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = city_obligations_1 }
			add_law_w_cooldown = city_obligations_0
		}
		if = {
			limit = { has_law = city_obligations_2 }
			add_law_w_cooldown = city_obligations_1
		}
		if = {
			limit = { has_law = city_obligations_3 }
			add_law_w_cooldown = city_obligations_2
		}
		if = {
			limit = { has_law = city_obligations_4 }
			add_law_w_cooldown = city_obligations_3
		}
	}
}

# THIS = Ruler to affect
pf_lower_temple_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = temple_obligations_1 }
			add_law_w_cooldown = temple_obligations_0
		}
		if = {
			limit = { has_law = temple_obligations_2 }
			add_law_w_cooldown = temple_obligations_1
		}
		if = {
			limit = { has_law = temple_obligations_3 }
			add_law_w_cooldown = temple_obligations_2
		}
		if = {
			limit = { has_law = temple_obligations_4 }
			add_law_w_cooldown = temple_obligations_3
		}
	}
}

# THIS = Ruler to affect
pf_lower_TO_effect = {
	primary_title = {
		if = {
			limit = {
				OR = {
					has_law = tribal_organization_1
					has_law = tribal_organization_2
					has_law = tribal_organization_3
					has_law = tribal_organization_4
				}
			}
			custom_tooltip = {
				text = TO_LOWERED_NO_NAME
				hidden_tooltip = {
					if = {
						limit = { has_law = tribal_organization_1 }
						add_law_w_cooldown = tribal_organization_0
					}
					if = {
						limit = { has_law = tribal_organization_2 }
						add_law_w_cooldown = tribal_organization_1
					}
					if = {
						limit = { has_law = tribal_organization_3 }
						add_law_w_cooldown = tribal_organization_2
					}
					if = {
						limit = { has_law = tribal_organization_4 }
						add_law_w_cooldown = tribal_organization_3
					}
				}
			}
		}
	}
}

# THIS = Ruler to affect
pf_lower_CA_effect = {
	any_demesne_title = {
		limit = {
			higher_tier_than = DUKE
			OR = {
				has_law = crown_authority_1
				has_law = crown_authority_2
				has_law = crown_authority_3
				has_law = crown_authority_4
			}
		}
		custom_tooltip = {
			text = CA_LOWERED_NO_NAME
			hidden_tooltip = {
				if = {
					limit = { has_law = crown_authority_1 }
					add_law = crown_authority_0
				}
				if = {
					limit = { has_law = crown_authority_2 }
					add_law = crown_authority_1
				}
				if = {
					limit = { has_law = crown_authority_3 }
					add_law = crown_authority_2
				}
				if = {
					limit = { has_law = crown_authority_4 }
					add_law = crown_authority_3
				}
			}
		}
	}
}


## CIVIL WAR SUPPORT CODE ##

pf_setup_rebel_effect = {
	add_trait = pf_rebel
	clr_character_flag = civil_war_faction_leader
	clr_character_flag = civil_war_faction_member
	clr_character_flag = will_join_civil_war
	hidden_tooltip = {
		# Remove prior loyalist/neutral TOMs, if any
		if = {
			limit = {
				has_opinion_modifier = { who = LIEGE modifier = pf_loyal_toward }
			}
			remove_opinion = { who = LIEGE modifier = pf_loyal_toward }
			reverse_remove_opinion = { who = LIEGE modifier = pf_loyal_to_me }
		}
		if = {
			limit = {
				has_opinion_modifier = { who = LIEGE modifier = pf_neutral_toward }
			}
			remove_opinion = { who = LIEGE modifier = pf_neutral_toward }
			reverse_remove_opinion = { who = LIEGE modifier = pf_neutral_to_me }
		}
		if = {
			limit = {
				NOT = { has_opinion_modifier = { who = LIEGE modifier = revolting_against } }
			}
			opinion = { who = LIEGE modifier = revolting_against }
		}
		if = {
			limit = {
				NOT = { reverse_has_opinion_modifier = { who = LIEGE modifier = revolting_against_me } }
			}
			reverse_opinion = { who = LIEGE modifier = revolting_against_me }
		}
	}
}

pf_teardown_rebel_effect = {
	remove_trait = pf_rebel
	clr_character_flag = civil_war_faction_leader
	clr_character_flag = civil_war_faction_member
	clr_character_flag = will_join_civil_war
	hidden_tooltip = {
		any_opinion_modifier_target = { # Pre-revolt liege
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = revolting_against } }
			reverse_remove_opinion = { who = PREV modifier = revolting_against }
			remove_opinion = { who = PREV modifier = revolting_against_me }
		}
	}
}

pf_teardown_loyalist_effect = {
	remove_trait = pf_loyalist
	hidden_tooltip = {
		any_opinion_modifier_target = { # Liege or previous liege
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_toward } }
			reverse_remove_opinion = { who = PREV modifier = pf_loyal_toward }
			remove_opinion = { who = PREV modifier = pf_loyal_to_me }
		}
	}
}

pf_teardown_neutral_effect = {
	remove_trait = pf_neutral
	hidden_tooltip = {
		any_opinion_modifier_target = { # Liege or previous liege
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_toward } }
			reverse_remove_opinion = { who = PREV modifier = pf_neutral_toward }
			remove_opinion = { who = PREV modifier = pf_neutral_to_me }
		}
	}
}

# Should be used in the scope of the faction leader
pf_punish_deceitful_player_effect = {
	hidden_tooltip = {
		liege = {
			any_vassal = {
				limit = {
					ai = no
					#not part of my faction
					NOR = {
						AND = {
							ROOT = {
								leads_faction = faction_court
								pf_not_regular_faction_war_trigger = no
							}
							in_faction = faction_court
						}
						AND = {
							ROOT = {
								leads_faction = faction_prosperity
								pf_not_regular_faction_war_trigger = no
							}
							in_faction = faction_prosperity
						}
						AND = {
							ROOT = {
								leads_faction = faction_glory
								pf_not_regular_faction_war_trigger = no
							}
							in_faction = faction_glory
						}
						AND = {
							ROOT = {
								leads_faction = faction_tradition
								pf_not_regular_faction_war_trigger = no
							}
							in_faction = faction_tradition
						}
						AND = {
							ROOT = {
								leads_faction = faction_succ_seniority
								has_character_flag = demands_seniority
							}
							in_faction = faction_succ_seniority
						}
						AND = {
							ROOT = {
								leads_faction = faction_succ_primogeniture
								has_character_flag = demands_primogeniture
							}
							in_faction = faction_succ_primogeniture
						}
						AND = {
							ROOT = {
								leads_faction = faction_succ_gavelkind
								has_character_flag = demands_gavelkind
							}
							in_faction = faction_succ_gavelkind
						}
						AND = {
							ROOT = {
								leads_faction = faction_succ_feudal_elective
								has_character_flag = demands_feudal_elective
							}
							in_faction = faction_succ_feudal_elective
						}
					}
					#either promised to join the war or dropped out of faction
					OR = {
						has_character_flag = will_join_civil_war
						has_character_flag = civil_war_faction_member
					}
					#capable of joining the faction
					is_adult = yes
					prisoner = no
					NOR = {
						trait = incapable
						has_opinion_modifier = {
							who = PREV
							modifier = opinion_coerced_into_leaving_faction
						}
						has_opinion_modifier = { who = PREV modifier = opinion_subjugated }
						has_opinion_modifier = { who = PREV modifier = opinion_subjugated_other_rel }
					}
				}
				letter_event = { id = PlusFaction.416 }
			}
		}
	}
}

pf_civil_war_clear_old_opinions_effect = {
	hidden_tooltip = {
		any_opinion_modifier_target = {
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_civil_war_loser } }
			reverse_remove_opinion = { who = PREV modifier = opinion_civil_war_loser }
		}
		any_opinion_modifier_target = {
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_civil_war_supporter } }
			reverse_remove_opinion = { who = PREV modifier = opinion_civil_war_supporter }
		}
		any_opinion_modifier_target = {
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_civil_war_neutral } }
			reverse_remove_opinion = { who = PREV modifier = opinion_civil_war_neutral }
		}
	}
}

# ROOT=THIS is the victorious side after a civil war
pf_civil_war_cleanup_effect = {
	hidden_tooltip = {
		FROM = {
			any_opinion_modifier_target = {
				limit = { pf_part_of_this_revolt_trigger = yes }
				remove_trait = pf_rebel
				reverse_remove_opinion = { who = PREV modifier = revolting_against_me }
				remove_opinion = { who = PREV modifier = revolting_against }
			}

			# Clear neutral/loyalist TOM's
			any_opinion_modifier_target = {
				limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_to_me } }
				remove_trait = pf_loyalist
				reverse_remove_opinion = { who = PREV modifier = pf_loyal_to_me }
				remove_opinion = { who = PREV modifier = pf_loyal_toward }
			}
			any_opinion_modifier_target = {
				limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_to_me } }
				remove_trait = pf_neutral
				reverse_remove_opinion = { who = PREV modifier = pf_neutral_to_me }
				remove_opinion = { who = PREV modifier = pf_neutral_toward }
			}
		}
		ROOT = {
			clr_character_flag = original_war_liege
			pf_clear_succession_flags_effect = yes
			pf_clear_demands_flags_effect = yes
		}
		FROM = {
			pf_clear_war_flags_effect = yes
			hidden_tooltip = { disband_event_forces = faction_loyalists }
		}
		hidden_tooltip = { any_attacker = { disband_event_forces = faction_revolters } }
	}
}

pf_liege_change_effect = {
	hidden_tooltip = {
		if = {
			limit = {
				trait = pf_rebel
				OR = {
					is_ruler = no
					pf_in_revolt_trigger = no
				}
			}
			pf_teardown_rebel_effect = yes
		}
		if = {
			limit = {
				trait = pf_loyalist
				OR = {
					is_ruler = no
					NOT = { has_opinion_modifier = { who = LIEGE modifier = pf_loyal_toward } }
				}
			}
			pf_teardown_loyalist_effect = yes
		}
		if = {
			limit = {
				trait = pf_neutral
				OR = {
					is_ruler = no
					NOT = { has_opinion_modifier = { who = LIEGE modifier = pf_neutral_toward } }
				}
			}
			pf_teardown_neutral_effect = yes
		}
	}
}

pf_liege_change_under_title_begin_effect = {
	ROOT_FROM = { save_event_target_as = pf_lc_enemy }
	pf_liege_change_under_title_ext_begin_effect = yes
	clear_event_target = pf_lc_enemy
}

pf_liege_change_under_title_ext_begin_effect = {
	hidden_tooltip = {
		any_de_jure_vassal = { # For all de jure vassals of this title...
			limit = {
				is_playable = yes
				# That have civil war participant state
				pf_war_trait_trigger = yes
				# That are in pf_lc_enemy's subrealm
				OR = {
					character = event_target:pf_lc_enemy
					is_liege_or_above = event_target:pf_lc_enemy
				}
			}
			# Add temporary TOM from Isis to tracked ruler
			e_hip = { owner = { opinion = { who = PREVPREV modifier = pf_lcut_ruler } } }
		}
		# And now to also add any folks PF-revolting against folks under this title+subrealm...
		any_de_jure_vassal = { # For all de jure vassals of this title...
			limit = {
				is_playable = yes
				# That have civil war defender state
				any_war = {
					defender = { character = PREV }
					OR = {
						using_cb = emf_faction_gender_succ_agnatic
						using_cb = emf_faction_gender_succ_cognatic
						using_cb = emf_faction_gender_succ_true_cognatic
						using_cb = emf_faction_overthrow
						using_cb = emf_faction_overthrow_CA
						using_cb = emf_faction_overthrow_TO
						using_cb = emf_faction_overthrow_obligations
						using_cb = emf_faction_succ_elective_gavelkind
						using_cb = emf_faction_succ_feudal_elective
						using_cb = emf_faction_succ_gavelkind
						using_cb = emf_faction_succ_primogeniture
						using_cb = emf_faction_succ_seniority
						using_cb = emf_faction_succ_tanistry
						using_cb = emf_faction_succ_turkish_succession
						using_cb = emf_faction_succ_ultimogeniture
					}
				}
				# That are in pf_lc_enemy's subrealm
				OR = {
					character = event_target:pf_lc_enemy
					is_liege_or_above = event_target:pf_lc_enemy
				}
			}
			any_opinion_modifier_target = { # Revolters
				limit = { reverse_has_opinion_modifier = { who = PREV modifier = revolting_against_me } }
				e_hip = { owner = { opinion = { who = PREVPREV modifier = pf_lcut_ruler } } }
			}
			any_opinion_modifier_target = { # Neutrals
				limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_to_me } }
				e_hip = { owner = { opinion = { who = PREVPREV modifier = pf_lcut_ruler } } }
			}
			any_opinion_modifier_target = { # Loyalists
				limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_to_me } }
				e_hip = { owner = { opinion = { who = PREVPREV modifier = pf_lcut_ruler } } }
			}
		}
	}
}

pf_liege_change_under_title_end_effect = {
	hidden_tooltip = {
		e_hip = {
			owner = {
				any_opinion_modifier_target = { # Tracked rulers
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_lcut_ruler } }
					reverse_remove_opinion = { who = PREV modifier = pf_lcut_ruler }
					emf_liege_change_effect = yes
				}
			}
		}
	}
}

pf_log_state_effect = {
	hidden_tooltip = { character_event = { id = emf_faction.1000 } }
}

## FACTION DECISION EFFECTS ##

pf_send_ultimatum_effect = {
	hidden_tooltip = {
		set_variable = { which = "pf_jumpstart_days_left" value = 0 }
	}
	set_character_flag = faction_regular_ultimatum_taken
	pf_punish_deceitful_player_effect = yes
	if = {
		limit = {
			NOR = {
				has_character_flag = demands_seniority
				has_character_flag = demands_primogeniture
				has_character_flag = demands_gavelkind
				has_character_flag = demands_feudal_elective
			}
		}
		hidden_tooltip = {
			log = "[Root.GetTitledName] has issued a regular faction ultimatum to [Root.Liege.GetTitledName]"
		}
		liege = {
			letter_event = { id = PlusFaction.400 tooltip = SEND_REGULAR_ULTIMATUM }
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = demands_seniority
				has_character_flag = demands_primogeniture
				has_character_flag = demands_gavelkind
				has_character_flag = demands_feudal_elective
			}
		}
		hidden_tooltip = {
			log = "[Root.GetTitledName] has issued a succession faction ultimatum to [Root.Liege.GetTitledName]"
		}
		liege = {
			letter_event = { id = PlusFaction.470 tooltip = SEND_REGULAR_ULTIMATUM }
		}
	}
}

pf_begin_civil_war_effect = {
	hidden_tooltip = {
		set_variable = { which = "pf_jumpstart_days_left" value = 0 }
		log = "[Root.GetTitledName] started a civil war to overthrow [Root.Liege.GetTitledName]"
	}
	pf_punish_deceitful_player_effect = yes
	liege = {
		tooltip = {
			reverse_war = {
				target = ROOT
				casus_belli = emf_faction_overthrow
			}
		}
		hidden_tooltip = {
			letter_event = { id = PlusFaction.406 }
		}
	}
	hidden_tooltip = {
		character_event = { id = PlusFaction.399 days = 1 } #clear flags
	}
}	
