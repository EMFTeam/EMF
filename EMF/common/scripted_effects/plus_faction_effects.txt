
# Scripted effects for PlusFaction, prefixed by 'pf_'

## FACTION MOOD INCREASE/DECREASE ##
# Handy quick-effects for basic faction mood plus/minus outcomes. These are
# primarily used by CBs, and they only cover convenient increments/decrements
# of faction mood (actual increase/decrease is noted in each effect's name).
# Ideally, all faction mood increase/decrease effects used in Plus and EMF can
# be centralized here eventually (for conformity, convenience, and also ease
# in changing tooltips or other implementation details).

# Court
pf_court_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_court } }
		custom_tooltip = { text = COURTFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_court_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_court } }
		custom_tooltip = { text = COURTFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_court }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}

# Prosperity
pf_prosperity_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_plus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_increase" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_prosperity_minus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_prosperity } }
		custom_tooltip = { text = PROSPERITYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_prosperity }
				change_variable = { which = "faction_mood_decrease" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}

# Glory
pf_glory_plus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_glory } }
		custom_tooltip = { text = GLORYFACTIONMOODPLUS_NONAME }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				change_variable = { which = "faction_mood_increase" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_glory_minus2_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_glory } }
		custom_tooltip = { text = GLORYFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_glory }
				change_variable = { which = "faction_mood_decrease" value = 2 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}

# Traditon
pf_tradition_plus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODPLUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_increase" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}
pf_tradition_minus4_effect = {
	if = {
		limit = { any_vassal = { leads_faction = faction_tradition } }
		custom_tooltip = { text = TRADITIONFACTIONMOODMINUS }
		hidden_tooltip = {
			random_vassal = {
				limit = { leads_faction = faction_tradition }
				change_variable = { which = "faction_mood_decrease" value = 4 }
			}
			character_event = { id = PlusFaction.200 days = 1 }
		}
	}
}


## FACTION INTERNALS ##
# These are mostly used internal to the PlusFaction code to reduce redundancy
# and centralize some logic for easier modification later.

pf_clear_supporter_flags_effect = {
	clr_character_flag = faction_court_supporter
	clr_character_flag = faction_prosperity_supporter
	clr_character_flag = faction_glory_supporter
	clr_character_flag = faction_tradition_supporter
}

pf_clear_demands_flags_effect = {
	clr_character_flag = demands_lower_CA
	clr_character_flag = demands_lower_TO
	clr_character_flag = demands_tax_privilege
	clr_character_flag = demands_levy_privilege
	clr_character_flag = demands_surrender_title
	clr_character_flag = demands_share_wealth
	clr_character_flag = demands_revert_succession
	clr_character_flag = demands_council_life_terms
	clr_character_flag = demands_lower_feudal_obligations
	clr_character_flag = demands_lower_tribal_obligations
	clr_character_flag = demands_lower_city_obligations
	clr_character_flag = demands_lower_temple_obligations
	clr_character_flag = demands_seniority
	clr_character_flag = demands_primogeniture
	clr_character_flag = demands_gavelkind
	clr_character_flag = demands_feudal_elective
}

pf_reset_maintenance_vars_effect = {
	set_variable = { which = "faction_votes_court" value = 0 }
	set_variable = { which = "faction_votes_prosperity" value = 0 }
	set_variable = { which = "faction_votes_glory" value = 0 }
	set_variable = { which = "faction_votes_tradition" value = 0 }
	set_variable = { which = "faction_mood_court" value = 0 }
	set_variable = { which = "faction_mood_prosperity" value = 0 }
	set_variable = { which = "faction_mood_glory" value = 0 }
	set_variable = { which = "faction_mood_tradition" value = 0 }
}

# called within faction leader scope, votes *in favor* for the leader himself
pf_leader_vote_effect = {
	hidden_tooltip = {
		if = {
			limit = { real_tier = BARON }
			change_variable = { which = "faction_votes" value = 1 }
		}
		if = {
			limit = { real_tier = COUNT }
			change_variable = { which = "faction_votes" value = 2 }
		}
		if = {
			limit = { real_tier = DUKE }
			change_variable = { which = "faction_votes" value = 4 }
		}
		if = {
			limit = { real_tier = KING }
			change_variable = { which = "faction_votes" value = 8 }
		}
	}
}

# PREV scope is faction leader scope, THIS is a faction backer, THIS votes *in favor*
pf_member_vote_effect = {
	hidden_tooltip = {
		if = {
			limit = { real_tier = BARON }
			PREV = { change_variable = { which = "faction_votes" value = 1 } }
		}
		if = {
			limit = { real_tier = COUNT }
			PREV = { change_variable = { which = "faction_votes" value = 2 } }
		}
		if = {
			limit = { real_tier = DUKE }
			PREV = { change_variable = { which = "faction_votes" value = 4 } }
		}
		if = {
			limit = { real_tier = KING }
			PREV = { change_variable = { which = "faction_votes" value = 8 } }
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_opposed_in_meeting
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_supported_in_meeting
		}
	}
}

# PREV scope is faction leader scope, THIS is a faction backer, THIS votes *against*
pf_member_vote_against_effect = {
	hidden_tooltip = {
		if = {
			limit = { real_tier = BARON }
			PREV = { change_variable = { which = "faction_votes" value = -1 } }
		}
		if = {
			limit = { real_tier = COUNT }
			PREV = { change_variable = { which = "faction_votes" value = -2 } }
		}
		if = {
			limit = { real_tier = DUKE }
			PREV = { change_variable = { which = "faction_votes" value = -4 } }
		}
		if = {
			limit = { real_tier = KING }
			PREV = { change_variable = { which = "faction_votes" value = -8 } }
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_opposed_in_meeting
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = opinion_supported_in_meeting
		}
	}
}

## OTHER EFFECTS ##

pf_save_old_gender_law_effect = {
	if = {
		limit = {
			is_primary_holder_title = yes
			higher_tier_than = count
		}
		clr_title_flag = former_cognatic_succession
		clr_title_flag = former_agnatic_succession
		clr_title_flag = former_true_cognatic_succession
		if = {
			limit = { has_law = cognatic_succession }
			set_title_flag = former_cognatic_succession
		}
		if = {
			limit = { has_law = agnatic_succession }
			set_title_flag = former_agnatic_succession
		}
		if = {
			limit = { has_law = true_cognatic_succession }
			set_title_flag = former_true_cognatic_succession
		}
	}
}

pf_save_old_succ_law_effect = {
	if = {
		limit = {
			is_primary_holder_title = yes
			higher_tier_than = count
		}
		clr_title_flag = former_gavelkind
		clr_title_flag = former_seniority
		clr_title_flag = former_primogeniture
		clr_title_flag = former_feudal_elective
		clr_title_flag = former_tanistry
		clr_title_flag = former_ultimogeniture
		if = {
			limit = { has_law = succ_gavelkind }
			set_title_flag = former_gavelkind
		}
		if = {
			limit = { has_law = succ_seniority }
			set_title_flag = former_seniority
		}
		if = {
			limit = { has_law = succ_primogeniture }
			set_title_flag = former_primogeniture
		}
		if = {
			limit = { has_law = succ_feudal_elective }
			set_title_flag = former_feudal_elective
		}
		if = {
			limit = { has_law = succ_tanistry }
			set_title_flag = former_tanistry
		}
		if = {
			limit = { has_law = succ_ultimogeniture }
			set_title_flag = former_ultimogeniture
		}
	}
}

## FACTION DEMAND EFFECTS ##

# THIS is the title upon which to revert succession (generally a primary_title)
pf_revert_succession_law_effect = {
	if = {
		limit = {
			has_title_flag = former_gavelkind
			not = { has_law = succ_gavelkind }
			is_law_potential = succ_gavelkind
		}
		clr_title_flag = former_gavelkind
		add_law = succ_gavelkind
	}
	if = {
		limit = {
			has_title_flag = former_seniority
			not = { has_law = succ_seniority }
			is_law_potential = succ_seniority
		}
		clr_title_flag = former_seniority
		add_law = succ_seniority
	}
	if = {
		limit = {
			has_title_flag = former_primogeniture
			not = { has_law = succ_primogeniture }
			is_law_potential = succ_primogeniture
		}
		clr_title_flag = former_primogeniture
		add_law = succ_primogeniture
	}
	if = {
		limit = {
			has_title_flag = former_feudal_elective
			not = { has_law = succ_feudal_elective }
			is_law_potential = succ_feudal_elective
		}
		clr_title_flag = former_feudal_elective
		add_law = succ_feudal_elective
	}
	if = {
		limit = {
			has_title_flag = former_tanistry
			not = { has_law = succ_tanistry }
			is_law_potential = succ_tanistry
		}
		clr_title_flag = former_tanistry
		add_law = succ_tanistry
	}
	if = {
		limit = {
			has_title_flag = former_ultimogeniture
			not = { has_law = succ_ultimogeniture }
			is_law_potential = succ_ultimogeniture
		}
		clr_title_flag = former_ultimogeniture
		add_law = succ_ultimogeniture
	}
	if = {
		limit = {
			has_title_flag = former_cognatic_succession
			not = { has_law = cognatic_succession }
			emf_laws_cognatic_potential_trigger = yes
		}
		clr_title_flag = former_cognatic_succession
		add_law = cognatic_succession
	}
	if = {
		limit = {
			has_title_flag = former_agnatic_succession
			not = { has_law = agnatic_succession }
		}
		clr_title_flag = former_agnatic_succession
		add_law = agnatic_succession
	}
	if = {
		limit = {
			has_title_flag = former_true_cognatic_succession
			not = { has_law = true_cognatic_succession }
			emf_laws_cognatic_potential_trigger = yes
		}
		clr_title_flag = former_true_cognatic_succession
		add_law = true_cognatic_succession
	}
}

pf_lower_feudal_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = feudal_obligations_1 }
			add_law_w_cooldown = feudal_obligations_0
		}
		if = {
			limit = { has_law = feudal_obligations_2 }
			add_law_w_cooldown = feudal_obligations_1
		}
		if = {
			limit = { has_law = feudal_obligations_3 }
			add_law_w_cooldown = feudal_obligations_2
		}
		if = {
			limit = { has_law = feudal_obligations_4 }
			add_law_w_cooldown = feudal_obligations_3
		}
		if = {
			limit = { has_law = iqta_obligations_1 }
			add_law_w_cooldown = iqta_obligations_0
		}
		if = {
			limit = { has_law = iqta_obligations_2 }
			add_law_w_cooldown = iqta_obligations_1
		}
		if = {
			limit = { has_law = iqta_obligations_3 }
			add_law_w_cooldown = iqta_obligations_2
		}
		if = {
			limit = { has_law = iqta_obligations_4 }
			add_law_w_cooldown = iqta_obligations_3
		}
	}
}

pf_lower_tribal_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = tribal_obligations_1 }
			add_law_w_cooldown = tribal_obligations_0
		}
		if = {
			limit = { has_law = tribal_obligations_2 }
			add_law_w_cooldown = tribal_obligations_1
		}
		if = {
			limit = { has_law = tribal_obligations_3 }
			add_law_w_cooldown = tribal_obligations_2
		}
		if = {
			limit = { has_law = tribal_obligations_4 }
			add_law_w_cooldown = tribal_obligations_3
		}
	}
}

pf_lower_city_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = city_obligations_1 }
			add_law_w_cooldown = city_obligations_0
		}
		if = {
			limit = { has_law = city_obligations_2 }
			add_law_w_cooldown = city_obligations_1
		}
		if = {
			limit = { has_law = city_obligations_3 }
			add_law_w_cooldown = city_obligations_2
		}
		if = {
			limit = { has_law = city_obligations_4 }
			add_law_w_cooldown = city_obligations_3
		}
	}
}

pf_lower_temple_obligations_effect = {
	primary_title = {
		if = {
			limit = { has_law = temple_obligations_1 }
			add_law_w_cooldown = temple_obligations_0
		}
		if = {
			limit = { has_law = temple_obligations_2 }
			add_law_w_cooldown = temple_obligations_1
		}
		if = {
			limit = { has_law = temple_obligations_3 }
			add_law_w_cooldown = temple_obligations_2
		}
		if = {
			limit = { has_law = temple_obligations_4 }
			add_law_w_cooldown = temple_obligations_3
		}
	}
}

pf_lower_TO_effect = {
	primary_title = {
		if = {
			limit = {
				OR = {
					has_law = tribal_organization_1
					has_law = tribal_organization_2
					has_law = tribal_organization_3
					has_law = tribal_organization_4
				}
			}
			custom_tooltip = {
				text = TO_LOWERED_NO_NAME
				hidden_tooltip = {
					if = {
						limit = { has_law = tribal_organization_1 }
						add_law_w_cooldown = tribal_organization_0
					}
					if = {
						limit = { has_law = tribal_organization_2 }
						add_law_w_cooldown = tribal_organization_1
					}
					if = {
						limit = { has_law = tribal_organization_3 }
						add_law_w_cooldown = tribal_organization_2
					}
					if = {
						limit = { has_law = tribal_organization_4 }
						add_law_w_cooldown = tribal_organization_3
					}
				}
			}
		}
	}
}

pf_lower_CA_effect = {
	any_demesne_title = {
		limit = {
			higher_tier_than = duke
			OR = {
				has_law = crown_authority_1
				has_law = crown_authority_2
				has_law = crown_authority_3
				has_law = crown_authority_4
			}
		}
		custom_tooltip = {
			text = CA_LOWERED_NO_NAME
			hidden_tooltip = {
				if = {
					limit = { has_law = crown_authority_1 }
					add_law = crown_authority_0
				}
				if = {
					limit = { has_law = crown_authority_2 }
					add_law = crown_authority_1
				}
				if = {
					limit = { has_law = crown_authority_3 }
					add_law = crown_authority_2
				}
				if = {
					limit = { has_law = crown_authority_4 }
					add_law = crown_authority_3
				}
			}
		}
	}
}


## CIVIL WAR SUPPORT CODE ##

pf_inherit_war_flags_effect = {
	# War type
	if = {
		limit = { has_character_flag = faction_court_war }
		current_heir = { set_character_flag = faction_court_war }
	}
	if = {
		limit = { has_character_flag = faction_prosperity_war }
		current_heir = { set_character_flag = faction_prosperity_war }
	}
	if = {
		limit = { has_character_flag = faction_glory_war }
		current_heir = { set_character_flag = faction_glory_war }
	}
	if = {
		limit = { has_character_flag = faction_tradition_war }
		current_heir = { set_character_flag = faction_tradition_war }
	}
	if = {
		limit = { has_character_flag = faction_separatist_war }
		current_heir = { set_character_flag = faction_separatist_war }
	}
	if = {
		limit = { has_character_flag = faction_pretender_war }
		current_heir = { set_character_flag = faction_pretender_war }
	}
	if = {
		limit = { has_character_flag = faction_religious_war }
		current_heir = { set_character_flag = faction_religious_war }
	}
	if = {
		limit = { has_character_flag = faction_succession_war }
		current_heir = { set_character_flag = faction_succession_war }
	}
	if = {
		limit = { has_character_flag = faction_authority_war }
		current_heir = { set_character_flag = faction_authority_war }
	}
	# Demands
	if = {
		limit = { has_character_flag = demands_lower_CA }
		current_heir = { set_character_flag = demands_lower_CA }
	}
	if = {
		limit = { has_character_flag = demands_lower_TO }
		current_heir = { set_character_flag = demands_lower_TO }
	}
	if = {
		limit = { has_character_flag = demands_tax_privilege }
		current_heir = { set_character_flag = demands_tax_privilege }
	}
	if = {
		limit = { has_character_flag = demands_levy_privilege }
		current_heir = { set_character_flag = demands_levy_privilege }
	}
	if = {
		limit = { has_character_flag = demands_surrender_title }
		current_heir = { set_character_flag = demands_surrender_title }
	}
	if = {
		limit = { has_character_flag = demands_share_wealth }
		current_heir = { set_character_flag = demands_share_wealth }
	}
	if = {
		limit = { has_character_flag = demands_revert_succession }
		current_heir = { set_character_flag = demands_revert_succession }
	}
	if = {
		limit = { has_character_flag = demands_council_life_terms }
		current_heir = { set_character_flag = demands_council_life_terms }
	}
	if = {
		limit = { has_character_flag = demands_lower_feudal_obligations }
		current_heir = { set_character_flag = demands_lower_feudal_obligations }
	}
	if = {
		limit = { has_character_flag = demands_lower_tribal_obligations }
		current_heir = { set_character_flag = demands_lower_tribal_obligations }
	}
	if = {
		limit = { has_character_flag = demands_lower_city_obligations }
		current_heir = { set_character_flag = demands_lower_city_obligations }
	}
	if = {
		limit = { has_character_flag = demands_lower_temple_obligations }
		current_heir = { set_character_flag = demands_lower_temple_obligations }
	}
	if = {
		limit = { has_character_flag = demands_seniority }
		current_heir = { set_character_flag = demands_seniority }
	}
	if = {
		limit = { has_character_flag = demands_primogeniture }
		current_heir = { set_character_flag = demands_primogeniture }
	}
	if = {
		limit = { has_character_flag = demands_gavelkind }
		current_heir = { set_character_flag = demands_gavelkind }
	}
	if = {
		limit = { has_character_flag = demands_feudal_elective }
		current_heir = { set_character_flag = demands_feudal_elective }
	}
}

pf_setup_rebel_effect = {
	add_trait = rebel
	hidden_tooltip = {
		liege = {
			if = {
				limit = {
					NOT = {
						reverse_has_opinion_modifier = {
							who = PREV
							modifier = revolting_against
						}
					}
				}
				reverse_opinion = {
					who = PREV
					modifier = revolting_against
					years = 100
				}
			}
		}
	}
}

pf_teardown_rebel_effect = {
	remove_trait = rebel
	random_opinion_modifier_target = {
		limit = {
			reverse_has_opinion_modifier = { who = PREV modifier = revolting_against }
		}
		reverse_remove_opinion = { who = PREV modifier = revolting_against }
		save_event_target_as = pf_was_revolting_against
	}

	# Fail early, fail often... better to fix the system if it's broken than to
	# simply cleanup after it sometimes. (why I chose to not clear all
	# revolting_against TOMs and instead log the failure, for now-- while we
	# work on the CB code)

	if = {
		limit = { has_any_opinion_modifier = revolting_against }
		log = "pf_teardown_rebel_effect: SERIOUS: multiple revolting_against TOMs on [This.GetTitledName] of the [This.PrimaryTitle.GetFullName] ([This.GetID])! Remaining targets after removing TOM against [pf_was_revolting_against.GetTitledName] of the [pf_was_revolting_against.PrimaryTitle.GetFullName] ([pf_was_revolting_against.GetID]):"
		any_opinion_modifier_target = {
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = revolting_against } }
			log = "pf_teardown_rebel_effect: ---> [This.GetTitledName] of the [This.PrimaryTitle.GetFullName] ([This.GetID])"
		}
	}

	clear_event_target = pf_was_revolting_against
}

pf_rebel_independence_effect = {
	hidden_tooltip = {
		if = {
			limit = {
				liege = {
					OR = {
						independent = yes
						liege = { character = PREV }
					}
				}
			}
			set_defacto_liege = THIS
		}
		if = {
			limit = {
				liege = {
					independent = no
					liege = { NOT = { character = PREV } }
				}
			}
			liege = {
				liege = {
					set_defacto_vassal = PREVPREV
				}
			}
		}
	}
}

pf_cb_revassalize_rebels_effect = {
	hidden_tooltip = {
		any_attacker = {
			limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
			set_defacto_liege = FROM
			pf_teardown_rebel_effect = yes
		}
		any_attacker = {
			limit = { NOT = { has_opinion_modifier = { who = FROM modifier = revolting_against } } }
			log = "cb_faction_overthrow_ruler: any_attacker w/o a revolting_against TOM: [This.GetTitledName] of the [This.PrimaryTitle.GetFullName] ([This.GetID])"
		}
		FROM = {
			remove_opinion = { who = ROOT modifier = declared_war }
			# remove loyalist and neutral traits
			any_vassal = {
				limit = { trait = loyalist }
				remove_trait = loyalist
				reverse_remove_opinion = { who = PREV modifier = supported_civil_war }
			}
			any_vassal = {
				limit = { trait = neutral }
				remove_trait = neutral
			}
		}
	}
}

# ROOT=THIS is the victorious side after a civil war
pf_civil_war_cleanup_effect = {
	hidden_tooltip = {
		any_vassal = {
			limit = { trait = neutral }
			remove_trait = neutral
		}
		any_vassal = {
			limit = {
				trait = loyalist
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_civil_war_supporter }
			}
			remove_trait = loyalist
		}
		any_vassal = {
			limit = {
				trait = rebel
				# FIXME: why do rebels need to have `opinion_civil_war_supporter` to remove their TOMs?
				# seems like a bug and potential source of great error, but I'm not exactly clear on this at all.
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_civil_war_supporter }
			}
			pf_teardown_rebel_effect = yes
		}
	}
}
