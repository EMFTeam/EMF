# -*- ck2.scripted_effects -*-

## STANDARD GLOBAL CB EFFECTS ##

emf_cb_on_success_posttitle = {
	hidden_tooltip = {
		# Double-check Imperial Government status
		FROM = { character_event = { id = emf_imperial.3299 } }
		ROOT = { character_event = { id = emf_imperial.3299 } }

		# Top realm capital-contiguous province tracking (a hint for better accuracy post-war only, as this is also
		# done on annual maintenance)
		ROOT = {
			# Only do anything if the CB hasn't told us that top realm province changes for both giver/receiver
			# can't happen (skip_capconnect_chk_tmp set on ROOT by CB)
			if = {
				limit = { NOT = { has_character_flag = skip_capconnect_chk_tmp } }
				# Also skip recalculation if [still] part of a temp-independent revolt realm, but emf_core.65
				# filters that in its trigger already ...
				top_liege = { character_event = { id = emf_core.65 } }
				# Note that if FROM was unlanded, we might be doing an unnecessary calculation on diff realm
				# (and possibly missing the recalculation on the right realm) -- totally acceptable
				FROM = {
					top_liege = {
						# But don't do it twice for ROOT and FROM if in same top realm [currently]
						if = {
							limit = { NOT = { same_realm = ROOT } }
							character_event = { id = emf_core.65 }
						}
					}
				}
			}
			clr_character_flag = skip_capconnect_chk_tmp
		}
	}
}

emf_cb_thirdparty_on_success_posttitle = {
	emf_cb_on_success_posttitle = yes # Currently the same since we only care about giver/receiver
}

emf_cb_on_add = {
	attacker = { emf_cb_reset_peace_years = yes }
	defender = { emf_cb_reset_peace_years = yes }
	if = {
		limit = { defender = { is_offmap_governor = offmap_china } }
		attacker = {
			sound_effect = china_angered_emperor
			detract_grace_super_huge_effect = yes 
		}
	}
}

emf_cb_reset_peace_years = {
	hidden_effect = {
		if = {
			limit = { higher_real_tier_than = COUNT }
			set_variable = { which = "emf_peace_years" value = 0 }
		}
	}
}

## STANDARD CB OUTCOME EFFECTS ##

emf_cb_victory = {
	emf_cb_obj_win_war = yes
	ROOT = { if = { limit = { rebel = no } pf_glory_plus2_effect = yes } }
	FROM = { pf_glory_minus2_effect = yes }
}

emf_cb_defeat = {
	emf_cb_obj_win_war_reverse = yes
	ROOT = { if = { limit = { rebel = no } pf_glory_minus2_effect = yes } }
	FROM = { pf_glory_plus2_effect = yes }
}

emf_cb_victory_other = { # 3rd-party (assumes enclosing scope is attacker)
	emf_cb_obj_win_war = yes
	pf_glory_plus2_effect = yes
	FROM = { pf_glory_minus2_effect = yes }
}

emf_cb_defeat_other = { # 3rd-party (assumes enclosing scope is attacker)
	emf_cb_obj_win_war_reverse = yes
	pf_glory_minus2_effect = yes
	FROM = { pf_glory_plus2_effect = yes }
}

emf_cb_holy_victory = {
	emf_cb_obj_win_war = yes
	emf_cb_obj_win_holy_war = yes
	ROOT = {
		if = {
			limit = { rebel = no }
			pf_glory_plus2_effect = yes
			pf_tradition_plus4_effect = yes
		}
	}
	FROM = { pf_glory_minus2_effect = yes }
	FROM = { pf_tradition_minus4_effect = yes }
}

emf_cb_holy_defeat = {
	emf_cb_obj_win_war_reverse = yes
	emf_cb_obj_win_holy_war_reverse = yes
	ROOT = {
		if = {
			limit = { rebel = no }
			pf_glory_minus2_effect = yes
			pf_tradition_minus4_effect = yes
		}
	}
	FROM = { pf_glory_plus2_effect = yes }
	FROM = { pf_tradition_plus4_effect = yes }
}


## DYNLEVY AUTO-ADJUSTMENT CB EFFECTS FOR MAJOR REVOLTS ##

# regular major_revolt CBs
emf_cb_dynlevy_begin = {
	hidden_tooltip = {
		# ROOT = { primary_title = { emf_dynlevy_remove = yes } }
		FROM = { emf_dynlevy_update = yes }
	}
}

emf_cb_dynlevy_end = {
	hidden_tooltip = {
		ROOT = { emf_dynlevy_update = yes }
		FROM = { emf_dynlevy_update = yes }
	}
}

# 3rd-party CBs: assumes enclosing scope is attacker
emf_cb_dynlevy_other_begin = {
	hidden_tooltip = {
		FROM = { emf_dynlevy_update = yes }
		# primary_title = { emf_dynlevy_remove = yes }
	}
}

# 3rd-party CBs: assumes enclosing scope is attacker
emf_cb_dynlevy_other_end = {
	hidden_tooltip = {
		FROM = { emf_dynlevy_update = yes }
		emf_dynlevy_update = yes
	}
}

#### UTILITY EFFECTS ####

emf_cb_start_subjugation_opinions = {
	hidden_effect = {
		ROOT = { any_vassal = { set_character_flag = emf_subj_opinion_prior_vassal } }
	}
}

emf_cb_finish_subjugation_opinions = {
	hidden_effect = {
		ROOT = {
			any_vassal = {
				limit = {
					NOT = { has_character_flag = emf_subj_opinion_prior_vassal }
					religion = ROOT
				}
				opinion = { who = ROOT modifier = opinion_subjugated }
			}
			any_vassal = {
				limit = {
					NOT = { has_character_flag = emf_subj_opinion_prior_vassal }
					NOT = { religion = ROOT }
				}
				opinion = { who = ROOT modifier = opinion_subjugated_other_rel }
			}
			any_vassal = { clr_character_flag = emf_subj_opinion_prior_vassal }
		}
	}
}

# THIS = title, ROOT = character about to assume THIS
emf_cb_ROOT_ensure_feudal = {
	if = {
		limit = {
			higher_tier_than = ROOT
			holder_scope = { is_feudal = yes }
			ROOT = {
				is_ruler = yes
				OR = {
					is_theocracy = yes
					is_republic = yes
				}
			}
		}
		holder_scope = {
			ROOT = {
				emf_abdicate = yes
				if = {
					limit = { NOT = { liege = { character = PREVPREV } } }
					move_character = PREV
				}
			}
		}
	}
}

#### LATB™ EFFECTS ####

# Upon conquest, convert any nomadic province(s) to tribal before transferring
# title. Should be used in target title scope of virtually every CB. Only does
# anything if ROOT (receiver of title) is nomadic, as the rest are currently
# handled by HL.4999.
emf_cb_latb = {
	hidden_tooltip = {
		if = {
			limit = {
				NOT = { has_global_flag = emf_config_latb_disabled }
				ROOT = { is_nomadic = yes }
				tier = COUNT
				location = {
					NOT = { culture = ROOT }
					NOR = {
						any_province_holding = { NOT = { holding_type = nomad } }
						has_settlement_construction = yes
					}
					has_empty_holding = yes
				}
			}
			emf_cb_latb_build = yes
		}
		if = {
			limit = {
				NOT = { has_global_flag = emf_config_latb_disabled }
				ROOT = { is_nomadic = yes }
				higher_tier_than = COUNT
			}
			any_de_jure_vassal_title = {
				limit = {
					tier = COUNT
					holder_scope = {
						OR = {
							character = ROOT_FROM
							is_liege_or_above = ROOT_FROM
						}
					}
					location = {
						NOT = { culture = ROOT }
						NOR = {
							any_province_holding = { NOT = { holding_type = nomad } }
							has_settlement_construction = yes
						}
						has_empty_holding = yes
					}
				}
				emf_cb_latb_build = yes
			}
		}
	}
}

emf_cb_latb_build = {
	location = {
		build_holding = { type = tribal }
		random_province_holding = {
			limit = {
				holding_type = tribal
				ROOT = { is_nomadic = yes }
				is_capital = yes
			}
			revoke_capital_holding = yes
		}
		random_province_holding = {
			limit = {
				holding_type = tribal
				ROOT = { is_nomadic = no }
				is_capital = no
			}
			make_capital_holding = yes
		}
		random_province_holding = {
			limit = { holding_type = tribal }
			set_title_flag = emf_built_by_latb
			log = "DEBUG: LATB: built tribal holding [This.GetID] ([This.GetBaseName]) in [Prev.GetName] ([PrevPrev.GetID])"
		}
	}
}


## WAR AMBITION EFFECT HELPERS (not used directly in CBs) ##
emf_cb_obj_win_war = {
	hidden_tooltip = {
		any_attacker = {
			add_character_modifier = { name = emf_victory_timer duration = 1 hidden = yes }
		}
		any_attacker = {
			limit = { has_ambition = obj_win_war }
			ambition_succeeds = yes
		}
	}
}
emf_cb_obj_win_war_reverse = {
	hidden_tooltip = {
		any_defender = {
			add_character_modifier = { name = emf_victory_timer duration = 1 hidden = yes }
		}
		any_defender = {
			limit = { has_ambition = obj_win_war }
			ambition_succeeds = yes
		}
	}
}
emf_cb_obj_win_holy_war = {
	hidden_tooltip = {
		any_attacker = {
			add_character_modifier = { name = emf_holy_victory_timer duration = 1 hidden = yes }
		}
		any_attacker = {
			limit = { has_ambition = obj_win_holy_war }
			ambition_succeeds = yes
		}
	}
}
emf_cb_obj_win_holy_war_reverse = {
	hidden_tooltip = {
		any_defender = {
			add_character_modifier = { name = emf_holy_victory_timer duration = 1 hidden = yes }
		}
		any_defender = {
			limit = { has_ambition = obj_win_holy_war }
			ambition_succeeds = yes
		}
	}
}


## IMPERIAL DECAY ##
emf_cb_imperial_decay_overthrow = {
	if = {
		limit = { FROM = { emf_uses_imperial_decay = yes } }
		FROM = {
			custom_tooltip = { text = IMPERIAL_DECAY_MINUS_10 }
			hidden_tooltip = {
				primary_title = {
					set_title_flag = emf_decay_overthrow
				}
			}
		}
	}
}


## HOLY WAR ##

emf_cb_religious_on_success_title = {
	emf_cb_latb = yes
	if = {
		limit = { NOT = { has_global_flag = emf_config_relsub_disabled } }
		save_event_target_as = emf_cb_title
		FROM = { save_event_target_as = emf_cb_loser }
		ROOT = { save_event_target_as = emf_cb_winner }
		custom_tooltip = {
			text = RELSUB_WILL_RECEIVE_ULTIMATUM
			hidden_tooltip = { ROOT = { long_character_event = { id = emf_relsub.20 } } }
		}
	}
	else = {
		pf_liege_change_under_title_begin_effect = yes
		if = { # Muslims fighting Non-Muslims preserve vassals
			limit = {
				ROOT = { religion_group = muslim }
				FROM = { NOT = { religion_group = muslim } }
			}
			custom_tooltip = {
				text = religious_cb_succ_muslim_tip
				hidden_tooltip = {
					ROOT = {
						vassalize_or_take_under_title = {
							title = PREV
							enemy = FROM
							is_religious = yes
							type = holy_war
						}
					}
				}
			}
		}
		else = { # Standard Holy War behaviour for Non-Muslims and Muslims fighting other Muslims
			custom_tooltip = {
				text = religious_cb_succ_tip
				hidden_tooltip = {
					ROOT = {
						vassalize_or_take_under_title = {
							title = PREV
							enemy = FROM
							same_religion = yes # Only vassalize rulers of my religion
							is_religious = yes
							type = holy_war
						}
					}
				}
			}
		}
		pf_liege_change_under_title_end_effect = yes
	}
}

#### CHINA ####

emf_cb_offmap_submission_failure_cleanup = {
	ROOT = {
		if = {
			limit = { has_character_flag = is_rebel_general }
			hidden_effect = {
				any_courtier = {
					move_character = FROM
					imprison = FROM
				}
				primary_title = {
					activate_title = { title = THIS status = no }
					emf_destroy_title = yes
				}
				move_character = FROM
				imprison = FROM
			}
		}
		# clr_character_flag = is_rebel_general ? MAYBE? FIXME
	}
}
