# -*- ck2.scripted_effects -*-


### COUNCIL POWER ###

# pass_effect helper for opinion effects of increasing council power
emf_laws_council_power_plus_effect = {
	hidden_tooltip = {
		holder_scope = {
			any_vassal = {
				limit = {
					NOT = {
						has_opinion_modifier = {
							who = PREV
							modifier = opinion_increased_council_power
						}
					}
				}
				opinion = { who = PREV modifier = opinion_increased_council_power years = 5 }
			}
			any_courtier = {
				limit = {
					liege = { character = PREVPREV } # Actually ours
					NOT = {
						has_opinion_modifier = {
							who = PREV
							modifier = opinion_increased_council_power
						}
					}
				}
				opinion = { who = PREV modifier = opinion_increased_council_power years = 5 }
			}
		}
	}
}

# pass_effect helper for opinion effects of decreasing council power
emf_laws_council_power_minus_effect = {
	hidden_tooltip = {
		holder_scope = {
			any_vassal = {
				limit = {
					NOT = {
						has_opinion_modifier = {
							who = PREV
							modifier = opinion_decreased_council_power
						}
					}
				}
				opinion = { who = PREV modifier = opinion_decreased_council_power years = 5 }
			}
			any_courtier = {
				limit = {
					liege = { character = PREVPREV } # Actually ours
					NOT = {
						has_opinion_modifier = {
							who = PREV
							modifier = opinion_decreased_council_power
						}
					}
				}
				opinion = { who = PREV modifier = opinion_decreased_council_power years = 5 }
			}
		}
	}
}


### PROTECTED APPOINTMENTS ###

emf_laws_protected_appointment_0_validate_opinion_effect = {
	any_vassal = {
		remove_opinion = { who = PREV modifier = opinion_protected_appointment_always }
	}
}

emf_laws_protected_appointment_1_validate_opinion_effect = {
	any_voter = {
		limit = {
			is_powerful_vassal = yes
			NOT = { has_opinion_modifier = { who = PREV modifier = opinion_protected_appointment_always } }
		}
		opinion = { who = PREV modifier = opinion_protected_appointment_always }
	}
	any_vassal = {
		limit = { is_powerful_vassal = no }
		remove_opinion = { who = PREV modifier = opinion_protected_appointment_always }
	}
}

### SUCCESSION LAW CHANGES ###

emf_laws_change_succ_prestige_cost_effect = {
	if = {
		limit = { holder_scope = { ai = no } }
		if = {
			limit = { tier = BARON }
			if = {
				limit = { NOT = { holder_scope = { prestige = 125 } } }
				custom_tooltip = { text = emf_laws_ctt_change_succ_negative_prestige_warning }
			}
			holder_scope = { prestige = -125 }
		}
		if = {
			limit = { tier = COUNT }
			if = {
				limit = { NOT = { holder_scope = { prestige = 250 } } }
				custom_tooltip = { text = emf_laws_ctt_change_succ_negative_prestige_warning }
			}
			holder_scope = { prestige = -250 }
		}
		if = {
			limit = { tier = DUKE }
			if = {
				limit = { NOT = { holder_scope = { prestige = 500 } } }
				custom_tooltip = { text = emf_laws_ctt_change_succ_negative_prestige_warning }
			}
			holder_scope = { prestige = -500 }
		}
		if = {
			limit = { tier = KING }
			if = {
				limit = { NOT = { holder_scope = { prestige = 750 } } }
				custom_tooltip = { text = emf_laws_ctt_change_succ_negative_prestige_warning }
			}
			holder_scope = { prestige = -750 }
		}
		if = {
			limit = { tier = EMPEROR }
			if = {
				limit = { NOT = { holder_scope = { prestige = 1000 } } }
				custom_tooltip = { text = emf_laws_ctt_change_succ_negative_prestige_warning }
			}
			holder_scope = { prestige = -1000 }
		}
	}
}

# With gender laws, we can actually require the prestige cost, so the AI can be charged prestige like we'd much prefer to
# to do with regular succession laws, but we simply cannot require the prestige cost in that case (CK2 limitation), so we'll
# have to just settle for gender.
emf_laws_change_gender_succ_prestige_cost_effect = {
	if = {
		limit = { tier = BARON }
		holder_scope = { prestige = -125 }
	}
	if = {
		limit = { tier = COUNT }
		holder_scope = { prestige = -250 }
	}
	if = {
		limit = { tier = DUKE }
		holder_scope = { prestige = -500 }
	}
	if = {
		limit = { tier = KING }
		holder_scope = { prestige = -750 }
	}
	if = {
		limit = { tier = EMPEROR }
		holder_scope = { prestige = -1000 }
	}
}

# Convenience effect used in all regular succession laws' effect to save the current heir and pretenders before actually changing law
emf_laws_change_succ_save_contenders_effect = {
	holder_scope = {
		event_target:emf_succ_title = {
			current_heir = {
				reverse_opinion = { who = PREVPREV modifier = opinion_succ_former_heir }
				save_event_target_as = emf_former_heir
			}
		}
		any_character = {
			limit = {
				NOT = { character = event_target:emf_former_heir }
				any_pretender_title = { title = event_target:emf_succ_title }
			}
			reverse_opinion = { who = PREV modifier = opinion_succ_former_pretender }
		}
	}
}

# Convenience effect used in all regular succession laws' effect to perform cleanup of all state at the end of the law effect
emf_laws_change_succ_cleanup_effect = {
	# Cleanup former heir & former pretender temporary TOMs...
	holder_scope = {
		remove_opinion = { who = event_target:emf_former_heir modifier = opinion_succ_former_heir }
		any_opinion_modifier_target = {
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_succ_former_pretender } }
			reverse_remove_opinion = { who = PREV modifier = opinion_succ_former_pretender }
		}
	}

	# Cleanup reaction flags for this law change...
	#
	# Could optimize this in the future by changing these scripted triggers/effects for reactions to use temporary TOMs
	# and thus any_opinion_modifier_target instead of literally sweeping all characters in the game. If we need to use
	# delayed events for succession law reactions (for some reason), then we'll need to convert these to temporary TOMSs
	# anyway.
	any_character = {
		limit = { emf_laws_change_succ_reaction_trigger = yes }
		clr_character_flag = emf_good_reaction
		clr_character_flag = emf_mild_reaction
		clr_character_flag = emf_bad_reaction
		clr_character_flag = emf_bad2_reaction
	}
}

# Convenience effects for adopting a new succession law change reaction stance

emf_laws_change_succ_terrible_reaction_effect = {
	if = {
		limit = { has_character_flag = emf_bad2_reaction }
		tooltip = { 
			opinion = {
				who = event_target:emf_succ_changer
				modifier = opinion_bad_succ_law_change
				multiplier = 2
			}
		}
	}
	if = {
		limit = { NOT = { has_character_flag = emf_bad2_reaction } }
		emf_laws_change_succ_reset_reaction_effect = yes
		set_character_flag = emf_bad2_reaction
		opinion = { who = event_target:emf_succ_changer modifier = opinion_bad_succ_law_change multiplier = 2 }
	}
}

emf_laws_change_succ_bad_reaction_effect = {
	if = {
		limit = { has_character_flag = emf_bad_reaction }
		tooltip = { 
			opinion = { who = event_target:emf_succ_changer modifier = opinion_bad_succ_law_change }
		}
	}
	if = {
		limit = { NOT = { has_character_flag = emf_bad_reaction } }
		emf_laws_change_succ_reset_reaction_effect = yes
		set_character_flag = emf_bad_reaction
		opinion = { who = event_target:emf_succ_changer modifier = opinion_bad_succ_law_change }
	}
}

emf_laws_change_succ_mild_reaction_effect = {
	if = {
		limit = { has_character_flag = emf_mild_reaction }
		tooltip = { 
			opinion = { who = event_target:emf_succ_changer modifier = opinion_succ_law_change }
		}
	}
	if = {
		limit = { NOT = { has_character_flag = emf_mild_reaction } }
		emf_laws_change_succ_reset_reaction_effect = yes
		set_character_flag = emf_mild_reaction
		opinion = { who = event_target:emf_succ_changer modifier = opinion_succ_law_change }
	}
}

emf_laws_change_succ_good_reaction_effect = {
	if = {
		limit = { has_character_flag = emf_good_reaction }
		tooltip = { 
			opinion = { who = event_target:emf_succ_changer modifier = opinion_good_succ_law_change }
		}
	}
	if = {
		limit = { NOT = { has_character_flag = emf_good_reaction } }
		emf_laws_change_succ_reset_reaction_effect = yes
		set_character_flag = emf_good_reaction
		opinion = { who = event_target:emf_succ_changer modifier = opinion_good_succ_law_change }
	}
}

# Remove any succ_change opinions that we've added as part of this particular law change reaction (used in this file only)
emf_laws_change_succ_reset_reaction_effect = {
	hidden_tooltip = {
		if = {
			limit = { has_character_flag = emf_mild_reaction }
			remove_opinion = { who = event_target:emf_succ_changer modifier = opinion_succ_law_change }
			clr_character_flag = emf_mild_reaction
		}
		if = {
			limit = { has_character_flag = emf_good_reaction }
			remove_opinion = { who = event_target:emf_succ_changer modifier = opinion_good_succ_law_change }
			clr_character_flag = emf_good_reaction
		}
		if = {
			limit = { has_character_flag = emf_bad_reaction }
			remove_opinion = { who = event_target:emf_succ_changer modifier = opinion_bad_succ_law_change }
			clr_character_flag = emf_bad_reaction
		}
		if = {
			limit = { has_character_flag = emf_bad2_reaction }
			remove_opinion = { who = event_target:emf_succ_changer modifier = opinion_bad_succ_law_change }
			remove_opinion = { who = event_target:emf_succ_changer modifier = opinion_bad_succ_law_change }
			clr_character_flag = emf_bad2_reaction
		}
	}
}


#### SUCCESSION LAW ADOPTION EFFECTS ####

emf_laws_change_succ_basic_effect = {
	emf_laws_change_succ_prestige_cost_effect = yes
	holder_scope = {
		pf_tradition_minus2_effect = yes
	}
	pf_save_old_succ_law_effect = yes
}

emf_laws_change_gender_succ_basic_effect = {
	emf_laws_change_gender_succ_prestige_cost_effect = yes
	holder_scope = {
		pf_tradition_minus2_effect = yes
	}
	pf_save_old_gender_law_effect = yes
}

emf_laws_succ_gavelkind_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Legitimate children are happy
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Current heir is slightly upset if they were the previous heir (they have to share)
		event_target:emf_heir = {
			if = {
				limit = { character = event_target:emf_former_heir }
				emf_laws_change_succ_mild_reaction_effect = yes
			}
		}
	}
	
	# Specfic, event-driven succession law change reactions for the new heir, the former heir,
	# the former pretenders, and the new pretenders.
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_elective_gavelkind_reactions_effect = {
	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Dynasty members are happy
		any_dynasty_member = {
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# The former pretenders are upset if not of the ruler's dynasty
		any_opinion_modifier_target = {
			limit = {
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_succ_former_pretender }
				NOT = { dynasty = event_target:emf_succ_changer }
			}
			emf_laws_change_succ_bad_reaction_effect = yes
			event_target:emf_succ_title = {
				if = {
					limit = { NOT = { claimed_by = PREV } }
					add_weak_claim = PREV
				}
			}
			any_spouse = {
				limit = { NOT = { dynasty = event_target:emf_succ_changer } }
				emf_laws_change_succ_bad_reaction_effect = yes
			}
			any_child = {
				limit = {
					emf_can_inherit = yes
					NOT = { dynasty = event_target:emf_succ_changer }
				}
				emf_laws_change_succ_bad_reaction_effect = yes
			}
		}
		# The former heir is upset if not of the ruler's dynasty
		event_target:emf_former_heir = {
			if = {
				limit = { NOT = { dynasty = event_target:emf_succ_changer } }
				event_target:emf_succ_title = { add_claim = PREV }
				emf_laws_change_succ_terrible_reaction_effect = yes
				any_spouse = {
					limit = { NOT = { dynasty = event_target:emf_succ_changer } }
					emf_laws_change_succ_terrible_reaction_effect = yes
				}
				any_child = {
					limit = {
						emf_can_inherit = yes
						NOT = { dynasty = event_target:emf_succ_changer }
					}
					emf_laws_change_succ_terrible_reaction_effect = yes
				}
			}
		}
	}
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_seniority_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Dynasty members are happy
		any_dynasty_member = {
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Children that can inherit are angry
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_bad_reaction_effect = yes
		}
	}
	
	# Specfic, event-driven succession law change reactions for the new heir, the former heir,
	# the former pretenders, and the new pretenders.
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_primogeniture_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Dynasty members are slightly upset
		any_dynasty_member = {
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Legitimate children are angry
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_bad_reaction_effect = yes
		}
		# Heir is happy
		event_target:emf_heir = { emf_laws_change_succ_good_reaction_effect = yes }
	}
	
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_feudal_elective_reactions_effect = {
	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Electors are happy
		any_vassal = {
			limit = {
				OR = {
					AND = {
						event_target:emf_succ_title = { tier = EMPEROR }
						higher_real_tier_than = COUNT
						OR = {
							event_target:emf_succ_title = { is_titular = yes }
							any_demesne_title = {
								higher_tier_than = COUNT
								de_jure_liege_or_above = event_target:emf_succ_title
							}
						}
					}
					AND = {
						event_target:emf_succ_title = { tier = KING }
						real_tier = DUKE
						OR = {
							event_target:emf_succ_title = { is_titular = yes }
							any_demesne_title = {
								tier = DUKE
								de_jure_liege = event_target:emf_succ_title
							}
						}
					}
					AND = {
						event_target:emf_succ_title = { tier = DUKE }
						real_tier = COUNT
						OR = {
							event_target:emf_succ_title = { is_titular = yes }
							any_demesne_title = {
								tier = COUNT
								de_jure_liege = event_target:emf_succ_title
							}
						}
					}
					AND = {
						event_target:emf_succ_title = { tier = COUNT }
						real_tier = BARON
						any_demesne_title = {
							de_jure_liege = event_target:emf_succ_title
						}
					}
				}
			}
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Dynasty members are slightly upset
		any_dynasty_member = {
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Legitimate children are angry
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_bad_reaction_effect = yes
		}
		# The former pretenders are upset
		any_opinion_modifier_target = {
			limit = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_succ_former_pretender } }
			emf_laws_change_succ_bad_reaction_effect = yes
			event_target:emf_succ_title = {
				if = {
					limit = { NOT = { claimed_by = PREV } }
					add_weak_claim = PREV
				}
			}
			any_spouse = {
				emf_laws_change_succ_bad_reaction_effect = yes
			}
			any_child = {
				limit = {
					emf_can_inherit = yes
				}
				emf_laws_change_succ_bad_reaction_effect = yes
			}
		}
		# The former heir is upset
		event_target:emf_former_heir = {
			emf_laws_change_succ_bad_reaction_effect = yes
			event_target:emf_succ_title = { add_claim = PREV }
			any_spouse = {
				emf_laws_change_succ_bad_reaction_effect = yes
			}
			any_child = {
				limit = {
					emf_can_inherit = yes
				}
				emf_laws_change_succ_bad_reaction_effect = yes
			}
		}
	}
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_tanistry_reactions_effect = {
	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Elector vassals are happy.
		# Regarding Tanistry, my assumptions are that empire-tier titles have king- and
		# duke-tier electors, king-tier titles have duke- and count-tier electors, duke-tier
		# titles have count- and baron-tier electors, and count-tier titles have baron-tier
		# electors.
		any_vassal = {
			limit = {
				OR = {
					AND = {
						event_target:emf_succ_title = { tier = EMPEROR }
						higher_real_tier_than = COUNT
						OR = {
							event_target:emf_succ_title = { is_titular = yes }
							any_demesne_title = {
								higher_tier_than = COUNT
								de_jure_liege_or_above = event_target:emf_succ_title
							}
						}
					}
					AND = {
						event_target:emf_succ_title = { tier = KING }
						higher_real_tier_than = BARON
						OR = {
							event_target:emf_succ_title = { is_titular = yes }
							any_demesne_title = {
								higher_tier_than = BARON
								de_jure_liege_or_above = event_target:emf_succ_title
							}
						}
					}
					AND = {
						event_target:emf_succ_title = { tier = DUKE }
						OR = {
							event_target:emf_succ_title = { is_titular = yes }
							any_demesne_title = {
								de_jure_liege_or_above = event_target:emf_succ_title
							}
						}
					}
					AND = {
						event_target:emf_succ_title = { tier = COUNT }
						any_demesne_title = {
							de_jure_liege = event_target:emf_succ_title
						}
					}
				}
			}
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Dynasty members are happy
		any_dynasty_member = {
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Legitimate children are angry
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_bad_reaction_effect = yes
		}
		# The former pretenders are upset if not of the ruler's dynasty
		any_opinion_modifier_target = {
			limit = {
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_succ_former_pretender }
				NOT = { dynasty = event_target:emf_succ_changer }
			}
			emf_laws_change_succ_bad_reaction_effect = yes
			event_target:emf_succ_title = {
				if = {
					limit = { NOT = { claimed_by = PREV } }
					add_weak_claim = PREV
				}
			}
			any_spouse = {
				limit = { NOT = { dynasty = event_target:emf_succ_changer } }
				emf_laws_change_succ_bad_reaction_effect = yes
			}
			any_child = {
				limit = {
					emf_can_inherit = yes
					NOT = { dynasty = event_target:emf_succ_changer }
				}
				emf_laws_change_succ_bad_reaction_effect = yes
			}
		}
		# The former heir is upset if not of the ruler's dynasty
		event_target:emf_former_heir = {
			if = {
				limit = { NOT = { dynasty = event_target:emf_succ_changer } }
				event_target:emf_succ_title = { add_claim = PREV }
				emf_laws_change_succ_terrible_reaction_effect = yes
				any_spouse = {
					limit = { NOT = { dynasty = event_target:emf_succ_changer } }
					emf_laws_change_succ_terrible_reaction_effect = yes
				}
				any_child = {
					limit = {
						emf_can_inherit = yes
						NOT = { dynasty = event_target:emf_succ_changer }
					}
					emf_laws_change_succ_terrible_reaction_effect = yes
				}
			}
		}
	}
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_ultimogeniture_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Dynasty members are slightly upset
		any_dynasty_member = {
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Legitimate children are angry
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_bad_reaction_effect = yes
		}
		# Heir is happy
		event_target:emf_heir = { emf_laws_change_succ_good_reaction_effect = yes }
	}
	
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_succ_turkish_succession_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		# Vassals are slightly upset
		any_vassal = {
			limit = { emf_laws_change_succ_affected_vassal_trigger = yes }
			emf_laws_change_succ_mild_reaction_effect = yes
		}
		# Dynasty members are happy
		any_dynasty_member = {
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Legitimate children are happy
		any_child = {
			limit = { emf_can_inherit = yes }
			emf_laws_change_succ_good_reaction_effect = yes
		}
		# Heir is happy
		event_target:emf_heir = { emf_laws_change_succ_good_reaction_effect = yes }
	}
	
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_agnatic_succession_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		emf_laws_change_succ_feminist_reactions_effect = yes
	}
	
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_cognatic_succession_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	if = {
		limit = { has_title_flag = former_agnatic_succession }
		holder_scope = {
			emf_laws_change_succ_antifeminist_reactions_effect = yes
		}
	}
	if = {
		limit = { has_title_flag = former_true_cognatic_succession }
		holder_scope = {
			emf_laws_change_succ_feminist_reactions_effect = yes
		}
	}
	
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	emf_laws_change_succ_cleanup_effect = yes
}

emf_laws_true_cognatic_succession_reactions_effect = {
	current_heir = { save_event_target_as = emf_heir }

	holder_scope = {
		emf_laws_change_succ_antifeminist_reactions_effect = yes
	}
	
	set_title_flag = emf_succ_title
	holder_scope = { character_event = { id = emf_laws.10 } }
	emf_laws_change_succ_cleanup_effect = yes
}

# Helpers for gender succession reactions (feminist & antifeminist)...

emf_laws_change_succ_feminist_reactions_effect = {
	# Female vassals are upset
	any_vassal = {
		limit = {
			is_female = yes
			emf_laws_change_succ_affected_vassal_trigger = yes
		}
		emf_laws_change_succ_bad_reaction_effect = yes
	}
	# Male vassals are slightly upset
	any_vassal = {
		limit = {
			is_female = no
			emf_laws_change_succ_affected_vassal_trigger = yes
		}
		emf_laws_change_succ_mild_reaction_effect = yes
	}
	# Female dynasty members are upset
	any_dynasty_member = {
		limit = {
			is_female = yes
			emf_can_inherit = yes
		}
		emf_laws_change_succ_bad_reaction_effect = yes
	}
	# Male dynasty members are happy
	any_dynasty_member = {
		limit = {
			is_female = no
			emf_can_inherit = yes
		}
		emf_laws_change_succ_good_reaction_effect = yes
	}
	# Female children are upset
	any_child = {
		limit = {
			is_female = yes
			emf_can_inherit = yes
		}
		emf_laws_change_succ_bad_reaction_effect = yes
	}
	# Male children are happy
	any_child = {
		limit = {
			is_female = no
			emf_can_inherit = yes
		}
		emf_laws_change_succ_good_reaction_effect = yes
	}
}

emf_laws_change_succ_antifeminist_reactions_effect = {
	# Male vassals are upset
	any_vassal = {
		limit = {
			is_female = no
			emf_laws_change_succ_affected_vassal_trigger = yes
		}
		emf_laws_change_succ_bad_reaction_effect = yes
	}
	# Female vassals are slightly upset
	any_vassal = {
		limit = {
			is_female = yes
			emf_laws_change_succ_affected_vassal_trigger = yes
		}
		emf_laws_change_succ_mild_reaction_effect = yes
	}
	# Male dynasty members are upset
	any_dynasty_member = {
		limit = {
			is_female = no
			emf_can_inherit = yes
		}
		emf_laws_change_succ_bad_reaction_effect = yes
	}
	# Female dynasty members are happy
	any_dynasty_member = {
		limit = {
			is_female = yes
			emf_can_inherit = yes
		}
		emf_laws_change_succ_good_reaction_effect = yes
	}
	# Male children are upset
	any_child = {
		limit = {
			is_female = no
			emf_can_inherit = yes
		}
		emf_laws_change_succ_bad_reaction_effect = yes
	}
	# Female children are happy
	any_child = {
		limit = {
			is_female = yes
			emf_can_inherit = yes
		}
		emf_laws_change_succ_good_reaction_effect = yes
	}
}

#### CROWN LAWS & FRIENDS ####

emf_laws_increase_demesne_authority_opinion_effect = {
	custom_tooltip = {
		text = emf_laws_ctt_opinion_increase_demesne_authority
		hidden_tooltip = {
			holder_scope = {
				any_vassal = {
					limit = { tier = BARON }
					opinion = { who = PREV modifier = opinion_increased_authority months = 120 }
				}
				any_realm_lord = {
					limit = { higher_tier_than = BARON }
					opinion = { who = PREV modifier = opinion_increased_authority months = 120 }
				}
			}
		}
	}
}

emf_laws_increase_authority_opinion_effect = {
	custom_tooltip = {
		text = emf_laws_ctt_opinion_increase_authority
		hidden_tooltip = {
			holder_scope = {
				any_vassal = {
					limit = {
						tier = BARON
						crownlaw_title = { title = PREVPREVPREV }
					}
					opinion = { who = PREV modifier = opinion_increased_authority months = 120 }
				}
				any_playable_ruler = {
					limit = {
						OR = {
							is_liege_or_above = ROOT
							religion = ROOT
						}
						crownlaw_title = { title = PREVPREVPREV }
						higher_tier_than = BARON
					}
					opinion = { who = PREV modifier = opinion_increased_authority months = 120 }
				}
			}
		}
	}
}

emf_laws_investiture_law_0_pass_effect = {
	holder_scope = {
		religion_head = {
			opinion = { who = PREV modifier = opinion_investiture_law_0_enacted_relhead }
			if = {
				limit = {
					OR = {
						religion = catholic
						religion = fraticelli
					}
				}
				religion_authority = { modifier = ruler_enacted_investiture_pope }
			}
			if = {
				limit = { religion = cathar }
				religion_authority = { modifier = ruler_enacted_investiture_cathar_patriarch }
			}
			if = {
				limit = { religion = bogomilist }
				religion_authority = { modifier = ruler_enacted_investiture_elder }
			}
			if = {
				limit = { religion = manichean }
				religion_authority = { modifier = ruler_enacted_investiture_mani_leader }
			}
		}
		if = {
			limit = {
				rightful_religious_head_scope = {
					crownlaw_title = { title = PREVPREVPREV }
					OR = {
						has_claim = k_papal_state
						has_claim = d_fraticelli
					}
				}
			}
			custom_tooltip = {
				text = emf_religion_ctt_antipapacy_ends
				hidden_tooltip = {
					rightful_religious_head_scope = {
						remove_claim = k_papal_state
						remove_claim = d_fraticelli
						opinion = { who = PREV modifier = opinion_renounced_my_antipapacy }
					}
				}
			}
		}
		clr_character_flag = emf_forced_investiture_head_tmp
	}
}

emf_laws_investiture_law_1_pass_effect = {
	holder_scope = {
		religion_head = {
			opinion = { who = PREV modifier = opinion_investiture_law_1_enacted_relhead }
			religion_authority = { modifier = ruler_enacted_investiture_any }
		}
		clr_character_flag = emf_forced_investiture_any_tmp
	}
}
