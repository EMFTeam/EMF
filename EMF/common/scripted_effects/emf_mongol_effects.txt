# -*- ck2.scripted_effects -*-

emf_grant_golden_horde_titles = {
	any_demesne_title = {
		limit = {
			lower_tier_than = DUKE
			location = { emf_golden_horde_province = yes }
		}
		if = {
			limit = { has_flag = emf_mongol_split_granted }
			log = "ASSERT: emf_grant_golden_horde_titles: title will be re-granted: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
		}
		set_flag = emf_mongol_split_granted
		grant_title = event_target:emf_mongol_heir_1
		if = {
			limit = { NOT = { holder = event_target:emf_mongol_heir_1 } }
			log = "WARNING: emf_grant_golden_horde_titles: failed to grant title: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
			log = "--> trying to use gain_title..."
			gain_title = event_target:emf_mongol_heir_1
			if = {
				limit = { NOT = { holder = event_target:emf_mongol_heir_1 } }
				log = "----> also failed!"
			}
			else = {
				log = "----> it worked!"
			}
		}
	}
	any_demesne_title = {
		limit = {
			NOR = {
				tier = EMPEROR
				lower_tier_than = DUKE
				owner = { clan_title = { title = PREVPREV } }
			}
			capital_scope = { emf_golden_horde_province = yes }
		}
		if = {
			limit = { has_flag = emf_mongol_split_granted }
			log = "ASSERT: emf_grant_golden_horde_titles: title will be re-granted: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
		}
		set_flag = emf_mongol_split_granted
		grant_title = event_target:emf_mongol_heir_1
		if = {
			limit = { NOT = { holder = event_target:emf_mongol_heir_1 } }
			log = "WARNING: emf_grant_golden_horde_titles: failed to grant title: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
			log = "--> trying to use gain_title..."
			gain_title = event_target:emf_mongol_heir_1
			if = {
				limit = { NOT = { holder = event_target:emf_mongol_heir_1 } }
				log = "----> also failed! destroying title instead..."
				if = {
					limit = { emf_can_safely_autodestroy_title = yes }
					emf_destroy_title = yes
				}
				else = {
					emf_unsafe_destroy_title = yes
				}
			}
			else = {
				log = "----> it worked!"
			}
		}
	}
}

emf_grant_il_khanate_titles = {
	any_demesne_title = {
		limit = {
			lower_tier_than = DUKE
			location = { emf_il_khanate_province = yes }
		}
		if = {
			limit = { has_flag = emf_mongol_split_granted }
			log = "ASSERT: emf_grant_il_khanate_titles: title will be re-granted: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
		}
		set_flag = emf_mongol_split_granted
		grant_title = event_target:emf_mongol_heir_2
		if = {
			limit = { NOT = { holder = event_target:emf_mongol_heir_2 } }
			log = "WARNING: emf_grant_il_khanate_titles: failed to grant title: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
			log = "--> trying to use gain_title..."
			gain_title = event_target:emf_mongol_heir_2
			if = {
				limit = { NOT = { holder = event_target:emf_mongol_heir_2 } }
				log = "----> also failed!"
			}
			else = {
				log = "----> it worked!"
			}
		}
	}
	any_demesne_title = {
		limit = {
			NOR = {
				tier = EMPEROR
				lower_tier_than = DUKE
				owner = { clan_title = { title = PREVPREV } }
			}
			capital_scope = { emf_il_khanate_province = yes }
		}
		if = {
			limit = { has_flag = emf_mongol_split_granted }
			log = "ASSERT: emf_grant_il_khanate_titles: title will be re-granted: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
		}
		set_flag = emf_mongol_split_granted
		grant_title = event_target:emf_mongol_heir_2
		if = {
			limit = { NOT = { holder = event_target:emf_mongol_heir_2 } }
			log = "WARNING: emf_grant_il_khanate_titles: failed to grant title: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
			log = "--> trying to use gain_title..."
			gain_title = event_target:emf_mongol_heir_2
			if = {
				limit = { NOT = { holder = event_target:emf_mongol_heir_2 } }
				log = "----> also failed! destroying title instead..."
				if = {
					limit = { emf_can_safely_autodestroy_title = yes }
					emf_destroy_title = yes
				}
				else = {
					emf_unsafe_destroy_title = yes
				}
			}
			else = {
				log = "----> it worked!"
			}
		}
	}
}

emf_grant_chagatai_titles = {
	any_demesne_title = {
		limit = {
			lower_tier_than = DUKE
			location = { emf_chagatai_province = yes }
		}
		if = {
			limit = { has_flag = emf_mongol_split_granted }
			log = "ASSERT: emf_grant_chagatai_titles: title will be re-granted: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
		}
		set_flag = emf_mongol_split_granted
		grant_title = event_target:emf_mongol_heir_3
		if = {
			limit = { NOT = { holder = event_target:emf_mongol_heir_3 } }
			log = "WARNING: emf_grant_chagatai_titles: failed to grant title: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
			log = "--> trying to use gain_title..."
			gain_title = event_target:emf_mongol_heir_3
			if = {
				limit = { NOT = { holder = event_target:emf_mongol_heir_3 } }
				log = "----> also failed!"
			}
			else = {
				log = "----> it worked!"
			}
		}
	}
	any_demesne_title = {
		limit = {
			NOR = {
				tier = EMPEROR
				lower_tier_than = DUKE
				owner = { clan_title = { title = PREVPREV } }
			}
			capital_scope = { emf_chagatai_province = yes }
		}
		if = {
			limit = { has_flag = emf_mongol_split_granted }
			log = "ASSERT: emf_grant_chagatai_titles: title will be re-granted: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
		}
		set_flag = emf_mongol_split_granted
		grant_title = event_target:emf_mongol_heir_3
		if = {
			limit = { NOT = { holder = event_target:emf_mongol_heir_3 } }
			log = "WARNING: emf_grant_chagatai_titles: failed to grant title: [This.GetID] / holder: [This.Holder.GetTitledFirstName] [This.Holder.GetOnlyDynastyName] (#[This.Holder.GetID]/[This.Holder.PrimaryTitle.GetID])"
			log = "--> trying to use gain_title..."
			gain_title = event_target:emf_mongol_heir_3
			if = {
				limit = { NOT = { holder = event_target:emf_mongol_heir_3 } }
				log = "----> also failed! destroying title instead..."
				if = {
					limit = { emf_can_safely_autodestroy_title = yes }
					emf_destroy_title = yes
				}
				else = {
					emf_unsafe_destroy_title = yes
				}
			}
			else = {
				log = "----> it worked!"
			}
		}
	}
}

emf_create_mongol_dynasty = {
	# Send dynasty-changing event to children
	save_event_target_as = new_dynasty_head
	any_child_even_if_dead = {
		limit = { dynasty = ROOT }
		character_event = { id = emf_mongol.102 days = 1 } # FIXME: can we actually send a deferred event to a dead char?
	}
	# Then actually change dynasty
	if = {
		limit = {
			OR = {
				NOT = { dynasty = 11100 }
				NOR = {
					AND = {
						has_flag = line_of_jochi
						NOT = { has_global_flag = jochi_dynasty_created }
					}
					AND = {
						has_flag = line_of_chagatai
						NOT = { has_global_flag = chagatai_dynasty_created }
					}
					AND = {
						has_flag = line_of_ogodei
						NOT = { has_global_flag = ogodei_dynasty_created }
					}
					AND = {
						has_flag = line_of_tolui
						NOT = { has_global_flag = tolui_dynasty_created }
					}
				}
			}
		}
		dynasty = father_bastard
	}
	if = {
		limit = {
			dynasty = 11100 # Genghis Khan's dynasty
			OR = {
				AND = {
					has_flag = line_of_jochi
					NOT = { has_global_flag = jochi_dynasty_created }
				}
				AND = {
					has_flag = line_of_chagatai
					NOT = { has_global_flag = chagatai_dynasty_created }
				}
				AND = {
					has_flag = line_of_ogodei
					NOT = { has_global_flag = ogodei_dynasty_created }
				}
				AND = {
					has_flag = line_of_tolui
					NOT = { has_global_flag = tolui_dynasty_created }
				}
			}
		}
		if = {
			limit = {
				has_flag = line_of_jochi
				NOT = { has_global_flag = jochi_dynasty_created }
			}
			set_global_flag = jochi_dynasty_created
			dynasty = 7379
			set_dynasty_flag = emf_is_historical
		}
		if = {
			limit = {
				has_flag = line_of_chagatai
				NOT = { has_global_flag = chagatai_dynasty_created }
			}
			set_global_flag = chagatai_dynasty_created
			dynasty = 7380
			set_dynasty_flag = emf_is_historical
		}
		if = {
			limit = {
				has_flag = line_of_ogodei
				NOT = { has_global_flag = ogodei_dynasty_created }
			}
			set_global_flag = ogodei_dynasty_created
			dynasty = 1000054550
			set_dynasty_flag = emf_is_historical
		}
		if = {
			limit = {
				has_flag = line_of_tolui
				NOT = { has_global_flag = tolui_dynasty_created }
			}
			set_global_flag = tolui_dynasty_created
			dynasty = 101916
			set_dynasty_flag = emf_is_historical
		}
	}
}

#### MONGOL INVASION ####

emf_mongol_spawn_unit = {
	spawn_unit = {
		province = event_target:emf_target_province
		earmark = horde_invasion
		troops =
		{
			horse_archers = { 1800 1800 }
			light_cavalry = { 1067 1067 }
			light_infantry = { 361 361 }
			heavy_infantry = { 140 140 }
			knights = { 32 32 }
		}
	}
}
