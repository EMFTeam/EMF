# -*- ck2.succession_voting -*-

# The entry should be named in the same way that the elective succession law is named to define its voter's logic.
# Root scope - Voter, the character voting in the election
# From scope - Candidate, Character considered for the title
# FromFrom scope - The title the nomination is for
# FromFromFrom scope - The title owner's candidate
# The voter will vote for the top score candidate calculated from this script.

pictish_elective = {

	elector_vote_strength = {
		days = 1
	}
	
	elector_selection = {
		days = -5 		#If below 0, ROOT is not valid to be an Elector.
		emf_succession_voting_elector_selection_default_head = yes
		emf_succession_voting_elector_selection_basic_elective = yes
		emf_succession_voting_elector_selection_default_prioritization = yes
	}
	candidate_vote_score = {
		days = 0
		##########################   Elector voting himself   ##########################
		emf_succession_voting_self_score = yes

		##########################   Candidate's traits   ##########################

		#Sexism
		emf_succession_voting_candidate_gender_score = yes

		#Ageism
		emf_succession_voting_candidate_age_score_prefer_older = yes

		#Culturism
		emf_succession_voting_candidate_culture_score = yes

		#Faithism
		emf_succession_voting_candidate_religion_score = yes

		#Barbarism/Tribalism
		emf_succession_voting_candidate_government_score = yes

		#Nepotism
		emf_succession_voting_candidate_nepotism_score = yes

		#Prestige 
		emf_succession_voting_candidate_prestige_score = yes

		#Piety
		emf_succession_voting_candidate_piety_score = yes

		#Educational preferences
		emf_succession_voting_candidate_education_score = yes
		emf_succession_voting_candidate_warrior_score = yes

		#Claims
		emf_succession_voting_candidate_claims_score = yes

		#All the Traits
		emf_succession_voting_candidate_traits_score = yes
		
		additive_modifier = { #Shunned for being unproved courtier in the shadow of the ruler.
			value = -10
			localisation_key = tooltip_feudal_elector_vote_spoiled_courtier
			NOT = { character = FROM } #Do not judge yourself.
			FROM = {
				NOR = {
					is_ruler = yes
					has_job_title = job_marshal
					has_job_title = job_chancellor
					has_job_title = job_treasurer
					has_job_title = job_spiritual
					has_job_title = job_spymaster
				}
				OR = {
					trait = decadent
					trait = slothful
					trait = hedonist
					trait = is_fat
					trait = shy
				}
			}
		}

		##########################   Ruler's traits   ##########################
		emf_succession_voting_ruler_traits_score = yes

		##########################   Raw Opinion bonus towards Candidate   ##########################
		emf_succession_voting_candidate_opinion_score = yes

		##########################   Raw Opinion bonus towards Ruler   ##########################
		emf_succession_voting_ruler_opinion_score = yes
		
		##########################   Special Pictish Rules to favor close relatives   ##########################
		# Historical succession was male-only, but proceeded exclusively through female lines (i.e. uterine brother, nephew through ruler's sister, grandson through ruler's daughter, female cousin through ruler's mother's sister, etc.)
		# Historical succession also disfavored direct children of the current ruler.
		# Note: female line succession is guaranteed through candidate_trigger. Therefore, if we score based on sibling, nibling, grandchild, etc. relations, we are guaranteed to only ever score characters who are related through female lines.
		
		# Direct children of rulers are not historical, but if there's no other choice, they will be chosen
		additive_modifier = {
			value = -50
			NOT = { character = FROM } #But not if it's me.
			ROOT_FROMFROM = {
				show_scope_change = no
				holder_scope = {
					show_scope_change = no
					ROOT_FROM = {
						is_child_of = PREV
					}
				}
			}
		}
		
		# Applies only to dynasts of the current ruler who are not close relatives through the female line.
		additive_modifier = {
			value = -50
			localisation_key = tooltip_pictish_elector_vote_not_related_through_female_line
			NOT = { character = FROM } #But not if it's me.
			FROM = {
				NOR = {
					ROOT_FROMFROM = {
						holder_scope = {
							is_parent_of = PREVPREV
						}
					}
					# For performance reasons, we're only going to go up to three relations deep
					mother_even_if_dead = {
						OR = {
							# Backup in case gender succession switches off of Agnatic
							ROOT_FROMFROM = {
								OR = {
									holder_scope = {
										character = PREVPREV
									}
									any_previous_holder = {
										character = PREVPREV
									}
								}
							}
							any_child_even_if_dead = {
								OR = {
									# Uterine Sibling of a current or previous holder of the title
									ROOT_FROMFROM = {
										OR = {
											holder_scope = {
												character = PREVPREV
											}
											any_previous_holder = {
												character = PREVPREV
											}
										}
									}
									AND = {
										is_female = yes
										any_child_even_if_dead = {
											OR = {
												# Aunt/Uncle through female line of a current or previous holder of the title
												ROOT_FROMFROM = {
													OR = {
														holder_scope = {
															character = PREVPREV
														}
														any_previous_holder = {
															character = PREVPREV
														}
													}
												}
												AND = {
													is_female = yes
													any_child_even_if_dead = {
														# Great Aunt/Uncle through female line of a current or previous holder of the title
														ROOT_FROMFROM = {
															OR = {
																holder_scope = {
																	character = PREVPREV
																}
																any_previous_holder = {
																	character = PREVPREV
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
							any_sibling_even_if_dead = {
								OR = {
									# Nibling through female line of a current or previous holder of the title
									ROOT_FROMFROM = {
										OR = {
											holder_scope = {
												character = PREVPREV
											}
											any_previous_holder = {
												character = PREVPREV
											}
										}
									}
									# Cousin through female line of a current or previous holder of the title
									AND = {
										is_female = yes
										any_child_even_if_dead = {
											ROOT_FROMFROM = {
												OR = {
													holder_scope = {
														character = PREVPREV
													}
													any_previous_holder = {
														character = PREVPREV
													}
												}
											}
										}
									}
								}
							}
							mother_even_if_dead = {
								OR = {
									# Grandchild through female line of a current or previous holder of the title
									ROOT_FROMFROM = {
										OR = {
											holder_scope = {
												character = PREVPREV
											}
											any_previous_holder = {
												character = PREVPREV
											}
										}
									}
									# Great-Nibling through female line of a current or previous holder of the title
									any_sibling_even_if_dead = {
										ROOT_FROMFROM = {
											OR = {
												holder_scope = {
													character = PREVPREV
												}
												any_previous_holder = {
													character = PREVPREV
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		
		additive_modifier = {
			value = 50
			NOT = { character = FROM } #But not if it's me.
			ROOT_FROMFROM = {
				show_scope_change = no
				holder_scope = {
					show_scope_change = no
					ROOT_FROM = {
						sibling = PREV
						hidden_tooltip = { # Guards against modifier stacking through incest
							NOR = {
								is_nibling_of = PREV
								is_cousin_of = PREV
								is_child_of = PREV
							}
						}
					}
				}
			}
		}
		additive_modifier = {
			value = 25
			NOT = { character = FROM } #But not if it's me.
			ROOT_FROMFROM = {
				show_scope_change = no
				holder_scope = {
					show_scope_change = no
					ROOT_FROM = {
						OR = {
							is_nibling_of = PREV
							is_cousin_of = PREV
						}
						hidden_tooltip = { # Guards against modifier stacking through incest
							NOR = {
								sibling = PREV
								is_child_of = PREV
							}
						}
					}
				}
			}
		}
	}
	
	#ROOT = Current Title holder, FROM = Candidate, FROMFROM = Title, FROMFROMFROM = Null
	candidate_trigger = {
		FROMFROM = { has_holder = yes }
		NOT = { character = FROM } #Not the current ruler.
		FROM = {
			NOT = { has_flag = emf_disinherit_@ROOT_FROMFROM }
		}
		FROM = { #Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
			OR = { 
				is_liege_or_above = ROOT
				is_ruler = no
				ROOT_FROMFROM = {
					OR = {
						holder_scope = { independent = yes }
						NOT = { has_law = inheritance_1 }
					}
				}
			}
		}
		FROM = {
			OR = {
				# Claimants are always eligible
				has_claim = ROOT_FROMFROM
				# Children of the current ruler are allowed as a backup, even if it isn't historical
				is_child_of = ROOT
				# Dynasts of the current ruler are not technically historical, but they are needed for gameplay purposes to help human players not have to do matrilineal marriages all the time to keep playing without non-dynastic succession
				dynasty = ROOT
				# Historical succession was male-only, but proceeded exclusively through female lines (i.e. uterine brother, nephew through ruler's sister, grandson through ruler's daughter, female cousin through ruler's mother's sister, etc.)
				# For performance reasons, we're only going to go up to three relations deep
				mother_even_if_dead = {
					OR = {
						# Backup in case gender succession switches off of Agnatic
						ROOT_FROMFROM = {
							any_previous_holder = {
								character = PREVPREV
							}
						}
						any_child_even_if_dead = {
							OR = {
								# Uterine Sibling of a current or previous holder of the title
								character = ROOT
								ROOT_FROMFROM = {
									any_previous_holder = {
										character = PREVPREV
									}
								}
								AND = {
									is_female = yes
									any_child_even_if_dead = {
										OR = {
											# Aunt/Uncle through female line of a current or previous holder of the title
											character = ROOT
											ROOT_FROMFROM = {
												any_previous_holder = {
													character = PREVPREV
												}
											}
											AND = {
												is_female = yes
												any_child_even_if_dead = {
													OR = {
														# Great Aunt/Uncle through female line of a current or previous holder of the title
														character = ROOT
														ROOT_FROMFROM = {
															any_previous_holder = {
																character = PREVPREV
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
						any_sibling_even_if_dead = {
							OR = {
								# Nibling through female line of a current or previous holder of the title
								character = ROOT
								ROOT_FROMFROM = {
									any_previous_holder = {
										character = PREVPREV
									}
								}
								# Cousin through female line of a current or previous holder of the title
								AND = {
									is_female = yes
									any_child_even_if_dead = {
										OR = {
											character = ROOT
											ROOT_FROMFROM = {
												any_previous_holder = {
													character = PREVPREV
												}
											}
										}
									}
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								# Grandchild through female line of a current or previous holder of the title
								character = ROOT
								ROOT_FROMFROM = {
									any_previous_holder = {
										character = PREVPREV
									}
								}
								# Great-Nibling through female line of a current or previous holder of the title
								any_sibling_even_if_dead = {
									OR = {
										character = ROOT
										ROOT_FROMFROM = {
											any_previous_holder = {
												character = PREVPREV
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		FROM = {
			OR = { #Candidate should not be a landless Courtier that is about to inherit a Theocracy or Republic
				AND = {
					is_ruler = yes
					is_landed = yes
					is_republic = no
					is_merchant_republic = no
					is_theocracy = no
				}
				NOR = {
					is_republic = yes
					is_merchant_republic = yes
					is_theocracy = yes
					any_heir_title = {
						OR = {
							is_republic = yes
							is_merchant_republic = yes
							is_theocracy = yes
						}
					}
				}
			}
			OR = { #If the title controls the religion, candidates must be of the same religion.
				ROOT = { 
					NOT = { 
						controls_religion = yes
					}
				}
				religion = ROOT
			}
			emf_can_inherit = yes
			NOR = {
				#father = {
				#	is_alive = yes
				#	NOT = { is_married = ROOT }
				#	parent_for_elective_succession_trigger = yes
				#}
				#mother = {
				#	is_alive = yes
				#	NOT = { is_married = ROOT }
				#	parent_for_elective_succession_trigger = yes
				#}
				is_ascetic_trigger = yes
				is_theocracy = yes
				is_republic = yes
				is_merchant_republic = yes
			}
		}
	}
}
