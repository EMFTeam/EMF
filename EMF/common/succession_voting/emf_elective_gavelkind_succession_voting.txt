# -*- ck2.succession_voting -*-

# The entry should be named in the same way that the elective succession law is named to define its voter's logic.
# Root scope - Voter, the character voting in the election
# From scope - Candidate, Character considered for the title
# FromFrom scope - The title the nomination is for
# FromFromFrom scope - The title owner's candidate
# The voter will vote for the top score candidate calculated from this script.

elective_gavelkind = {
	elector_vote_strength = {
		days = 1
	}
	
	elector_selection = {
		days = -5
		emf_succession_voting_elector_selection_default_head = yes
		emf_succession_voting_elector_selection_basic_elective = yes
		emf_succession_voting_elector_selection_default_prioritization = yes
	}
	candidate_vote_score = {
		days = 0
		##########################   Elector voting himself   ##########################
		emf_succession_voting_self_score = yes

		##########################   Candidate's traits   ##########################

		#Sexism
		emf_succession_voting_candidate_gender_score = yes

		#Ageism - Elective Gavelkind is more biased towards younger (adult) rulers.
		emf_succession_voting_candidate_age_score_prefer_middle = yes

		#Culturism
		emf_succession_voting_candidate_culture_score = yes

		#Faithism - Elective Gavelkind is more about choosing a good Dynastic member, so faith bias is slightly reduced.
		emf_succession_voting_candidate_religion_score_unimportant = yes

		#Barbarism/Tribalism
		emf_succession_voting_candidate_government_score = yes

		#Nepotism
		emf_succession_voting_candidate_nepotism_score = yes

		#Prestige 
		emf_succession_voting_candidate_prestige_score = yes

		#Piety
		emf_succession_voting_candidate_piety_score = yes

		#Educational preferences
		emf_succession_voting_candidate_education_score = yes
		emf_succession_voting_candidate_warrior_score = yes

		#Claims - More emphasis on claimants for Elective Gavelkind.
		emf_succession_voting_candidate_claims_score_important = yes

		#All the Traits
		emf_succession_voting_candidate_traits_score_common = yes
		emf_succession_voting_candidate_traits_score_not_eldership = yes
		emf_succession_voting_candidate_traits_score_not_byzantine_elective = yes
		
		additive_modifier = { #Shunned for being unproved courtier in the shadow of the ruler. - Boosted for Elective Gavelkind
			value = -20
			localisation_key = tooltip_feudal_elector_vote_spoiled_courtier
			NOT = { character = FROM } #Do not judge yourself.
			FROM = { 
				NOR = { 
					is_ruler = yes
					has_job_title = job_marshal
					has_job_title = job_chancellor
					has_job_title = job_treasurer
					has_job_title = job_spiritual
					has_job_title = job_spymaster
				}
				OR = { 
					trait = decadent
					trait = slothful
					trait = hedonist
					trait = is_fat
					trait = shy
				}
			}
		}

		##########################   Ruler's traits   ##########################
		emf_succession_voting_ruler_traits_score = yes

		##########################   Raw Opinion bonus towards Candidate   ##########################
		emf_succession_voting_candidate_opinion_score = yes

		##########################   Raw Opinion bonus towards Ruler   ##########################
		emf_succession_voting_ruler_opinion_score = yes
	}
	
	#ROOT = Current Title holder, FROM = Candidate, FROMFROM = Title, FROMFROMFROM = Null
	candidate_trigger = {
		NOT = { character = FROM } #Not the current ruler.
		FROM = {
			NOT = { has_flag = emf_disinherit_@ROOT_FROMFROM }
		}
		FROM = { 
			NOR = { 
				trait = crusader_king 
				trait = crusader_queen
			} 
		} 
		FROM = { #Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
			OR = {
				is_liege_or_above = ROOT
				is_ruler = no
				ROOT_FROMFROM = {
					OR = {
						owner = { independent = yes }
						NOT = { has_law = inheritance_1 }
					}
				}
			} 
		}
		dynasty = FROM
		FROM = {
			OR = { #Candidate should not be a landless Courtier that is about to inherit a Theocracy or Republic
				AND = {
					is_ruler = yes
					is_landed = yes
					is_republic = no
					is_merchant_republic = no
					is_theocracy = no
				}
				NOR = {
					any_heir_title = {
						is_republic = yes
					}
					any_heir_title = {
						is_merchant_republic = yes
					}
					any_heir_title = {
						is_theocracy = yes
					}
				}
			}
			OR = { #If the title controls the religion, candidates must be of the same religion.
				ROOT = { 
					NOT = { 
						controls_religion = yes
					}
				}
				religion = ROOT
			}
			emf_can_inherit = yes
			NOR = {
				is_theocracy = yes
				is_republic = yes
				is_merchant_republic = yes
			}
		}
	}
}
