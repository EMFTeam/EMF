# DO NOT ALTER THE NAME OR NUMBER OF THESE!

succession_laws = {

	succ_adopt_gavelkind = {
		oldest_child_opinion = -5
		child_opinion = 15
		dynasty_opinion = 5
		vassal_opinion = 5
	
		potential = {
			emf_laws_succ_adopt_gavelkind_potential_trigger = yes
		}
		allow = {
			emf_laws_no_elective_succession_voting_trigger = yes
			emf_laws_change_succ_prestige_cost_trigger = yes
		}
		effect = {
			emf_laws_succ_adopt_gavelkind_effect = yes
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	succ_adopt_elective_gavelkind = {
		child_opinion = 15
		dynasty_opinion = 5
	
		potential = {
			has_global_flag = EMF
			NOT = { has_law = succ_elective_gavelkind }
			emf_laws_succ_basic_potential_trigger = yes
			holder_scope = {
				OR = {
					is_feudal = yes
					is_tribal = yes
				}
				in_revolt = no
			}
			rebel = no
			emf_laws_no_elective_succession_voting_trigger = yes
		}
		allow = {
			emf_laws_change_succ_prestige_cost_trigger = yes
		}
		effect = {
			emf_laws_change_succ_basic_effect = yes
			tooltip = { succession = elective_gavelkind }
			hidden_tooltip = {
				save_event_target_as = emf_succ_title
				holder_scope = { save_event_target_as = emf_succ_changer }
				
				log = "INFO: succ_adopt_elective_gavelkind: [emf_succ_changer.GetTitledFirstName] (ID: [emf_succ_changer.GetID]) changing law for the [emf_succ_title.GetFullBaseName]"

				emf_laws_change_succ_save_contenders_effect = yes
				add_law = succ_elective_gavelkind
				current_heir = { save_event_target_as = emf_heir }

				holder_scope = {
					# Vassals are slightly upset
					any_vassal = {
						limit = {
							emf_laws_change_succ_affected_vassal_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Dynasty members are happy
					any_dynasty_member = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_good_reaction_effect = yes
					}
					# The former pretenders are upset if not of the ruler's dynasty
					any_opinion_modifier_target = {
						limit = {
							reverse_has_opinion_modifier = {
								who = PREV
								modifier = opinion_succ_former_pretender
							}
							NOT = { dynasty = event_target:emf_succ_changer }
						}
						emf_laws_change_succ_bad_reaction_effect = yes
						event_target:emf_succ_title = {
							if = {
								limit = { NOT = { claimed_by = PREV } }
								add_weak_claim = PREV
							}
						}
						any_spouse = {
							limit = {
								emf_laws_change_succ_vip_trigger = no
								NOT = { dynasty = event_target:emf_succ_changer }
							}
							emf_laws_change_succ_bad_reaction_effect = yes
						}
						any_child = {
							limit = {
								emf_can_inherit_trigger = yes
								emf_laws_change_succ_vip_trigger = no
								NOT = { dynasty = event_target:emf_succ_changer }
							}
							emf_laws_change_succ_bad_reaction_effect = yes
						}
					}
					# The former heir is upset if not of the ruler's dynasty
					event_target:emf_former_heir = {
						if = {
							limit = { NOT = { dynasty = event_target:emf_succ_changer } }
							event_target:emf_succ_title = { add_claim = PREV }
							emf_laws_change_succ_terrible_reaction_effect = yes
							any_spouse = {
								limit = {
									emf_laws_change_succ_vip_trigger = no
									NOT = { dynasty = event_target:emf_succ_changer }
								}
								emf_laws_change_succ_terrible_reaction_effect = yes
							}
							any_child = {
								limit = {
									emf_can_inherit_trigger = yes
									emf_laws_change_succ_vip_trigger = no
									NOT = { dynasty = event_target:emf_succ_changer }
								}
								emf_laws_change_succ_terrible_reaction_effect = yes
							}
						}
					}
				}
				
				emf_laws_change_succ_cleanup_effect = yes
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	succ_adopt_seniority = {
		vassal_opinion = -5
		oldest_child_opinion = -15
		child_opinion = -10
		dynasty_opinion = 5
	
		potential = {
			has_global_flag = EMF
			NOT = { has_law = succ_seniority }
			emf_laws_succ_basic_potential_trigger = yes
			holder_scope = {
				OR = {
					is_merchant_republic = no
					primary_title = {
						NOT = { title = PREVPREV }
					}
				}
				NOT = { religion_group = indian_group }
				OR = {
					NOT = { religion_group = pagan_group }
					is_reformed_religion = yes
					is_patrician = yes
				}
				OR = {
					is_republic = no
					is_patrician = yes
				}
			}
			OR = {
				AND = {
					tier = baron
					is_feudal = yes
				}
				holder_scope = { is_feudal = yes }
				holder_scope = { is_patrician = yes }
			}
			OR = {
				NOT = { tier = baron }
				holder_scope = { is_patrician = yes }
			}
		}
		allow = {
			OR = {
				emf_laws_no_crown_law_title_trigger = yes
				emf_laws_crownlaw_title_medium_ca_plus_trigger = yes
				emf_laws_holder_has_late_adminstration_plus_trigger = yes
				holder_scope = {
					is_patrician = yes
					OR = {
						is_merchant_republic = no
						PREV = {
							is_primary_holder_title = no
						}
						NOR = {
							in_revolt = yes
							succ_law_title = {
								title = PREVPREV
							}
						}
					}
				}
			}
			emf_laws_no_elective_succession_voting_trigger = yes
			emf_laws_change_succ_prestige_cost_trigger = yes
		}
		effect = {
			emf_laws_change_succ_basic_effect = yes
			tooltip = { succession = seniority }
			hidden_tooltip = {
				save_event_target_as = emf_succ_title
				holder_scope = { save_event_target_as = emf_succ_changer }
				
				log = "INFO: succ_adopt_seniority: [emf_succ_changer.GetTitledFirstName] (ID: [emf_succ_changer.GetID]) changing law for the [emf_succ_title.GetFullBaseName]"
				
				emf_laws_change_succ_save_contenders_effect = yes
				add_law = succ_seniority
				current_heir = { save_event_target_as = emf_heir }

				holder_scope = {
					# Vassals are slightly upset
					any_vassal = {
						limit = {
							emf_laws_change_succ_affected_vassal_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Dynasty members are happy
					any_dynasty_member = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_good_reaction_effect = yes
					}
					# Children that can inherit are angry
					any_child = {
						limit = {
							emf_can_inherit_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_bad_reaction_effect = yes
					}
				}
				
				# Specfic, event-driven succession law change reactions for the new heir, the former heir,
				# the former pretenders, and the new pretenders.
				set_title_flag = emf_succ_title
				holder_scope = { character_event = { id = emf_laws.10 } }
				
				emf_laws_change_succ_cleanup_effect = yes
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	succ_adopt_primogeniture = {
		oldest_child_opinion = 10
		youngest_child_opinion = -15
		child_opinion = -10
		dynasty_opinion = -5
	
		potential = {
			has_global_flag = EMF
			NOT = { has_law = succ_primogeniture }
			OR = {
				holder_scope = { any_demesne_title = { is_vice_royalty = yes } }
				AND = {
					holder_scope = {
						OR = {
							independent = yes
							NOT = { any_liege = { holy_order = yes } }
						}
						OR = {
							NOT = { religion_group = pagan_group }
							is_reformed_religion = yes
						}
					}
					OR = {
						is_landless_type_title = no
						is_tribal_type_title = yes
						temporary = yes
					}
					is_primary_type_title = no
					OR = {
						AND = {
							tier = baron
							is_feudal = yes
						}
						holder_scope = { is_feudal = yes }
					}
				}
			}
		}
		allow = {
			OR = {
				emf_laws_no_crown_law_title_trigger = yes
				emf_laws_crownlaw_title_high_ca_plus_trigger = yes
				emf_laws_holder_has_late_adminstration_plus_trigger = yes
				custom_tooltip = {
					text = emf_ctt_holds_viceroyalty
					hidden_tooltip = {
						holder_scope = { any_demesne_title = { is_vice_royalty = yes } }
					}
				}
			}
			emf_laws_no_elective_succession_voting_trigger = yes
			emf_laws_change_succ_prestige_cost_trigger = yes
		}
		effect = {
			emf_laws_change_succ_basic_effect = yes
			tooltip = { succession = primogeniture }
			hidden_tooltip = {
				save_event_target_as = emf_succ_title
				holder_scope = { save_event_target_as = emf_succ_changer }
				
				log = "INFO: succ_adopt_primogeniture: [emf_succ_changer.GetTitledFirstName] (ID: [emf_succ_changer.GetID]) changing law for the [emf_succ_title.GetFullBaseName]"
				
				emf_laws_change_succ_save_contenders_effect = yes
				add_law = succ_primogeniture
				current_heir = { save_event_target_as = emf_heir }

				holder_scope = {
					# Vassals are slightly upset
					any_vassal = {
						limit = {
							emf_laws_change_succ_affected_vassal_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Dynasty members are slightly upset
					any_dynasty_member = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Legitimate children are angry
					any_child = {
						limit = {
							emf_can_inherit_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_bad_reaction_effect = yes
					}
					# Heir is happy
					event_target:emf_heir = { emf_laws_change_succ_good_reaction_effect = yes }
				}
				
				set_title_flag = emf_succ_title
				holder_scope = { character_event = { id = emf_laws.10 } }
				emf_laws_change_succ_cleanup_effect = yes
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	succ_adopt_feudal_elective = {
		oldest_child_opinion = -15
		child_opinion = -5
		dynasty_opinion = -5
		vassal_opinion = 10
		
		potential = {
			has_global_flag = EMF
			NOT = { has_law = succ_feudal_elective }
			holder_scope = {
				OR = {
					independent = yes
					NOR = {
						any_liege = { holy_order = yes }
						any_demesne_title = { is_vice_royalty = yes }
					}
				}
				OR = {
					NOR = {
						religion_group = muslim
						religion_group = indian_group
					}
					has_law = succession_voting_power_1
				}
				OR = {
					NOT = { religion_group = pagan_group }
					is_reformed_religion = yes
				}
				is_feudal = yes
			}
			NOT = { tier = baron }
			OR = {
				is_landless_type_title = no
				is_tribal_type_title = yes
				temporary = yes
			}
			is_primary_type_title = no
			is_vice_royalty = no
		}
		allow = {
			emf_laws_change_succ_prestige_cost_trigger = yes
		}
		effect = {
			emf_laws_change_succ_basic_effect = yes
			tooltip = { succession = feudal_elective }
			hidden_tooltip = {
				save_event_target_as = emf_succ_title
				holder_scope = { save_event_target_as = emf_succ_changer }
				
				log = "INFO: succ_adopt_feudal_elective: [emf_succ_changer.GetTitledFirstName] (ID: [emf_succ_changer.GetID]) changing law for the [emf_succ_title.GetFullBaseName]"
				
				emf_laws_change_succ_save_contenders_effect = yes
				add_law = succ_feudal_elective
				current_heir = { save_event_target_as = emf_heir }

				holder_scope = {
					# Vassals are slightly upset
					any_vassal = {
						limit = {
							emf_laws_change_succ_affected_vassal_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Electors are happy
					any_vassal = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
							OR = {
								AND = {
									event_target:emf_succ_title = { tier = EMPEROR }
									higher_real_tier_than = COUNT
									OR = {
										event_target:emf_succ_title = { is_titular = yes }
										any_demesne_title = {
											higher_tier_than = COUNT
											de_jure_liege_or_above = event_target:emf_succ_title
										}
									}
								}
								AND = {
									event_target:emf_succ_title = { tier = KING }
									real_tier = DUKE
									OR = {
										event_target:emf_succ_title = { is_titular = yes }
										any_demesne_title = {
											tier = DUKE
											de_jure_liege = event_target:emf_succ_title
										}
									}
								}
								AND = {
									event_target:emf_succ_title = { tier = DUKE }
									real_tier = COUNT
									OR = {
										event_target:emf_succ_title = { is_titular = yes }
										any_demesne_title = {
											tier = COUNT
											de_jure_liege = event_target:emf_succ_title
										}
									}
								}
								AND = {
									event_target:emf_succ_title = { tier = COUNT }
									real_tier = BARON
									any_demesne_title = {
										de_jure_liege = event_target:emf_succ_title
									}
								}
							}
						}
						emf_laws_change_succ_good_reaction_effect = yes
					}
					# Dynasty members are slightly upset
					any_dynasty_member = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Legitimate children are angry
					any_child = {
						limit = {
							emf_can_inherit_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_bad_reaction_effect = yes
					}
					# The former pretenders are upset
					any_opinion_modifier_target = {
						limit = {
							reverse_has_opinion_modifier = {
								who = PREV
								modifier = opinion_succ_former_pretender
							}
						}
						emf_laws_change_succ_bad_reaction_effect = yes
						event_target:emf_succ_title = {
							if = {
								limit = { NOT = { claimed_by = PREV } }
								add_weak_claim = PREV
							}
						}
						any_spouse = {
							limit = { emf_laws_change_succ_vip_trigger = no }
							emf_laws_change_succ_bad_reaction_effect = yes
						}
						any_child = {
							limit = {
								emf_can_inherit_trigger = yes
								emf_laws_change_succ_vip_trigger = no
							}
							emf_laws_change_succ_bad_reaction_effect = yes
						}
					}
					# The former heir is upset
					event_target:emf_former_heir = {
						emf_laws_change_succ_bad_reaction_effect = yes
						event_target:emf_succ_title = { add_claim = PREV }
						any_spouse = {
							limit = { emf_laws_change_succ_vip_trigger = no }
							emf_laws_change_succ_bad_reaction_effect = yes
						}
						any_child = {
							limit = {
								emf_can_inherit_trigger = yes
								emf_laws_change_succ_vip_trigger = no
							}
							emf_laws_change_succ_bad_reaction_effect = yes
						}
					}
				}
				
				emf_laws_change_succ_cleanup_effect = yes
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	succ_adopt_tanistry = {
		oldest_child_opinion = -15
		child_opinion = -5
		dynasty_opinion = -5
		vassal_opinion = 10
		
		potential = {
			has_global_flag = EMF
			NOT = { has_law = succ_tanistry }
			emf_laws_succ_basic_potential_trigger = yes
			holder_scope = {
				NOT = { religion_group = indian_group }
				OR = {
					NOT = { religion_group = pagan_group }
					is_reformed_religion = yes
				}
				is_feudal = yes
			}
			NOT = { tier = baron }
		}
		allow = {
			holder_scope = { is_feudal = yes }
			emf_laws_change_succ_prestige_cost_trigger = yes
			emf_laws_no_elective_succession_voting_trigger = yes
		}
		effect = {
			emf_laws_change_succ_basic_effect = yes
			tooltip = { succession = tanistry }
			hidden_tooltip = {
				save_event_target_as = emf_succ_title
				holder_scope = { save_event_target_as = emf_succ_changer }
				
				log = "INFO: succ_adopt_tanistry: [emf_succ_changer.GetTitledFirstName] (ID: [emf_succ_changer.GetID]) changing law for the [emf_succ_title.GetFullBaseName]"
				
				emf_laws_change_succ_save_contenders_effect = yes
				add_law = succ_tanistry
				current_heir = { save_event_target_as = emf_heir }

				# FIXME: I'm just guessing about Tanistry's behavior from the little, imprecise, and likely
				# inaccurate info on the CKII Wiki.

				holder_scope = {
					# Vassals are slightly upset
					any_vassal = {
						limit = {
							emf_laws_change_succ_affected_vassal_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Elector vassals are happy.
					# Regarding Tanistry, my assumptions are that empire-tier titles have king- and
					# duke-tier electors, king-tier titles have duke- and count-tier electors, duke-tier
					# titles have count- and baron-tier electors, and count-tier titles have baron-tier
					# electors.
					any_vassal = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
							OR = {
								AND = {
									event_target:emf_succ_title = { tier = EMPEROR }
									higher_real_tier_than = COUNT
									OR = {
										event_target:emf_succ_title = { is_titular = yes }
										any_demesne_title = {
											higher_tier_than = COUNT
											de_jure_liege_or_above = event_target:emf_succ_title
										}
									}
								}
								AND = {
									event_target:emf_succ_title = { tier = KING }
									higher_real_tier_than = BARON
									OR = {
										event_target:emf_succ_title = { is_titular = yes }
										any_demesne_title = {
											higher_tier_than = BARON
											de_jure_liege_or_above = event_target:emf_succ_title
										}
									}
								}
								AND = {
									event_target:emf_succ_title = { tier = DUKE }
									OR = {
										event_target:emf_succ_title = { is_titular = yes }
										any_demesne_title = {
											de_jure_liege_or_above = event_target:emf_succ_title
										}
									}
								}
								AND = {
									event_target:emf_succ_title = { tier = COUNT }
									any_demesne_title = {
										de_jure_liege = event_target:emf_succ_title
									}
								}
							}
						}
						emf_laws_change_succ_good_reaction_effect = yes
					}
					# Dynasty members are happy
					any_dynasty_member = {
						limit = { 
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_good_reaction_effect = yes
					}
					# Legitimate children are angry
					any_child = {
						limit = {
							emf_can_inherit_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_bad_reaction_effect = yes
					}
					# The former pretenders are upset if not of the ruler's dynasty
					any_opinion_modifier_target = {
						limit = {
							reverse_has_opinion_modifier = {
								who = PREV
								modifier = opinion_succ_former_pretender
							}
							NOT = { dynasty = event_target:emf_succ_changer }
						}
						emf_laws_change_succ_bad_reaction_effect = yes
						event_target:emf_succ_title = {
							if = {
								limit = { NOT = { claimed_by = PREV } }
								add_weak_claim = PREV
							}
						}
						any_spouse = {
							limit = {
								emf_laws_change_succ_vip_trigger = no
								NOT = { dynasty = event_target:emf_succ_changer }
							}
							emf_laws_change_succ_bad_reaction_effect = yes
						}
						any_child = {
							limit = {
								emf_can_inherit_trigger = yes
								emf_laws_change_succ_vip_trigger = no
								NOT = { dynasty = event_target:emf_succ_changer }
							}
							emf_laws_change_succ_bad_reaction_effect = yes
						}
					}
					# The former heir is upset if not of the ruler's dynasty
					event_target:emf_former_heir = {
						if = {
							limit = { NOT = { dynasty = event_target:emf_succ_changer } }
							event_target:emf_succ_title = { add_claim = PREV }
							emf_laws_change_succ_terrible_reaction_effect = yes
							any_spouse = {
								limit = {
									emf_laws_change_succ_vip_trigger = no
									NOT = { dynasty = event_target:emf_succ_changer }
								}
								emf_laws_change_succ_terrible_reaction_effect = yes
							}
							any_child = {
								limit = {
									emf_can_inherit_trigger = yes
									emf_laws_change_succ_vip_trigger = no
									NOT = { dynasty = event_target:emf_succ_changer }
								}
								emf_laws_change_succ_terrible_reaction_effect = yes
							}
						}
					}
				}
				
				emf_laws_change_succ_cleanup_effect = yes
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	succ_adopt_ultimogeniture = {
		youngest_child_opinion = 10
		oldest_child_opinion = -15
		child_opinion = -10
		dynasty_opinion = -5
		
		potential = {
			has_global_flag = EMF
			NOT = { has_law = succ_ultimogeniture }
			emf_laws_succ_basic_potential_trigger = yes
			holder_scope = {
				OR = {
					NOT = { religion_group = pagan_group }
					is_reformed_religion = yes
				}
				is_merchant_republic = no
				is_patrician = no
			}
			OR = {
				AND = {
					tier = baron
					is_feudal = yes
				}
				holder_scope = { is_feudal = yes }
			}
		}
		allow = {
			OR = {
				emf_laws_no_crown_law_title_trigger = yes
				emf_laws_crownlaw_title_high_ca_plus_trigger = yes
				emf_laws_holder_has_late_adminstration_plus_trigger = yes
			}
			emf_laws_no_elective_succession_voting_trigger = yes
			emf_laws_change_succ_prestige_cost_trigger = yes
		}
		effect = {
			emf_laws_change_succ_basic_effect = yes
			tooltip = { succession = ultimogeniture }
			hidden_tooltip = {
				save_event_target_as = emf_succ_title
				holder_scope = { save_event_target_as = emf_succ_changer }
				
				log = "INFO: succ_adopt_ultimogeniture: [emf_succ_changer.GetTitledFirstName] (ID: [emf_succ_changer.GetID]) changing law for the [emf_succ_title.GetFullBaseName]"
				
				emf_laws_change_succ_save_contenders_effect = yes
				add_law = succ_ultimogeniture
				current_heir = { save_event_target_as = emf_heir }

				holder_scope = {
					# Vassals are slightly upset
					any_vassal = {
						limit = {
							emf_laws_change_succ_affected_vassal_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Dynasty members are slightly upset
					any_dynasty_member = {
						limit = {
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_mild_reaction_effect = yes
					}
					# Legitimate children are angry
					any_child = {
						limit = {
							emf_can_inherit_trigger = yes
							emf_laws_change_succ_vip_trigger = no
						}
						emf_laws_change_succ_bad_reaction_effect = yes
					}
					# Heir is happy
					event_target:emf_heir = { emf_laws_change_succ_good_reaction_effect = yes }
				}
				
				set_title_flag = emf_succ_title
				holder_scope = { character_event = { id = emf_laws.10 } }
				emf_laws_change_succ_cleanup_effect = yes
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_revoke = {
			factor = 0
		}
		ai_will_do = {
			factor = 0
		}
	}
}
