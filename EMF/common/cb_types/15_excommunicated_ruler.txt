## normal scopes(including posttitle scopes) ##
#ROOT = receiver
#FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes:
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
excommunicated_ruler = {
	name = CB_NAME_EXCOMMUNICATED_RULER
	war_name = WAR_NAME_EXCOMMUNICATED_RULER
	sprite = 11
	truce_days = 3650
	allowed_to_target_tributaries = no
	allowed_to_target_suzerains = no
	is_permanent = yes
	can_ask_to_join_war = no
	can_use_gui = {
		emf_cb_can_use_gui_trigger = yes
		ROOT = { NOT = { has_character_modifier = emf_peace_pledge } }
	}
	can_use = {
		emf_cb_can_use_trigger = yes
		FROM = {
			excommunicated_for = ROOT
			in_revolt = no
			NOT = { any_current_enemy = { NOT = { religion_group = ROOT } } }
		}
		ROOT = { mercenary = no }
	}
	is_valid = { FROM = { excommunicated_for = ROOT } }
	on_add = {
		log = "CB(excommunicated_ruler): START: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}
	on_success = {
		log = "CB(excommunicated_ruler): VICTORY: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		emf_cb_holy_victory_effect = yes
		ROOT = {
			if = {
				limit = { FROM = { primary_title = { tier = BARON } } }
				ROOT = {
					piety = 30
					prestige = 50
				}
			}
			if = {
				limit = { FROM = { primary_title = { tier = COUNT } } }
				ROOT = {
					piety = 60
					prestige = 100
				}
			}
			if = {
				limit = { FROM = { primary_title = { tier = DUKE } } }
				ROOT = {
					piety = 90
					prestige = 150
				}
			}
			if = {
				limit = { FROM = { primary_title = { tier = KING } } }
				ROOT = {
					piety = 120
					prestige = 200
				}
			}
			if = {
				limit = { FROM = { primary_title = { tier = EMPEROR } } }
				ROOT = {
					piety = 250
					prestige = 400
				}
			}
		}
		FROM = {
			excommunicate = no
			prestige = -200
			rightful_religious_head_scope = {
				opinion = {
					who = PREV
					modifier = opinion_repented_sins
				}
			}
			abdicate = yes
		}
	}
	on_success_posttitle = { emf_cb_on_success_posttitle_effect = yes }
	on_fail = {
		log = "CB(excommunicated_ruler): WHITEPEACE: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		ROOT = {
			piety = -50
			prestige = -100
		}
	}
	on_reverse_demand = {
		log = "CB(excommunicated_ruler): DEFEAT: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		emf_cb_holy_defeat_effect = yes
		ROOT = {
			piety = -100
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		FROM = { prestige = 200 }
	}
	on_invalidation = {
		log = "CB(excommunicated_ruler): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	attacker_ai_defeat_worth = { factor = 100 }
	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	defender_ai_defeat_worth = { factor = 100 }
	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 10
			FROM = { ai = no }
		}
	}
}
