## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)


# Decadence Usurption
cb_decadence_usurption = {
	name = CB_NAME_DECADENCE_USURPTION
	war_name = WAR_NAME_DECADENCE_USURPTION
	sprite = 11
	truce_days = 1825
	is_permanent = yes
	
	allowed_to_target_tributaries = no
	allowed_to_target_suzerains = no
	
	can_use_gui = {
		NOT = { has_character_modifier = emf_peace_pledge }
	}
	
	can_use = {
		ROOT = {
			religion_group = muslim 
			uses_decadence = yes
			mercenary = no
		}
		FROM = {
			religion_group = muslim
			uses_decadence = yes
			trait = decadent
			dynasty = ROOT
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = { 
					ROOT = { 
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}

			primary_title = {
				is_primary_type_title = no
				is_landless_type_title = no
			}
		}
	}

	is_valid = {
		FROM = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = { 
					ROOT = { 
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
		}
	}

	on_add = {
		log = "CB(cb_decadence_usurption): START: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}
	
	on_success = {
		log = "CB(cb_decadence_usurption): VICTORY: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		emf_cb_victory_effect = yes
		
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_piety = 500
			participation_scaled_prestige = 250
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { 
				participation_scaled_piety = 500
				participation_scaled_prestige = 250
			}
		}
		FROM = {
			prisoner = ROOT
		}

		FROM = {
			primary_title = {
				if = {
					limit = { tier = count }
					emf_cb_nomadic_province_effect = yes
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			}
		}
	}

	on_fail = {
		log = "CB(cb_decadence_usurption): WHITEPEACE: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		ROOT = { 
			piety = -100
			prestige = -125
		}
		FROM = { 
			piety = 100
			prestige = 125
		}
	}

	on_reverse_demand = {
		log = "CB(cb_decadence_usurption): DEFEAT: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		emf_cb_defeat_effect = yes
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
			piety = -200
			prestige = -250
		}
		
		FROM = { 
			piety = 200
			prestige = 250
		}
	}

	on_invalidation = {
		log = "CB(cb_decadence_usurption): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = { 
		factor = 1
		
		modifier = {
			factor = 10
			FROM = { ai = no }
		}
	}
}
