## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)


claim_on_liege = {
	name = CB_NAME_CLAIM
	war_name = WAR_NAME_CLAIM_LIEGE
	sprite = 3
	truce_days = 1825
	hostile_against_others = yes

	press_claim = yes
	can_call_vassals = no
#	attacker_can_call_allies = no
	major_revolt = yes

	can_use = {
		ROOT = { emf_cb_tribute_block_trigger = yes }
	}

	can_use_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
		OR = { 
			ROOT = { has_strong_claim = PREV }
			ROOT = { has_character_flag = faction_claimant_ultimatum_taken } # Faction war. Ignore claim strength.
			AND = {
				ROOT = { has_weak_claim = PREV }
				OR = {
					is_pretender = yes # Checks vs ROOT character
					holder_scope = { has_regent = yes }
					AND = {
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
				}
			}
		}
		is_vice_royalty = no
		NOR = {
			FROM = {
				is_patrician = yes
				OR = {
					capital_holding = {
						title = PREVPREV
					}
					PREV = {
						is_primary_holder_title_tier = yes
					}
				}
			}
			ROOT = {
				is_patrician = yes
			}
		}
	}
	
	is_valid = {
		FROM = {
			in_revolt = no
			liege_before_war = {
				in_revolt = no
				liege_before_war = {
					in_revolt = no
				}
			}
		}
		ROOT = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = { 
					FROM = { 
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
		}
	}

	is_valid_title = {
		NOT = { 
			holder_scope = { 
				character = ROOT 
			} 
		}
		
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
		OR = {
			has_law = succ_feudal_elective
			ROOT = { has_claim = PREV }
		}
	}
	
	on_add = {
		emf_cb_dynlevy_begin_effect = yes
	}

	on_add_title = {
		log = "CB(claim_on_liege): START: title=[This.GetBaseName]: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}
	
	on_success = {
		emf_cb_victory_effect = yes
		
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
	}
	
	on_success_title = {
		log = "CB(claim_on_liege): VICTORY: title=[This.GetBaseName]: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		if = {
			limit = { tier = count }
			emf_cb_nomadic_province_effect = yes
		}
		FROM = {
			hidden_tooltip = { disband_event_forces = faction_loyalists }
			
			any_demesne_title = {
				limit = {
					higher_tier_than = duke
					not = { title = PREVPREV }
				}
				if = {
					limit = { has_law = crown_authority_1 }
					add_law = crown_authority_0
				}
				if = {
					limit = { has_law = crown_authority_2 }
					add_law = crown_authority_1
				}
				if = {
					limit = { has_law = crown_authority_3 }
					add_law = crown_authority_2
				}
				if = {
					limit = { has_law = crown_authority_4 }
					add_law = crown_authority_3
				}
			}
			
		}
		
		# In EMF, all title usurpations drop CA, so just show a tooltip and
		# don't really do it here (or else we'd drop it twice).
		if = {
			limit = { has_law = crown_authority_1 }
			tooltip = { add_law = crown_authority_0 }
		}
		if = {
			limit = { has_law = crown_authority_2 }
			tooltip = { add_law = crown_authority_1 }
		}
		if = {
			limit = { has_law = crown_authority_3 }
			tooltip = { add_law = crown_authority_2 }
		}
		if = {
			limit = { has_law = crown_authority_4 }
			tooltip = { add_law = crown_authority_3 }
		}
		
		if = {
			limit = {
				ROOT = {
					prisoner = yes
					host = { character = FROM  }
				}
			}
			ROOT = { prisoner = no }
		}
		
		if = {
			limit = {
				is_primary_holder_title = yes
			}
			FROM = { imprison = ROOT }
		}
		
		usurp_title_plus_barony_if_unlanded_and_vassals_no_adj = { target = ROOT type = claim }
		ROOT = { emf_dynlevy_update_effect = yes }
		if = {
			limit = {
				higher_tier_than = BARON
				NOT = { culture = ROOT }
			}
			hidden_tooltip = { conquest_culture = ROOT }
		}
		
		if = {
			limit = {
				higher_tier_than = FROM
			}
			
			FROM = {
				set_defacto_liege = ROOT
				pf_liege_change_effect = yes
			}
		}
		
		hidden_tooltip = {
			ROOT = {
				if = {
					limit = {
						has_nickname = no
						PREV = { higher_tier_than = count }
					}
					random = {
						chance = 50
						give_nickname = nick_the_usurper
					}
				}
			}
		}
		
		emf_cb_dynlevy_end_effect = yes
	}

	on_fail = {
		emf_cb_dynlevy_end_effect = yes
		
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		
		hidden_tooltip = {
			any_attacker = {
				limit = { liege = { character = FROM } }
				disband_event_forces = faction_revolters
			}
		}
		
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}

	on_fail_title = {
		log = "CB(claim_on_liege): WHITEPEACE: title=[This.GetBaseName]: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}

	on_reverse_demand = {
		emf_cb_defeat_effect = yes
		emf_cb_dynlevy_end_effect = yes
		
		ROOT = {
			prestige = -150
		}
		
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		
		hidden_tooltip = {
			any_attacker = {
				limit = { liege = { character = FROM } }
				disband_event_forces = faction_revolters
				prisoner = FROM
			}
		}
		
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}

	on_reverse_demand_title = {
		log = "CB(claim_on_liege): DEFEAT: title=[This.GetBaseName]: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}
	
	on_attacker_leader_death = {
		hidden_tooltip = {
			any_defender = {
				letter_event = {
					id = 251
				}
			}
		}
		end_war = invalid
	}

	on_invalidation = {
		log = "CB(claim_on_liege): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		emf_cb_dynlevy_end_effect = yes
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = { 
		factor = 1
		
		modifier = {
			factor = 10
			FROM = { ai = no }
		}
	}
}
