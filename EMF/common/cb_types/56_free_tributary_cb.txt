## normal scopes(including posttitle scopes) ##
#ROOT = receiver
#FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes:
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#
free_tributary_cb = {
	name = CB_NAME_FREE_TRIBUTARY
	war_name = WAR_NAME_FREE_TRIBUTARY
	sprite = 1
	truce_days = 365
	is_permanent = yes
	hostile_against_others = yes
	can_ask_to_join_war = no

	can_use_gui = {
		emf_cb_can_use_gui_trigger = yes
		NOT = { has_character_modifier = emf_peace_pledge }
	}

	can_use = {
		emf_cb_can_use_trigger = yes
		has_dlc = "Horse Lords"
		ROOT = {
			OR = {
				AND = {
					is_tributary = yes
					suzerain = {
						OR = {
							character = FROM
							any_liege = { character = FROM }
						}
					}
				}
				any_vassal = {
					is_tributary = yes
					suzerain = {
						OR = {
							character = FROM
							any_liege = { character = FROM }
						}
					}
				}
			}
		}
	}

	is_valid = {
		ROOT = {
			OR = {
				AND = {
					is_tributary = yes
					suzerain = {
						OR = {
							character = FROM
							any_liege = { character = FROM }
						}
					}
				}
				any_vassal = {
					is_tributary = yes
					suzerain = {
						OR = {
							character = FROM
							any_liege = { character = FROM }
						}
					}
				}
			}
		}
	}

	on_add = {
		log = "CB(free_tributary_cb): START: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}

	on_success = {
		log = "CB(free_tributary_cb): VICTORY: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		emf_cb_victory_effect = yes
		FROM = { prestige = -100 }
		ROOT = {
			prestige = 100
			if = {
				limit = {
					is_tributary = yes
					suzerain = {
						OR = {
							character = FROM
							any_liege = { character = FROM }
						}
					}
				}
				suzerain = { remove_tributary = PREV }
			}
			any_vassal = {
				limit = {
					is_tributary = yes
					suzerain = {
						OR = {
							character = FROM
							any_liege = { character = FROM }
						}
					}
				}
				suzerain = { remove_tributary = PREV }
			}
		}
	}

	on_success_posttitle = { emf_cb_on_success_posttitle_effect = yes }

	on_fail = {
		log = "CB(free_tributary_cb): WHITEPEACE: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		ROOT = { prestige = -100 }
		FROM = { prestige = 100 }
	}

	on_reverse_demand = {
		log = "CB(free_tributary_cb): DEFEAT: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		emf_cb_defeat_effect = yes
		ROOT = {
			prestige = -100
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		FROM = { prestige = 100 }
	}

	on_invalidation = {
		log = "CB(free_tributary_cb): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
	}

	on_attacker_leader_death = { end_war = invalid }

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
		modifier = {
			factor = 1.5
			FROM = { trait = proud }
		}
		modifier = {
			factor = 1.5
			FROM = { trait = brave }
		}
		modifier = {
			factor = 1.5
			FROM = { trait = greedy }
		}
		modifier = {
			factor = 2
			FROM = { tier = KING }
		}
		modifier = {
			factor = 0.8
			ROOT = {
				relative_power = {
					who = FROM
					power = 1.2
				}
			}
		}
		modifier = {
			factor = 0.8
			ROOT = {
				relative_power = {
					who = FROM
					power = 1.5
				}
			}
		}
		modifier = {
			factor = 0.75
			ROOT = {
				relative_power = {
					who = FROM
					power = 2.0
				}
			}
		}
		modifier = {
			factor = 0.75
			ROOT = {
				relative_power = {
					who = FROM
					power = 2.5
				}
			}
		}
		modifier = {
			factor = 0.75
			ROOT = {
				relative_power = {
					who = FROM
					power = 3
				}
			}
		}
		modifier = {
			factor = 0.7
			ROOT = {
				relative_power = {
					who = FROM
					power = 4
				}
			}
		}
		modifier = {
			factor = 0.7
			ROOT = {
				relative_power = {
					who = FROM
					power = 5
				}
			}
		}
		modifier = {
			factor = 0.7
			ROOT = {
				relative_power = {
					who = FROM
					power = 6
				}
			}
		}
		modifier = {
			factor = 0.4
			ROOT = {
				relative_power = {
					who = FROM
					power = 8
				}
			}
		}
		modifier = {
			factor = 0.1
			ROOT = {
				relative_power = {
					who = FROM
					power = 10
				}
			}
		}
		modifier = {
			factor = 5
			ROOT = {
				distance_from_realm = {
					who = FROM
					value = 20
				}
			}
		}
		modifier = {
			factor = 5
			ROOT = {
				distance_from_realm = {
					who = FROM
					value = 40
				}
			}
		}
		modifier = {
			factor = 5
			ROOT = {
				distance_from_realm = {
					who = FROM
					value = 80
				}
			}
		}
		modifier = {
			factor = 5
			ROOT = {
				distance_from_realm = {
					who = FROM
					value = 120
				}
			}
		}
	}

	ai_will_do = {
		factor = 1
		modifier = {
			factor = 1.5
		}
		modifier = {
			factor = 4
			ROOT = { trait = greedy }
		}
		modifier = {
			factor = 2
			OR = {
				ROOT = { is_nomadic = yes }
				FROM = { is_nomadic = no }
			}
		}
		modifier = {
			factor = 10
			FROM = { ai = no }
		}
	}
}
