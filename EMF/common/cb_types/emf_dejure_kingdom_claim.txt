## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)

# Given only to rulers that form/restore "historical" de jure empires
# or have Absolute CA on a de jure empire.
emf_dejure_kingdom_claim = {
	name = CB_NAME_EMF_DEJURE_KINGDOM_CLAIM
	war_name = WAR_NAME_EMF_DEJURE_KINGDOM_CLAIM
	sprite = 16
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_de_jure_tier = KING
	can_ask_to_join_war = yes

	can_use_gui = {
		ROOT = {
			not = { has_character_modifier = emf_peace_pledge }
		}
	}
	
	can_use = {
		ROOT = {
			tier = emperor
			not = { is_liege_or_above = FROM }
			religion_group = FROM # No infidels (except heretics)!
			emf_cb_tribute_block_trigger = no
		}
	}
	
	can_use_title = {
		empire = {
			holder = ROOT
			or = {
				has_law = crown_authority_4 # Always available at Absolute CA
				
				# Also available on any [de jure] held empire when CB granted by event/decision
				ROOT = { has_character_modifier = emf_cb_mod_dejure_kingdom_claim }
			}
		}
		
		# FROM controls at least 2 counties in this kingdom
		# Otherwise, use de_jure_county_claim.
		FROM = {
			num_of_realm_counties = {
				value = 2
				title = PREV
			}
		}
		
		# Unlike the other de jure claim CBs, this one actually requires a border.
		# Borders within/with the target kingdom, specifically.
		
		any_direct_de_jure_vassal_title = {
			any_direct_de_jure_vassal_title = { # County-level
				holder_scope = {
					or = {
						character = FROM
						is_liege_or_above = FROM
					}
				}
				location = {
					any_neighbor_province = {
						owner = {
							or = {
								character = ROOT
								is_liege_or_above = ROOT
							}
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		FROM = {
			any_realm_title = {
				de_jure_liege_or_above = PREVPREV
			}
		}
		empire = { holder = ROOT }
	}

	on_success = {
		emf_cb_victory_effect = yes
	}

	on_success_title = {
		emf_cb_nomadic_province_effect = yes
		FROM = {
			prestige = -200
		}
		ROOT = {
			vassalize_or_take_under_title = {
				title = PREV
				enemy = FROM
			}
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { not = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	on_fail = {
		ROOT = {
			prestige = -200
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { not = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		emf_cb_defeat_effect = yes
		ROOT = {
			prestige = -400
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { not = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = { 
		factor = 1
		
		modifier = {
			factor = 1.2
			always = yes
		}
		modifier = {
			factor = 10
			FROM = { ai = no }
		}
	}
}
